{"version":3,"file":"TimelineModal-DQnBmgBw.js","sources":["../../src/composables/useModal.ts","../../src/components/common/DetailModal.vue","../../src/composables/useBusinessParser.ts","../../src/shared/business-parsers/utils.ts","../../src/shared/business-parsers/email-parser.ts","../../src/shared/business-parsers/ai-parser.ts","../../src/shared/business-parsers/unified-processor.ts","../../src/components/common/TimelineModal.vue"],"sourcesContent":["import { ref, watch } from 'vue'\nimport { useUIStore } from '../stores/ui'\n\nexport interface ModalState {\n  show: boolean\n  isLoading: boolean\n  error: string | null\n}\n\nexport interface ModalConfig {\n  closeOnEscape?: boolean\n  closeOnClickOutside?: boolean\n  showLoadingSpinner?: boolean\n}\n\nexport function useModal(initialShow = false, config: ModalConfig = {}) {\n  const uiStore = useUIStore()\n  \n  const show = ref(initialShow)\n  const isLoading = ref(false)\n  const error = ref<string | null>(null)\n  \n  const {\n    closeOnEscape = true,\n    closeOnClickOutside = true,\n    showLoadingSpinner = true\n  } = config\n\n  const open = () => {\n    show.value = true\n    error.value = null\n  }\n\n  const close = () => {\n    show.value = false\n    error.value = null\n  }\n\n  const setLoading = (loading: boolean) => {\n    isLoading.value = loading\n  }\n\n  const setError = (err: string | Error | null) => {\n    if (err === null) {\n      error.value = null\n    } else if (typeof err === 'string') {\n      error.value = err\n    } else {\n      error.value = err.message\n    }\n    isLoading.value = false\n  }\n\n  const showToast = (type: 'success' | 'error' | 'warning' | 'info', title: string, message?: string) => {\n    uiStore.showToast(title, message || '', type)\n  }\n\n  const handleKeydown = (event: KeyboardEvent) => {\n    if (closeOnEscape && event.key === 'Escape' && show.value) {\n      close()\n    }\n  }\n\n  const handleClickOutside = () => {\n    if (closeOnClickOutside) {\n      close()\n    }\n  }\n\n  watch(show, (newShow) => {\n    if (newShow && closeOnEscape) {\n      document.addEventListener('keydown', handleKeydown)\n    } else {\n      document.removeEventListener('keydown', handleKeydown)\n    }\n  })\n\n  return {\n    // State\n    show,\n    isLoading,\n    error,\n    \n    // Actions\n    open,\n    close,\n    setLoading,\n    setError,\n    showToast,\n    handleClickOutside,\n    \n    // Computed helpers\n    hasError: () => error.value !== null,\n    canSubmit: () => !isLoading.value && error.value === null\n  }\n}","<template>\n  <Teleport to=\"body\">\n    <div\n      v-if=\"show\"\n      class=\"fixed inset-0 bg-black/60 backdrop-blur-sm z-50 flex items-center justify-center p-4 premium-modal-overlay\"\n      @click.self=\"handleClickOutside\"\n    >\n      <div class=\"w-full max-w-5xl min-h-[70vh] max-h-[90vh] modal-glassmorphism premium-modal-container overflow-hidden flex flex-col\">\n\n        <!-- Header -->\n        <div class=\"modal-header flex items-center justify-between p-4\">\n          <div class=\"flex items-center gap-4\">\n            <div class=\"modal-icon-box p-3 rounded-lg\">\n              <Icon :icon=\"headerIcon\" class=\"h-6 w-6 text-emerald-400\" />\n            </div>\n            <div>\n              <h2 class=\"text-xl font-bold text-white\">{{ title }}</h2>\n              <div v-if=\"subtitle || $slots.subtitle\" class=\"flex items-center gap-3 mt-1\">\n                <slot name=\"subtitle\">\n                  <span class=\"text-sm text-gray-400\">{{ subtitle }}</span>\n                </slot>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"flex items-center gap-2\">\n            <slot name=\"headerActions\" :isLoading=\"isLoading\"></slot>\n\n            <button\n              @click=\"$emit('close')\"\n              class=\"p-2 text-gray-400 hover:text-red-400 transition-all duration-200 rounded-lg hover:bg-red-500/10\"\n            >\n              <Icon icon=\"lucide:x\" class=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n\n        <!-- Loading State -->\n        <div v-if=\"isLoading && !hasContent\" class=\"flex items-center justify-center p-12\">\n          <div class=\"text-center\">\n            <div class=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-emerald-400\"></div>\n            <p class=\"mt-4 text-gray-300\">{{ loadingText }}</p>\n          </div>\n        </div>\n\n        <!-- Error State -->\n        <div v-else-if=\"error\" class=\"p-6 bg-red-900/10 border border-red-500/20 m-4 rounded-lg\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h2 class=\"text-lg font-semibold text-red-400 premium-text-glow\">Errore nel caricamento</h2>\n          </div>\n          <p class=\"text-gray-300\">{{ error }}</p>\n          <div class=\"mt-4 flex gap-2\">\n            <button @click=\"$emit('retry')\" class=\"btn-premium\">Riprova</button>\n            <button @click=\"$emit('close')\" class=\"btn-premium-secondary\">Chiudi</button>\n          </div>\n        </div>\n\n        <!-- Content with Tabs -->\n        <div v-else class=\"flex flex-col flex-1\">\n          <!-- Tabs Navigation -->\n          <div v-if=\"tabs.length > 1\" class=\"modal-tabs flex items-center justify-center gap-1 p-3\">\n            <button\n              v-for=\"tab in tabs\"\n              :key=\"tab.id\"\n              @click=\"activeTab = tab.id\"\n              :class=\"[\n                'flex items-center justify-center px-4 py-2 rounded-lg text-sm transition-all duration-200',\n                activeTab === tab.id\n                  ? 'bg-emerald-500/20 text-emerald-400 border border-emerald-500/30'\n                  : 'text-gray-400 hover:bg-white/5 hover:text-white'\n              ]\"\n            >\n              {{ tab.label }}\n            </button>\n          </div>\n\n          <!-- Tab Content -->\n          <div class=\"overflow-y-auto flex-1\" style=\"max-height: calc(85vh - 120px);\">\n            <slot\n              :name=\"activeTab\"\n              :activeTab=\"activeTab\"\n              :isLoading=\"isLoading\"\n              :error=\"error\"\n              :data=\"data\"\n            >\n              <div class=\"p-6\">\n                <slot name=\"default\" :activeTab=\"activeTab\" :data=\"data\"></slot>\n              </div>\n            </slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { useModal } from '../../composables/useModal'\n\nexport interface Tab {\n  id: string\n  label: string\n  icon: any\n}\n\ninterface Props {\n  show: boolean\n  title: string\n  subtitle?: string\n  headerIcon?: any\n  tabs?: Tab[]\n  defaultTab?: string\n  loadingText?: string\n  isLoading?: boolean\n  error?: string | null\n  data?: any\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  headerIcon: 'lucide:file-text',\n  tabs: () => [],\n  loadingText: 'Caricamento dati...',\n  isLoading: false,\n  error: null,\n  data: null\n})\n\nconst emit = defineEmits<{\n  close: []\n  retry: []\n  tabChanged: [tabId: string]\n}>()\n\nconst { handleClickOutside } = useModal(false)\n\nconst activeTab = ref(props.defaultTab || props.tabs[0]?.id || 'default')\n\nconst hasContent = computed(() => {\n  return props.data !== null || props.error !== null\n})\n\nconst modalClickOutside = () => {\n  handleClickOutside()\n  emit('close')\n}\n\n\nconst changeTab = (tabId: string) => {\n  activeTab.value = tabId\n  emit('tabChanged', tabId)\n}\n</script>\n\n<style scoped>\n/* Glassmorphism Modal Theme - Insights Style */\n.modal-glassmorphism {\n  background: linear-gradient(135deg,\n    rgba(15, 15, 15, 0.95) 0%,\n    rgba(20, 20, 20, 0.9) 100%);\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow:\n    0 20px 60px rgba(0, 0, 0, 0.5),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  border-radius: 16px;\n}\n\n.modal-header {\n  background: linear-gradient(135deg,\n    rgba(30, 30, 30, 0.5) 0%,\n    rgba(25, 25, 25, 0.3) 100%);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.modal-icon-box {\n  background: linear-gradient(135deg,\n    rgba(16, 185, 129, 0.15) 0%,\n    rgba(16, 185, 129, 0.05) 100%);\n  border: 1px solid rgba(16, 185, 129, 0.2);\n  box-shadow: 0 0 20px rgba(16, 185, 129, 0.1);\n}\n\n.modal-tabs {\n  background: rgba(20, 20, 20, 0.5);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n/* Premium Modal Animations */\n.premium-modal-overlay {\n  animation: modalOverlayFadeIn 0.15s ease-out;\n}\n\n.premium-modal-container {\n  animation: modalSlideIn 0.2s cubic-bezier(0.34, 1.56, 0.64, 1);\n}\n\n@keyframes modalOverlayFadeIn {\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@keyframes modalSlideIn {\n  0% {\n    transform: translateY(-20px) scale(0.95);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0) scale(1);\n    opacity: 1;\n  }\n}\n\n/* Enhanced scrollbar for content */\n.overflow-y-auto::-webkit-scrollbar {\n  width: 6px;\n}\n\n.overflow-y-auto::-webkit-scrollbar-track {\n  background: rgba(17, 24, 39, 0.5);\n  border-radius: 3px;\n}\n\n.overflow-y-auto::-webkit-scrollbar-thumb {\n  background: rgba(16, 185, 129, 0.3);\n  border-radius: 3px;\n}\n\n.overflow-y-auto::-webkit-scrollbar-thumb:hover {\n  background: rgba(16, 185, 129, 0.5);\n}\n\n</style>","export interface ParsedBusinessData {\n  summary: string\n  details: string[]\n  type: 'email' | 'ai' | 'order' | 'vector' | 'parcel' | 'reply' | 'workflow' | 'generic' | 'document' | 'dataset' | 'statistical' | 'error'\n  confidence: 'high' | 'medium' | 'low'\n}\n\nexport interface IntelligentSummary {\n  type: 'document' | 'dataset' | 'statistical' | 'ai_generated' | 'email_batch' | 'api_response' | 'generic' | 'direct' | 'pre-processed'\n  summaryType: 'document' | 'dataset' | 'emails' | 'api' | 'statistics' | 'ai' | 'generic' | 'direct'\n  businessSummary?: {\n    title: string\n    description: string\n    [key: string]: any\n  }\n  metrics?: Record<string, any>\n  preview?: any\n  businessInsight?: string\n  statistics?: any\n  dataQuality?: any\n  visualization?: any\n  recommendations?: string[]\n  actions?: string[]\n  fullDataAvailable?: boolean\n}\n\nexport function useBusinessParser() {\n  \n  const sanitizeNodeType = (nodeType?: string): string => {\n    if (!nodeType) return ''\n    return nodeType\n      .replace(/n8n/gi, 'WFEngine')\n      .replace(/\\.nodes\\./g, '.engine.')\n      .replace(/\\.base\\./g, '.core.')\n  }\n\n  const extractEmailData = (data: any): ParsedBusinessData | null => {\n    if (!data?.json) return null\n\n    const insights: string[] = []\n    \n    // Oggetto email\n    const subject = data.json.oggetto || data.json.subject\n    if (subject) {\n      insights.push(`Oggetto: \"${subject}\"`)\n    }\n    \n    // Mittente\n    const senderFields = [\n      data.json.mittente,\n      data.json.mittente_nome,\n      data.json.sender?.emailAddress?.address,\n      data.sender?.emailAddress?.address\n    ]\n    const sender = senderFields.find(field => field)\n    if (sender) {\n      insights.push(`Da: ${sender}`)\n    }\n    \n    // Contenuto email\n    const emailBodyFields = [\n      data.json.messaggio_cliente,\n      data.json.messaggio,\n      data.json.body?.content,\n      data.json.body,\n      data.json.content\n    ]\n    const emailBody = emailBodyFields.find(field => \n      field && typeof field === 'string' && field.length > 20\n    )\n    \n    if (emailBody) {\n      const cleanContent = emailBody\n        .replace(/<[^>]+>/g, ' ')\n        .replace(/&[a-zA-Z0-9]+;/g, ' ')\n        .replace(/\\s+/g, ' ')\n        .trim()\n      const preview = cleanContent.substring(0, 150)\n      insights.push(`Messaggio: \"${preview}${preview.length >= 150 ? '...' : ''}\"`)\n    }\n\n    return insights.length > 0 ? {\n      summary: 'Email ricevuta',\n      details: insights,\n      type: 'email',\n      confidence: 'high'\n    } : null\n  }\n\n  const extractAIData = (data: any): ParsedBusinessData | null => {\n    if (!data?.json) return null\n\n    const insights: string[] = []\n    \n    // Risposta AI\n    const aiResponseFields = [\n      data.json.output?.risposta_html,\n      data.json.risposta_html,\n      data.json.ai_response,\n      data.json.response,\n      data.json.output\n    ]\n    \n    const aiResponse = aiResponseFields.find(field => \n      field && typeof field === 'string' && field.length > 20\n    )\n    \n    if (aiResponse) {\n      const cleanResponse = aiResponse\n        .replace(/<[^>]+>/g, ' ')\n        .replace(/&[a-zA-Z0-9]+;/g, ' ')\n        .replace(/\\s+/g, ' ')\n        .trim()\n      const preview = cleanResponse.substring(0, 200)\n      insights.push(`Risposta: \"${preview}${preview.length >= 200 ? '...' : ''}\"`)\n    }\n    \n    // Categoria/Classificazione\n    if (data.json.categoria || data.json.classification) {\n      insights.push(`Categoria: ${data.json.categoria || data.json.classification}`)\n    }\n\n    return insights.length > 0 ? {\n      summary: 'Risposta AI generata',\n      details: insights,\n      type: 'ai',\n      confidence: 'high'\n    } : null\n  }\n\n  const extractOrderData = (data: any): ParsedBusinessData | null => {\n    if (!data?.json) return null\n\n    const insights: string[] = []\n    \n    if (data.json.order_reference) {\n      insights.push(`Riferimento: ${data.json.order_reference}`)\n    }\n    if (data.json.customer_full_name) {\n      insights.push(`Cliente: ${data.json.customer_full_name}`)\n    }\n    if (data.json.order_status) {\n      insights.push(`Stato: ${data.json.order_status}`)\n    }\n    if (data.json.order_total_paid) {\n      insights.push(`Totale: ${data.json.order_total_paid}`)\n    }\n    if (data.json.delivery_city) {\n      insights.push(`Città consegna: ${data.json.delivery_city}`)\n    }\n    if (data.json.order_shipping_number) {\n      insights.push(`Tracking: ${data.json.order_shipping_number}`)\n    }\n\n    return insights.length > 0 ? {\n      summary: 'Dati ordine recuperati',\n      details: insights,\n      type: 'order',\n      confidence: 'high'\n    } : null\n  }\n\n  const extractVectorData = (data: any): ParsedBusinessData | null => {\n    if (!data?.json) return null\n\n    const insights: string[] = []\n    \n    if (data.json.matches || data.json.results) {\n      const matches = data.json.matches || data.json.results\n      const count = Array.isArray(matches) ? matches.length : 1\n      insights.push(`Documenti trovati: ${count}`)\n    }\n    \n    if (data.json.score || data.json.similarity) {\n      insights.push(`Similarità: ${data.json.score || data.json.similarity}`)\n    }\n    \n    if (data.json.content || data.json.text) {\n      const content = data.json.content || data.json.text\n      const preview = content.substring(0, 100)\n      insights.push(`Contenuto: \"${preview}${preview.length >= 100 ? '...' : ''}\"`)\n    }\n\n    return insights.length > 0 ? {\n      summary: 'Ricerca vettoriale completata',\n      details: insights,\n      type: 'vector',\n      confidence: 'medium'\n    } : null\n  }\n\n  const extractGenericData = (data: any): ParsedBusinessData => {\n    const dataString = JSON.stringify(data)\n    const insights: string[] = []\n    \n    // Cerca email\n    const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/g\n    const emails = dataString.match(emailRegex)\n    if (emails && emails.length > 0) {\n      insights.push(`Email rilevata: ${emails[0]}`)\n    }\n    \n    // Mostra chiavi principali\n    const processData = Array.isArray(data) ? data[0] : data\n    if (processData && typeof processData === 'object') {\n      const keys = Object.keys(processData.json || processData)\n      if (keys.length > 0) {\n        insights.push(`Campi disponibili: ${keys.slice(0, 4).join(', ')}${keys.length > 4 ? '...' : ''}`)\n      }\n    }\n\n    return {\n      summary: 'Dati di processo',\n      details: insights.length > 0 ? insights : ['Dati complessi disponibili'],\n      type: 'generic',\n      confidence: 'low'\n    }\n  }\n\n  const parseBusinessData = (\n    data: any, \n    dataType: 'input' | 'output', \n    nodeType?: string, \n    nodeName?: string\n  ): ParsedBusinessData => {\n    \n    const sanitizedType = sanitizeNodeType(nodeType)\n    const nodeNameLower = nodeName?.toLowerCase() || ''\n    \n    // Check for trigger nodes\n    const isTriggerNode = sanitizedType?.includes('trigger') || \n                         sanitizedType?.includes('Trigger') ||\n                         nodeNameLower.includes('ricezione') ||\n                         nodeNameLower.includes('trigger')\n    \n    if (isTriggerNode && dataType === 'input') {\n      return {\n        summary: 'In attesa di eventi',\n        details: ['In attesa di nuove email dal server Microsoft Outlook'],\n        type: 'email',\n        confidence: 'high'\n      }\n    }\n    \n    // Handle execution error nodes with complete n8n error details\n    if (sanitizedType === 'execution_error' || nodeNameLower.includes('execution error')) {\n      let errorSummary = 'Errore di Esecuzione';\n      let errorDetails = ['Il workflow ha riscontrato un errore durante l\\'esecuzione'];\n      \n      // Extract comprehensive n8n error details if available\n      if (data && typeof data === 'object') {\n        if (data.n8nErrorDetails || data.errorType) {\n          const errorType = data.errorType || 'Unknown Error';\n          const nodeName = data.failedNode || 'Unknown Node';\n          const message = data.specificErrorMessage || 'Error details not available';\n          const stackTrace = data.stackTrace;\n          const httpCode = data.httpCode;\n          const timestamp = data.errorTimestamp;\n          \n          errorSummary = `${errorType}: ${nodeName}`;\n          \n          errorDetails = [\n            `Errore: ${message}`,\n            `Nodo Fallito: ${nodeName}`,\n            `Tipo Errore: ${errorType}`\n          ];\n          \n          // Add HTTP code if available\n          if (httpCode) {\n            errorDetails.push(`Codice HTTP: ${httpCode}`);\n          }\n          \n          // Add timestamp if available\n          if (timestamp) {\n            const date = new Date(timestamp);\n            errorDetails.push(`Timestamp: ${date.toLocaleString('it-IT')}`);\n          }\n          \n          // Add stack trace info (truncated for UI)\n          if (stackTrace && stackTrace.includes('at ')) {\n            const firstLine = stackTrace.split('\\n')[0];\n            errorDetails.push(`Stack: ${firstLine}`);\n          }\n          \n          // Add resolution hints based on error type\n          if (errorType === 'NodeApiError') {\n            errorDetails.push('Suggerimento: Verificare connessioni API e credenziali');\n          } else if (message.toLowerCase().includes('connection')) {\n            errorDetails.push('Suggerimento: Controllare connettività di rete');\n          } else if (message.toLowerCase().includes('auth')) {\n            errorDetails.push('Suggerimento: Verificare le credenziali di autenticazione');\n          }\n        }\n      }\n      \n      return {\n        summary: errorSummary,\n        details: errorDetails,\n        type: 'error',\n        confidence: 'high'\n      }\n    }\n    \n    if (!data) {\n      return {\n        summary: 'Nessun dato',\n        details: ['Nessun dato disponibile per questo step'],\n        type: 'generic',\n        confidence: 'high'\n      }\n    }\n\n    // Process data\n    const processData = Array.isArray(data) ? data[0] : data\n    \n    if (!processData || typeof processData !== 'object') {\n      return {\n        summary: 'Dato semplice',\n        details: [String(processData) || 'Dato non strutturato'],\n        type: 'generic',\n        confidence: 'medium'\n      }\n    }\n\n    // Try specific parsers based on node type/name\n    const isEmailNode = nodeNameLower.includes('mail') || nodeNameLower.includes('ricezione')\n    const isAINode = nodeNameLower.includes('milena') || nodeNameLower.includes('assistente') || nodeNameLower.includes('ai')\n    const isOrderNode = nodeNameLower.includes('ordini') || nodeNameLower.includes('order')\n    const isVectorNode = nodeNameLower.includes('qdrant') || nodeNameLower.includes('vector')\n\n    if (isEmailNode && dataType === 'output') {\n      const emailData = extractEmailData(processData)\n      if (emailData) return emailData\n    }\n    \n    if (isAINode && dataType === 'output') {\n      const aiData = extractAIData(processData)\n      if (aiData) return aiData\n    }\n    \n    if (isOrderNode) {\n      const orderData = extractOrderData(processData)\n      if (orderData) return orderData\n    }\n    \n    if (isVectorNode && dataType === 'output') {\n      const vectorData = extractVectorData(processData)\n      if (vectorData) return vectorData\n    }\n\n    // Fallback to generic parsing\n    return extractGenericData(processData)\n  }\n\n  const formatBusinessData = (parsedData: ParsedBusinessData): string => {\n    const header = `--- ${parsedData.summary.toUpperCase()} ---`\n    const details = parsedData.details.join('\\n')\n    return `${header}\\n${details}`\n  }\n\n  const formatTimelineStepData = (\n    inputData: any, \n    outputData: any, \n    nodeType?: string, \n    nodeName?: string\n  ): { inputSummary: string; outputSummary: string; businessValue: string } => {\n    \n    const parsedInput = parseBusinessData(inputData, 'input', nodeType, nodeName)\n    const parsedOutput = parseBusinessData(outputData, 'output', nodeType, nodeName)\n    \n    // Create detailed summaries for timeline display with full business content\n    let inputSummary = parsedInput.details.length > 0 \n      ? parsedInput.details.join(' • ')\n      : parsedInput.summary\n    \n    let outputSummary = parsedOutput.details.length > 0 \n      ? parsedOutput.details.join(' • ')\n      : parsedOutput.summary\n    \n    // Extract real business content based on node type from raw data\n    const nodeNameLower = nodeName?.toLowerCase() || ''\n    \n    // EMAIL NODES - Extract email content\n    if (nodeNameLower.includes('mail') || nodeNameLower.includes('ricezione') || parsedOutput.type === 'email') {\n      const emailContent = outputData?.body?.content || \n                          outputData?.json?.body?.content || \n                          outputData?.main?.json?.body?.content ||\n                          inputData?.body?.content || \n                          inputData?.json?.body?.content ||\n                          inputData?.main?.json?.body?.content\n                          \n      if (emailContent && typeof emailContent === 'string') {\n        // Improved HTML cleaning for human readability\n        let cleanContent = emailContent\n          // Remove HTML tags completely\n          .replace(/<script[^>]*>.*?<\\/script>/gi, '')\n          .replace(/<style[^>]*>.*?<\\/style>/gi, '')\n          .replace(/<[^>]+>/g, ' ')\n          // Decode HTML entities\n          .replace(/&nbsp;/g, ' ')\n          .replace(/&amp;/g, '&')\n          .replace(/&lt;/g, '<')\n          .replace(/&gt;/g, '>')\n          .replace(/&quot;/g, '\"')\n          .replace(/&#039;/g, \"'\")\n          .replace(/&[a-zA-Z0-9]+;/g, ' ')\n          // Clean whitespace\n          .replace(/\\r\\n/g, ' ')\n          .replace(/\\n/g, ' ')\n          .replace(/\\t/g, ' ')\n          .replace(/\\s+/g, ' ')\n          .trim()\n        \n        if (cleanContent.length > 20) {\n          // Extract meaningful content, not HTML metadata\n          // Skip if it's just HTML boilerplate\n          if (!cleanContent.toLowerCase().includes('content-type') && \n              !cleanContent.toLowerCase().includes('charset') &&\n              !cleanContent.toLowerCase().includes('viewport')) {\n            const preview = cleanContent.length > 150 ? cleanContent.substring(0, 150) + '...' : cleanContent\n            outputSummary = `Email received: \"${preview}\"`\n          } else {\n            // Try to extract email metadata instead\n            const subject = outputData?.oggetto || outputData?.json?.oggetto || inputData?.oggetto || inputData?.json?.oggetto\n            const sender = outputData?.mittente || outputData?.json?.mittente || inputData?.mittente || inputData?.json?.mittente\n            if (subject && sender) {\n              outputSummary = `Email from ${sender} - Subject: \"${subject}\"`\n            } else if (subject) {\n              outputSummary = `Email received - Subject: \"${subject}\"`\n            } else {\n              outputSummary = `Customer email received and processed`\n            }\n          }\n        }\n      }\n      \n      // Email response nodes - get the sent email content\n      if (nodeNameLower.includes('rispond')) {\n        const responseContent = outputData?.body?.content || outputData?.json?.body?.content\n        if (responseContent && typeof responseContent === 'string') {\n          const cleanResponse = responseContent.replace(/<[^>]*>/g, '').replace(/\\s+/g, ' ').trim()\n          const preview = cleanResponse.length > 200 ? cleanResponse.substring(0, 200) + '...' : cleanResponse\n          outputSummary = `Email sent: \"${preview}\"`\n        }\n      }\n    }\n    \n    // AI AGENT NODES - Extract AI response\n    else if (nodeNameLower.includes('milena') || nodeNameLower.includes('assistente') || nodeType === 'ai_agent') {\n      const aiResponse = outputData?.output?.risposta_html || \n                        outputData?.json?.output?.risposta_html ||\n                        outputData?.response || \n                        outputData?.json?.response ||\n                        outputData?.main?.json?.output?.risposta_html\n                        \n      if (aiResponse && typeof aiResponse === 'string') {\n        const cleanResponse = aiResponse.replace(/<[^>]*>/g, '').replace(/\\s+/g, ' ').trim()\n        const preview = cleanResponse.length > 200 ? cleanResponse.substring(0, 200) + '...' : cleanResponse\n        outputSummary = `AI Response: \"${preview}\"`\n      }\n    }\n    \n    // VECTOR SEARCH NODES - Extract search results\n    else if (nodeNameLower.includes('qdrant') || nodeNameLower.includes('vector') || nodeType === 'vector_search') {\n      const searchResults = outputData?.ai_tool?.json?.response || \n                           outputData?.json?.response ||\n                           outputData?.response ||\n                           outputData?.main?.ai_tool?.json?.response\n                           \n      if (searchResults && Array.isArray(searchResults)) {\n        const resultCount = searchResults.length\n        const firstResult = searchResults[0]\n        if (firstResult && typeof firstResult.text === 'string') {\n          try {\n            const parsedResult = JSON.parse(firstResult.text)\n            const content = parsedResult.pageContent || parsedResult.content\n            if (content) {\n              const preview = content.length > 150 ? content.substring(0, 150) + '...' : content\n              outputSummary = `Found ${resultCount} documents: \"${preview}\"`\n            }\n          } catch (e) {\n            outputSummary = `Found ${resultCount} search results`\n          }\n        } else {\n          outputSummary = `Found ${resultCount} search results`\n        }\n      }\n    }\n    \n    // ORDER/PARCEL LOOKUP NODES - Extract order info\n    else if (nodeNameLower.includes('ordini') || nodeNameLower.includes('parcel') || nodeType === 'order_lookup' || nodeType === 'parcel_tracking') {\n      const orderData = outputData?.json || outputData?.main?.json || outputData\n      \n      if (orderData) {\n        const details = []\n        if (orderData.order_reference) details.push(`Order: ${orderData.order_reference}`)\n        if (orderData.customer_full_name) details.push(`Customer: ${orderData.customer_full_name}`)\n        if (orderData.order_status) details.push(`Status: ${orderData.order_status}`)\n        if (orderData.tracking_number) details.push(`Tracking: ${orderData.tracking_number}`)\n        if (orderData.delivery_status) details.push(`Delivery: ${orderData.delivery_status}`)\n        \n        if (details.length > 0) {\n          outputSummary = details.join(' • ')\n        }\n      }\n    }\n    \n    // SUB-WORKFLOW NODES - Extract workflow execution info\n    else if (nodeNameLower.includes('execute') || nodeNameLower.includes('workflow') || nodeType === 'sub_workflow') {\n      const workflowResult = outputData?.json || outputData?.main?.json || outputData\n      \n      if (workflowResult) {\n        const details = []\n        if (workflowResult.workflow_name) details.push(`Workflow: ${workflowResult.workflow_name}`)\n        if (workflowResult.execution_status) details.push(`Status: ${workflowResult.execution_status}`)\n        if (workflowResult.duration) details.push(`Duration: ${workflowResult.duration}ms`)\n        if (workflowResult.nodes_executed) details.push(`Nodes: ${workflowResult.nodes_executed}`)\n        \n        if (details.length > 0) {\n          outputSummary = details.join(' • ')\n        } else {\n          outputSummary = `Sub-workflow executed successfully`\n        }\n      }\n    }\n    \n    // Limit summary lengths for UI display\n    if (inputSummary.length > 150) {\n      inputSummary = inputSummary.substring(0, 150) + '...'\n    }\n    if (outputSummary.length > 250) {\n      outputSummary = outputSummary.substring(0, 250) + '...'\n    }\n    \n    // Generate business value based on node type and data\n    const businessValue = generateBusinessValue(parsedInput, parsedOutput, nodeType, nodeName)\n    \n    return {\n      inputSummary,\n      outputSummary,\n      businessValue\n    }\n  }\n\n  const generateBusinessValue = (\n    parsedInput: ParsedBusinessData,\n    parsedOutput: ParsedBusinessData,\n    nodeType?: string,\n    nodeName?: string\n  ): string => {\n    \n    const nodeNameLower = nodeName?.toLowerCase() || ''\n    \n    // AI nodes\n    if (nodeNameLower.includes('milena') || nodeNameLower.includes('assistente') || parsedOutput.type === 'ai') {\n      return 'Risposta intelligente generata per il cliente'\n    }\n    \n    // Email nodes\n    if (nodeNameLower.includes('mail') || nodeNameLower.includes('ricezione') || parsedOutput.type === 'email') {\n      if (nodeNameLower.includes('ricezione')) {\n        return 'Email cliente acquisita nel sistema'\n      } else {\n        return 'Comunicazione inviata al cliente'\n      }\n    }\n    \n    // Database/Storage nodes\n    if (nodeNameLower.includes('supabase') || nodeNameLower.includes('database') || parsedOutput.type === 'order') {\n      return 'Dati salvati nel sistema aziendale'\n    }\n    \n    // Processing nodes\n    if (nodeNameLower.includes('extractor') || nodeNameLower.includes('parser')) {\n      return 'Informazioni estratte e processate'\n    }\n    \n    // HTTP/API nodes\n    if (nodeType?.includes('http') || nodeNameLower.includes('api')) {\n      return 'Integrazione esterna completata'\n    }\n    \n    // Generic value\n    return 'Operazione completata con successo'\n  }\n\n  const parseIntelligentSummary = (summary: IntelligentSummary): ParsedBusinessData => {\n    // Convert intelligent summary to parsed business data format\n    const details: string[] = []\n    \n    // Add business summary as primary detail\n    if (summary.businessSummary) {\n      details.push(summary.businessSummary.description)\n      \n      // Add specific details based on summary type\n      if (summary.summaryType === 'document' && summary.businessSummary.pageCount) {\n        details.push(`Pages: ${summary.businessSummary.pageCount}`)\n      }\n      if (summary.summaryType === 'dataset') {\n        if (summary.businessSummary.totalRows) {\n          details.push(`Rows: ${summary.businessSummary.totalRows}`)\n        }\n        if (summary.businessSummary.totalColumns) {\n          details.push(`Columns: ${summary.businessSummary.totalColumns}`)\n        }\n      }\n    }\n    \n    // Add key metrics\n    if (summary.metrics) {\n      Object.entries(summary.metrics).slice(0, 3).forEach(([key, value]) => {\n        details.push(`${key}: ${value}`)\n      })\n    }\n    \n    // Add business insight\n    if (summary.businessInsight) {\n      details.push(`Insight: ${summary.businessInsight}`)\n    }\n    \n    // Map summary type to ParsedBusinessData type\n    let dataType: ParsedBusinessData['type'] = 'generic'\n    switch (summary.summaryType) {\n      case 'document':\n        dataType = 'document'\n        break\n      case 'dataset':\n        dataType = 'dataset'\n        break\n      case 'emails':\n        dataType = 'email'\n        break\n      case 'statistics':\n        dataType = 'statistical'\n        break\n      case 'ai':\n        dataType = 'ai'\n        break\n    }\n    \n    return {\n      summary: summary.businessSummary?.title || 'Process Data',\n      details,\n      type: dataType,\n      confidence: summary.type === 'ai_generated' ? 'medium' : 'high'\n    }\n  }\n\n  const formatIntelligentData = (summary: IntelligentSummary): string => {\n    const parsed = parseIntelligentSummary(summary)\n    return formatBusinessData(parsed)\n  }\n\n  return {\n    parseBusinessData,\n    formatBusinessData,\n    formatTimelineStepData,\n    sanitizeNodeType,\n    parseIntelligentSummary,\n    formatIntelligentData\n  }\n}","/**\n * Shared Utility Functions\n * Common utilities used across all parsers\n */\n\n/**\n * Clean HTML content - Single implementation for all components\n */\nexport function cleanHtmlContent(content: string): string {\n  if (!content) return ''\n\n  return content\n    .replace(/<[^>]+>/g, ' ')           // Remove HTML tags\n    .replace(/&[a-zA-Z0-9]+;/g, ' ')    // Remove HTML entities\n    .replace(/\\s+/g, ' ')                // Normalize whitespace\n    .replace(/\\n{3,}/g, '\\n\\n')          // Limit consecutive newlines\n    .trim()\n}\n\n/**\n * Truncate text intelligently at word boundaries\n */\nexport function truncateText(text: string, maxLength: number = 150): string {\n  if (!text || text.length <= maxLength) return text\n\n  const truncated = text.substring(0, maxLength)\n  const lastSpace = truncated.lastIndexOf(' ')\n\n  return lastSpace > 0\n    ? truncated.substring(0, lastSpace) + '...'\n    : truncated + '...'\n}\n\n/**\n * Extract first meaningful line from text\n */\nexport function extractFirstLine(text: string): string {\n  if (!text) return ''\n\n  const lines = text.split('\\n').filter(line => line.trim().length > 0)\n  return lines[0] || ''\n}\n\n/**\n * Detect data type from content structure\n */\nexport function detectDataType(data: any): 'email' | 'ai' | 'order' | 'vector' | 'generic' {\n  if (!data) return 'generic'\n\n  // Email detection\n  if (data.subject || data.oggetto || data.sender || data.mittente || data.email_body) {\n    return 'email'\n  }\n\n  // AI response detection\n  if (data.ai_response || data.risposta_html || data.output?.risposta_html ||\n      data.chatResponse || data.gpt_response) {\n    return 'ai'\n  }\n\n  // Order detection\n  if (data.orderId || data.order_id || data.items || data.orderDetails) {\n    return 'order'\n  }\n\n  // Vector search detection\n  if (data.vector_results || data.similarity_search || data.embeddings) {\n    return 'vector'\n  }\n\n  return 'generic'\n}\n\n/**\n * Format date consistently across the application\n */\nexport function formatBusinessDate(date: string | Date): string {\n  if (!date) return ''\n\n  const d = new Date(date)\n  if (isNaN(d.getTime())) return ''\n\n  return new Intl.DateTimeFormat('it-IT', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(d)\n}\n\n/**\n * Calculate confidence based on data completeness\n */\nexport function calculateConfidence(data: any): 'high' | 'medium' | 'low' {\n  if (!data) return 'low'\n\n  const fields = Object.keys(data).filter(key => data[key] !== null && data[key] !== undefined)\n  const fieldCount = fields.length\n\n  if (fieldCount > 5) return 'high'\n  if (fieldCount > 2) return 'medium'\n  return 'low'\n}","/**\n * Unified Email Parser\n * Single source of truth for email parsing logic\n */\n\nimport { BusinessParsingResult, EmailData } from './types'\nimport { cleanHtmlContent, truncateText, calculateConfidence } from './utils'\n\nexport class EmailParser {\n  /**\n   * Parse email data from any source format\n   */\n  static parse(data: any): BusinessParsingResult {\n    const emailData = this.extractEmailData(data)\n    const confidence = calculateConfidence(emailData)\n\n    const details: string[] = []\n    let summary = 'Email received'\n\n    if (emailData.subject) {\n      summary = `Email: ${truncateText(emailData.subject, 100)}`\n      details.push(`Subject: ${emailData.subject}`)\n    }\n\n    if (emailData.sender) {\n      details.push(`From: ${emailData.sender}`)\n    }\n\n    if (emailData.recipient) {\n      details.push(`To: ${emailData.recipient}`)\n    }\n\n    if (emailData.body) {\n      const cleanBody = cleanHtmlContent(emailData.body)\n      const preview = truncateText(cleanBody, 200)\n      if (preview) {\n        details.push(`Content: ${preview}`)\n      }\n    }\n\n    if (emailData.attachments && emailData.attachments.length > 0) {\n      details.push(`Attachments: ${emailData.attachments.length} file(s)`)\n    }\n\n    return {\n      summary,\n      details,\n      type: 'email',\n      confidence,\n      metadata: emailData,\n      businessValue: this.extractBusinessValue(emailData)\n    }\n  }\n\n  /**\n   * Extract email data from various formats\n   */\n  private static extractEmailData(data: any): EmailData {\n    if (!data) return {}\n\n    const result: EmailData = {}\n\n    // Handle nested json structure\n    const jsonData = data.json || data\n\n    // Subject extraction - multiple field names\n    result.subject = jsonData.subject ||\n                    jsonData.oggetto ||\n                    jsonData.email_subject ||\n                    jsonData.Subject ||\n                    jsonData.title\n\n    // Sender extraction\n    result.sender = jsonData.sender ||\n                   jsonData.mittente ||\n                   jsonData.from ||\n                   jsonData.From ||\n                   jsonData.email_from ||\n                   jsonData.sender_email\n\n    // Recipient extraction\n    result.recipient = jsonData.recipient ||\n                      jsonData.destinatario ||\n                      jsonData.to ||\n                      jsonData.To ||\n                      jsonData.email_to\n\n    // Body extraction - check multiple possible fields\n    result.body = jsonData.body ||\n                 jsonData.email_body ||\n                 jsonData.corpo ||\n                 jsonData.message ||\n                 jsonData.content ||\n                 jsonData.text ||\n                 jsonData.html ||\n                 jsonData.email_content\n\n    // Attachments extraction\n    if (jsonData.attachments || jsonData.allegati) {\n      result.attachments = jsonData.attachments || jsonData.allegati\n    }\n\n    // Timestamp extraction\n    result.timestamp = jsonData.timestamp ||\n                      jsonData.date ||\n                      jsonData.received_at ||\n                      jsonData.sent_at\n\n    return result\n  }\n\n  /**\n   * Extract business value from email\n   */\n  private static extractBusinessValue(emailData: EmailData): string {\n    const indicators = []\n\n    // Check for customer communication\n    if (emailData.subject) {\n      const subject = emailData.subject.toLowerCase()\n      if (subject.includes('order') || subject.includes('ordine')) {\n        indicators.push('Order-related')\n      }\n      if (subject.includes('support') || subject.includes('help') || subject.includes('assistenza')) {\n        indicators.push('Support request')\n      }\n      if (subject.includes('urgent') || subject.includes('urgente')) {\n        indicators.push('High priority')\n      }\n      if (subject.includes('invoice') || subject.includes('fattura')) {\n        indicators.push('Financial')\n      }\n    }\n\n    // Check sender domain for importance\n    if (emailData.sender) {\n      const sender = emailData.sender.toLowerCase()\n      if (sender.includes('.com') || sender.includes('.it')) {\n        const domain = sender.split('@')[1]\n        if (domain) {\n          if (domain.includes('google') || domain.includes('microsoft') || domain.includes('amazon')) {\n            indicators.push('Major vendor')\n          }\n        }\n      }\n    }\n\n    return indicators.length > 0\n      ? indicators.join(', ')\n      : 'Standard communication'\n  }\n\n  /**\n   * Generate business-friendly summary\n   */\n  static generateSummary(emailData: EmailData): string {\n    if (emailData.subject) {\n      return `Processed email: \"${truncateText(emailData.subject, 80)}\"`\n    }\n    if (emailData.sender) {\n      return `Email received from ${emailData.sender}`\n    }\n    return 'Email communication processed'\n  }\n}","/**\n * Unified AI Response Parser\n * Single source of truth for AI response parsing logic\n */\n\nimport { BusinessParsingResult, AIResponseData } from './types'\nimport { cleanHtmlContent, truncateText, calculateConfidence } from './utils'\n\nexport class AIResponseParser {\n  /**\n   * Parse AI response data from any source format\n   */\n  static parse(data: any): BusinessParsingResult {\n    const aiData = this.extractAIData(data)\n    const confidence = calculateConfidence(aiData)\n\n    const details: string[] = []\n    let summary = 'AI processing completed'\n\n    // Extract and clean the response\n    if (aiData.response) {\n      const cleanResponse = cleanHtmlContent(aiData.response)\n      summary = `AI: ${truncateText(cleanResponse, 100)}`\n      details.push(`Response: ${truncateText(cleanResponse, 300)}`)\n    }\n\n    // Add prompt if available\n    if (aiData.prompt) {\n      details.push(`Prompt: ${truncateText(aiData.prompt, 150)}`)\n    }\n\n    // Add model info if available\n    if (aiData.model) {\n      details.push(`Model: ${aiData.model}`)\n    }\n\n    // Add token count if available\n    if (aiData.tokens) {\n      details.push(`Tokens used: ${aiData.tokens}`)\n    }\n\n    return {\n      summary,\n      details,\n      type: 'ai',\n      confidence,\n      metadata: aiData,\n      businessValue: this.extractBusinessValue(aiData)\n    }\n  }\n\n  /**\n   * Extract AI data from various formats\n   */\n  private static extractAIData(data: any): AIResponseData {\n    if (!data) return {}\n\n    const result: AIResponseData = {}\n\n    // Handle nested json structure\n    const jsonData = data.json || data\n\n    // Response extraction - check multiple possible fields\n    result.response = jsonData.ai_response ||\n                     jsonData.risposta_html ||\n                     jsonData.output?.risposta_html ||\n                     jsonData.chatResponse ||\n                     jsonData.gpt_response ||\n                     jsonData.response ||\n                     jsonData.answer ||\n                     jsonData.output?.text ||\n                     jsonData.completion ||\n                     jsonData.generated_text ||\n                     jsonData.ai_output\n\n    // Prompt extraction\n    result.prompt = jsonData.prompt ||\n                   jsonData.question ||\n                   jsonData.query ||\n                   jsonData.input ||\n                   jsonData.user_message ||\n                   jsonData.domanda\n\n    // Model extraction\n    result.model = jsonData.model ||\n                  jsonData.model_name ||\n                  jsonData.ai_model ||\n                  jsonData.llm_model ||\n                  this.detectModelFromResponse(result.response)\n\n    // Token count extraction\n    if (jsonData.tokens || jsonData.token_count || jsonData.usage?.total_tokens) {\n      result.tokens = jsonData.tokens ||\n                     jsonData.token_count ||\n                     jsonData.usage?.total_tokens\n    }\n\n    // Timestamp extraction\n    result.timestamp = jsonData.timestamp ||\n                      jsonData.created_at ||\n                      jsonData.generated_at\n\n    return result\n  }\n\n  /**\n   * Detect AI model from response patterns\n   */\n  private static detectModelFromResponse(response: string | undefined): string {\n    if (!response) return 'Unknown AI Model'\n\n    const responseText = response.toLowerCase()\n\n    if (responseText.includes('gpt-4') || responseText.includes('openai')) {\n      return 'GPT-4'\n    }\n    if (responseText.includes('gpt-3')) {\n      return 'GPT-3.5'\n    }\n    if (responseText.includes('claude')) {\n      return 'Claude'\n    }\n    if (responseText.includes('gemini')) {\n      return 'Gemini'\n    }\n    if (responseText.includes('llama')) {\n      return 'LLaMA'\n    }\n\n    return 'AI Assistant'\n  }\n\n  /**\n   * Extract business value from AI interaction\n   */\n  private static extractBusinessValue(aiData: AIResponseData): string {\n    const indicators = []\n\n    // Analyze response content for business indicators\n    if (aiData.response) {\n      const response = aiData.response.toLowerCase()\n\n      if (response.includes('customer') || response.includes('cliente')) {\n        indicators.push('Customer-focused')\n      }\n      if (response.includes('analysis') || response.includes('analisi')) {\n        indicators.push('Data analysis')\n      }\n      if (response.includes('recommendation') || response.includes('suggest') || response.includes('consiglio')) {\n        indicators.push('Strategic advice')\n      }\n      if (response.includes('report') || response.includes('summary') || response.includes('rapporto')) {\n        indicators.push('Report generation')\n      }\n      if (response.includes('translation') || response.includes('traduzione')) {\n        indicators.push('Translation service')\n      }\n    }\n\n    // Check prompt for task type\n    if (aiData.prompt) {\n      const prompt = aiData.prompt.toLowerCase()\n\n      if (prompt.includes('write') || prompt.includes('scrivi')) {\n        indicators.push('Content creation')\n      }\n      if (prompt.includes('analyze') || prompt.includes('analizza')) {\n        indicators.push('Analysis task')\n      }\n      if (prompt.includes('help') || prompt.includes('aiuto')) {\n        indicators.push('Support task')\n      }\n    }\n\n    // Token usage indicator\n    if (aiData.tokens) {\n      if (aiData.tokens > 1000) {\n        indicators.push('Complex processing')\n      } else if (aiData.tokens < 100) {\n        indicators.push('Quick response')\n      }\n    }\n\n    return indicators.length > 0\n      ? indicators.join(', ')\n      : 'AI processing task'\n  }\n\n  /**\n   * Generate business-friendly summary\n   */\n  static generateSummary(aiData: AIResponseData): string {\n    if (aiData.response) {\n      const clean = cleanHtmlContent(aiData.response)\n      return `AI generated: ${truncateText(clean, 80)}`\n    }\n    if (aiData.prompt) {\n      return `AI processed: \"${truncateText(aiData.prompt, 60)}\"`\n    }\n    if (aiData.model) {\n      return `${aiData.model} completed processing`\n    }\n    return 'AI task completed successfully'\n  }\n\n  /**\n   * Check if response contains structured data\n   */\n  static hasStructuredData(aiData: AIResponseData): boolean {\n    if (!aiData.response) return false\n\n    const response = aiData.response\n\n    // Check for JSON structure\n    if (response.includes('{') && response.includes('}')) {\n      try {\n        JSON.parse(response)\n        return true\n      } catch {\n        // Not valid JSON\n      }\n    }\n\n    // Check for list/table structure\n    if (response.includes('|') || response.includes('•') || response.includes('1.')) {\n      return true\n    }\n\n    return false\n  }\n}","/**\n * Unified Business Data Processor\n * Central routing and processing for all business data types\n */\n\nimport { BusinessParsingResult, ProcessingContext } from './types'\nimport { EmailParser } from './email-parser'\nimport { AIResponseParser } from './ai-parser'\nimport { detectDataType, cleanHtmlContent, truncateText } from './utils'\n\nexport class UnifiedBusinessProcessor {\n  private static cache = new Map<string, BusinessParsingResult>()\n\n  /**\n   * Process any business data through appropriate parser\n   */\n  static process(data: any, context?: ProcessingContext): BusinessParsingResult {\n    // Check cache if execution ID is provided\n    if (context?.executionId) {\n      const cacheKey = `${context.executionId}-${JSON.stringify(data).substring(0, 50)}`\n      if (this.cache.has(cacheKey)) {\n        return this.cache.get(cacheKey)!\n      }\n    }\n\n    // Detect data type and route to appropriate parser\n    const dataType = detectDataType(data)\n    let result: BusinessParsingResult\n\n    switch (dataType) {\n      case 'email':\n        result = EmailParser.parse(data)\n        break\n\n      case 'ai':\n        result = AIResponseParser.parse(data)\n        break\n\n      case 'order':\n        result = this.parseOrderData(data)\n        break\n\n      case 'vector':\n        result = this.parseVectorData(data)\n        break\n\n      default:\n        result = this.parseGenericData(data)\n    }\n\n    // Add context information if provided\n    if (context) {\n      result.metadata = {\n        ...result.metadata,\n        source: context.source,\n        nodeType: context.nodeType,\n        workflowId: context.workflowId\n      }\n    }\n\n    // Cache the result\n    if (context?.executionId) {\n      const cacheKey = `${context.executionId}-${JSON.stringify(data).substring(0, 50)}`\n      this.cache.set(cacheKey, result)\n\n      // Limit cache size\n      if (this.cache.size > 100) {\n        const firstKey = this.cache.keys().next().value\n        this.cache.delete(firstKey)\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * Parse order data\n   */\n  private static parseOrderData(data: any): BusinessParsingResult {\n    const jsonData = data.json || data\n    const details: string[] = []\n    let summary = 'Order processed'\n\n    if (jsonData.orderId || jsonData.order_id) {\n      const orderId = jsonData.orderId || jsonData.order_id\n      summary = `Order #${orderId}`\n      details.push(`Order ID: ${orderId}`)\n    }\n\n    if (jsonData.customer || jsonData.customerName) {\n      details.push(`Customer: ${jsonData.customer || jsonData.customerName}`)\n    }\n\n    if (jsonData.items && Array.isArray(jsonData.items)) {\n      details.push(`Items: ${jsonData.items.length} product(s)`)\n\n      // Add first few items\n      jsonData.items.slice(0, 3).forEach((item: any) => {\n        if (item.name || item.product) {\n          details.push(`  • ${item.name || item.product}`)\n        }\n      })\n    }\n\n    if (jsonData.total || jsonData.totalAmount) {\n      const total = jsonData.total || jsonData.totalAmount\n      details.push(`Total: €${total}`)\n    }\n\n    if (jsonData.status || jsonData.orderStatus) {\n      details.push(`Status: ${jsonData.status || jsonData.orderStatus}`)\n    }\n\n    return {\n      summary,\n      details,\n      type: 'order',\n      confidence: 'high',\n      metadata: jsonData,\n      businessValue: 'Customer transaction'\n    }\n  }\n\n  /**\n   * Parse vector/search data\n   */\n  private static parseVectorData(data: any): BusinessParsingResult {\n    const jsonData = data.json || data\n    const details: string[] = []\n    let summary = 'Search completed'\n\n    if (jsonData.query || jsonData.search_query) {\n      const query = jsonData.query || jsonData.search_query\n      summary = `Search: \"${truncateText(query, 50)}\"`\n      details.push(`Query: ${query}`)\n    }\n\n    if (jsonData.results || jsonData.vector_results) {\n      const results = jsonData.results || jsonData.vector_results\n      if (Array.isArray(results)) {\n        details.push(`Found: ${results.length} result(s)`)\n\n        // Add top results\n        results.slice(0, 3).forEach((result: any, index: number) => {\n          const content = result.content || result.text || result.document\n          if (content) {\n            details.push(`  ${index + 1}. ${truncateText(content, 100)}`)\n          }\n        })\n      }\n    }\n\n    if (jsonData.similarity_score || jsonData.score) {\n      details.push(`Match score: ${jsonData.similarity_score || jsonData.score}`)\n    }\n\n    return {\n      summary,\n      details,\n      type: 'vector',\n      confidence: 'medium',\n      metadata: jsonData,\n      businessValue: 'Information retrieval'\n    }\n  }\n\n  /**\n   * Parse generic/unknown data\n   */\n  private static parseGenericData(data: any): BusinessParsingResult {\n    const jsonData = data.json || data\n    const details: string[] = []\n    let summary = 'Data processed'\n\n    // Try to extract meaningful information\n    const keys = Object.keys(jsonData).filter(key =>\n      jsonData[key] !== null &&\n      jsonData[key] !== undefined &&\n      key !== 'json'\n    )\n\n    // Use first non-empty string value as summary\n    for (const key of keys) {\n      const value = jsonData[key]\n      if (typeof value === 'string' && value.length > 0) {\n        summary = truncateText(cleanHtmlContent(value), 100)\n        break\n      }\n    }\n\n    // Add key details\n    keys.slice(0, 5).forEach(key => {\n      const value = jsonData[key]\n      if (value !== null && value !== undefined) {\n        if (typeof value === 'string') {\n          details.push(`${key}: ${truncateText(value, 100)}`)\n        } else if (typeof value === 'number') {\n          details.push(`${key}: ${value}`)\n        } else if (typeof value === 'boolean') {\n          details.push(`${key}: ${value ? 'Yes' : 'No'}`)\n        } else if (Array.isArray(value)) {\n          details.push(`${key}: ${value.length} items`)\n        } else if (typeof value === 'object') {\n          details.push(`${key}: [Complex data]`)\n        }\n      }\n    })\n\n    return {\n      summary,\n      details: details.length > 0 ? details : ['Data processing completed'],\n      type: 'generic',\n      confidence: 'low',\n      metadata: jsonData,\n      businessValue: 'Business operation'\n    }\n  }\n\n  /**\n   * Clear the cache\n   */\n  static clearCache(): void {\n    this.cache.clear()\n  }\n\n  /**\n   * Get cache statistics\n   */\n  static getCacheStats(): { size: number; maxSize: number } {\n    return {\n      size: this.cache.size,\n      maxSize: 100\n    }\n  }\n}","<template>\n  <DetailModal\n    :show=\"show\"\n    :title=\"'Business Process Dashboard'\"\n    :subtitle=\"`${modalTitle} • ${modalSubtitle}`\"\n    :header-icon=\"'lucide:bar-chart-2'\"\n    :tabs=\"tabs\"\n    default-tab=\"overview\"\n    :is-loading=\"isLoading\"\n    :error=\"error\"\n    :data=\"timelineData\"\n    @close=\"$emit('close')\"\n    @retry=\"loadTimeline\"\n  >\n    <!-- Header Actions Slot -->\n    <template #headerActions=\"{ isLoading }\">\n    </template>\n\n    <!-- Process Overview Tab -->\n    <template #overview=\"{ data }\">\n      <div class=\"p-4 space-y-4\">\n        <!-- Process Description from Sticky Notes or Default -->\n        <div class=\"card-glassmorphism rounded-lg p-4\">\n          <h3 class=\"text-lg font-semibold text-white mb-3\">Process Description</h3>\n          <div class=\"text-text-muted whitespace-pre-wrap\">\n            {{ workflowInfo?.description || workflowInfo?.purpose ||\n               'This business process automates operations to ensure efficient workflow execution and reliable business outcomes.' }}\n          </div>\n        </div>\n\n        <!-- Key Metrics Grid - Universal for ALL workflows -->\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div class=\"metric-card-glassmorphism rounded-lg p-4\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-sm text-text-muted\">Success Rate</span>\n              <Icon icon=\"lucide:trending-up\" class=\"w-4 h-4 text-green-400\" />\n            </div>\n            <div class=\"text-2xl font-bold text-white\">\n              {{ calculateSuccessRate() }}%\n            </div>\n          </div>\n\n          <div class=\"metric-card-glassmorphism rounded-lg p-4\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-sm text-text-muted\">{{ getBusinessMetricLabel() }}</span>\n              <Icon icon=\"lucide:database\" class=\"w-4 h-4 text-blue-400\" />\n            </div>\n            <div class=\"text-2xl font-bold text-white\">\n              {{ formatBusinessMetric() }}\n            </div>\n          </div>\n\n          <div class=\"metric-card-glassmorphism rounded-lg p-4\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-sm text-text-muted\">Total Operations</span>\n              <Icon icon=\"lucide:layers\" class=\"w-4 h-4 text-purple-400\" />\n            </div>\n            <div class=\"text-2xl font-bold text-white\">\n              {{ workflowStats?.total_executions || executionsHistory.length || 0 }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Business Capabilities - Dynamic from workflow nodes -->\n        <div class=\"card-glassmorphism rounded-lg p-4\">\n          <h3 class=\"text-lg font-semibold text-white mb-3\">Process Capabilities</h3>\n          <ul v-if=\"workflowInfo?.capabilities?.length > 0\" class=\"space-y-2\">\n            <li v-for=\"(capability, index) in workflowInfo.capabilities\" :key=\"index\" class=\"flex items-start gap-2\">\n              <Icon icon=\"lucide:check-circle\" class=\"w-5 h-5 text-green-400 mt-0.5\" />\n              <span class=\"text-text-muted\">{{ capability }}</span>\n            </li>\n          </ul>\n          <!-- Fallback if no capabilities detected -->\n          <ul v-else class=\"space-y-2\">\n            <li class=\"flex items-start gap-2\">\n              <Icon icon=\"lucide:check-circle\" class=\"w-5 h-5 text-green-400 mt-0.5\" />\n              <span class=\"text-text-muted\">Automated workflow processing</span>\n            </li>\n            <li class=\"flex items-start gap-2\">\n              <Icon icon=\"lucide:check-circle\" class=\"w-5 h-5 text-green-400 mt-0.5\" />\n              <span class=\"text-text-muted\">Data transformation and routing</span>\n            </li>\n            <li class=\"flex items-start gap-2\">\n              <Icon icon=\"lucide:check-circle\" class=\"w-5 h-5 text-green-400 mt-0.5\" />\n              <span class=\"text-text-muted\">Business process optimization</span>\n            </li>\n          </ul>\n        </div>\n\n        <!-- Business Value Statement - Dynamic from execution metrics -->\n        <div class=\"value-card-glassmorphism rounded-lg p-4\">\n          <div class=\"flex items-start gap-3\">\n            <Icon icon=\"lucide:target\" class=\"w-6 h-6 text-primary mt-0.5\" />\n            <div>\n              <h3 class=\"text-lg font-semibold text-white mb-2\">Business Value</h3>\n              <p class=\"text-text-muted\">\n                {{ workflowInfo?.businessValue?.summary ||\n                   'This automated process optimizes business operations, reduces manual workload, and ensures consistent service delivery. All operations are tracked for continuous improvement.' }}\n              </p>\n\n              <!-- Dynamic metrics grid if available -->\n              <div v-if=\"workflowInfo?.businessValue\" class=\"grid grid-cols-2 md:grid-cols-4 gap-3 mt-4\">\n                <div v-if=\"workflowInfo.businessValue.automationRate\" class=\"text-center\">\n                  <div class=\"text-xl font-bold text-primary\">{{ workflowInfo.businessValue.automationRate }}</div>\n                  <div class=\"text-xs text-text-muted\">Automation</div>\n                </div>\n                <div v-if=\"workflowInfo.businessValue.timeSaved\" class=\"text-center\">\n                  <div class=\"text-xl font-bold text-green-400\">{{ workflowInfo.businessValue.timeSaved }}</div>\n                  <div class=\"text-xs text-text-muted\">Time Saved</div>\n                </div>\n                <div v-if=\"workflowInfo.businessValue.avgResponseTime\" class=\"text-center\">\n                  <div class=\"text-xl font-bold text-blue-400\">{{ workflowInfo.businessValue.avgResponseTime }}</div>\n                  <div class=\"text-xs text-text-muted\">Avg Response</div>\n                </div>\n                <div v-if=\"workflowInfo.businessValue.dataProcessed\" class=\"text-center\">\n                  <div class=\"text-xl font-bold text-purple-400\">{{ workflowInfo.businessValue.dataProcessed }}</div>\n                  <div class=\"text-xs text-text-muted\">Items Processed</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n\n\n    <!-- Latest Activity Tab - Shows recent operations -->\n    <template #executions=\"{ data }\">\n      <div class=\"p-4\">\n        <!-- Recent Activity from Dashboard API -->\n        <div v-if=\"recentActivity?.length > 0\" class=\"space-y-4 mb-6\">\n          <h3 class=\"text-lg font-semibold text-white mb-4\">Recent Business Activity</h3>\n          <div v-for=\"(activity, index) in recentActivity.slice(0, 10)\" :key=\"index\"\n               class=\"bg-surface-hover rounded-lg p-4 border border-border\">\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex-1\">\n                <div class=\"flex items-center gap-2 mb-2\">\n                  <span :class=\"[\n                    'px-2 py-1 text-xs rounded',\n                    activity.type === 'AI Response' ? 'bg-purple-500/20 text-purple-300' :\n                    activity.type === 'Email' ? 'bg-blue-500/20 text-blue-300' :\n                    activity.type === 'Order' ? 'bg-green-500/20 text-green-300' :\n                    'bg-gray-500/20 text-gray-300'\n                  ]\">{{ activity.type }}</span>\n                  <span class=\"text-xs text-text-muted\">{{ formatRelativeTime(activity.timestamp) }}</span>\n                </div>\n                <p class=\"text-sm text-white\">{{ activity.summary }}</p>\n                <p v-if=\"activity.classification\" class=\"text-xs text-text-muted mt-1\">\n                  Classification: {{ activity.classification }}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Fallback to business nodes if no recent activity -->\n        <div v-else-if=\"data?.businessNodes?.length > 0\" class=\"space-y-6\">\n          <div\n            v-for=\"(step, index) in data.businessNodes\"\n            :key=\"step._nodeId || index\"\n            :class=\"[\n              'rounded-lg p-5 border transition-all',\n              step.status === 'error' || step.showTag === 'error' \n                ? 'bg-red-900/20 border-red-500/30' \n                : 'bg-gray-800/50 border-gray-700',\n              // Highlight if has intelligent summary\n              step.data?.intelligentSummary ? 'ring-1 ring-blue-500/20' : ''\n            ]\"\n          >\n            <!-- Step Header -->\n            <div class=\"flex items-center justify-between mb-4\">\n              <div class=\"flex items-center\">\n                <div :class=\"[\n                  'w-8 h-8 rounded-full flex items-center justify-center mr-3',\n                  step.status === 'error' || step.showTag === 'error'\n                    ? 'bg-red-400/20'\n                    : 'bg-green-400/20'\n                ]\">\n                  <span :class=\"[\n                    'font-medium',\n                    step.status === 'error' || step.showTag === 'error'\n                      ? 'text-red-400'\n                      : 'text-green-400'\n                  ]\">{{ step.showTag === 'error' ? 'ERR' : index + 1 }}</span>\n                </div>\n                <div>\n                  <h4 class=\"text-white font-medium\">{{ step.businessName || step.name || `Process Step ${index + 1}` }}</h4>\n                  <p class=\"text-sm text-gray-400\">{{ formatBusinessStepType(step) }}</p>\n                </div>\n              </div>\n              <div class=\"text-xs text-gray-500\">\n                {{ formatDuration(step.executionTime || 0) }}\n              </div>\n            </div>\n\n            <!-- Business Summary -->\n            <div class=\"mb-4\">\n              <div :class=\"[\n                'text-sm font-medium mb-2',\n                step.status === 'error' || step.showTag === 'error'\n                  ? 'text-red-400'\n                  : 'text-green-400'\n              ]\">\n                {{ step.status === 'error' || step.showTag === 'error' ? 'Error Details:' : 'Business Summary:' }}\n              </div>\n              <div :class=\"[\n                'text-white bg-gray-900/50 p-3 rounded border-l-4',\n                step.status === 'error' || step.showTag === 'error'\n                  ? 'border-red-400'\n                  : 'border-green-400'\n              ]\">\n                {{ \n                  step.status === 'error' || step.showTag === 'error' \n                    ? getBusinessErrorSummary(step)\n                    : generateExecutionDetail(step) \n                }}\n              </div>\n            </div>\n\n            <!-- Input/Output Summary -->\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <!-- What Happened -->\n              <div :class=\"[\n                'rounded p-3 border',\n                step.status === 'error' || step.showTag === 'error'\n                  ? 'bg-orange-400/10 border-orange-400/20'\n                  : 'bg-blue-400/10 border-blue-400/20'\n              ]\">\n                <div :class=\"[\n                  'text-xs font-medium mb-1',\n                  step.status === 'error' || step.showTag === 'error'\n                    ? 'text-orange-400'\n                    : 'text-blue-400'\n                ]\">{{ step.status === 'error' || step.showTag === 'error' ? 'ERROR CONTEXT' : 'WHAT HAPPENED' }}</div>\n                <div class=\"text-sm text-gray-300\">\n                  {{ \n                    step.status === 'error' || step.showTag === 'error' \n                      ? getBusinessErrorContext(step)\n                      : (step.enrichedData?.inputSummary || getBusinessSummary(step))\n                  }}\n                </div>\n              </div>\n              \n              <!-- Result -->\n              <div :class=\"[\n                'rounded p-3 border',\n                step.status === 'error' || step.showTag === 'error'\n                  ? 'bg-red-400/10 border-red-400/20'\n                  : 'bg-green-400/10 border-green-400/20'\n              ]\">\n                <div :class=\"[\n                  'text-xs font-medium mb-1',\n                  step.status === 'error' || step.showTag === 'error'\n                    ? 'text-red-400'\n                    : 'text-green-400'\n                ]\">{{ step.status === 'error' || step.showTag === 'error' ? 'ERROR RESULT' : 'RESULT' }}</div>\n                <div class=\"text-sm text-gray-300\">\n                  {{\n                    step.status === 'error' || step.showTag === 'error'\n                      ? getBusinessErrorDetails(step)\n                      : (step.enrichedData?.outputSummary || '')\n                  }}\n                </div>\n              </div>\n            </div>\n\n            <!-- Business Value -->\n            <div v-if=\"step.enrichedData?.businessValue\" class=\"mt-4 p-3 bg-purple-400/10 rounded border border-purple-400/20\">\n              <div class=\"text-xs text-purple-400 font-medium mb-1\">BUSINESS VALUE</div>\n              <div class=\"text-sm text-white\">{{ step.enrichedData.businessValue }}</div>\n            </div>\n\n            <!-- Intelligent Summary Section (for large data) -->\n            <div v-if=\"step.data?.intelligentSummary\" class=\"mt-4 space-y-3\">\n              <!-- Summary Type Badge -->\n              <div class=\"flex items-center gap-2\">\n                <Icon :icon=\"getIntelligentSummaryIcon(step.data.intelligentSummary.type)\" class=\"w-4 h-4 text-blue-400\" />\n                <span class=\"text-xs font-medium text-blue-400 uppercase\">\n                  {{ getIntelligentSummaryLabel(step.data.intelligentSummary.summaryType) }}\n                </span>\n                <div v-if=\"step.data.intelligentSummary.type === 'ai_generated'\" class=\"ml-auto\">\n                  <span class=\"px-2 py-0.5 text-xs bg-purple-500/20 text-purple-300 rounded\">AI Generated</span>\n                </div>\n              </div>\n\n              <!-- Business Summary Card -->\n              <div v-if=\"step.data.intelligentSummary.businessSummary\" class=\"bg-blue-900/20 border border-blue-500/20 rounded-lg p-4\">\n                <h5 class=\"text-sm font-medium text-blue-300 mb-2\">\n                  {{ step.data.intelligentSummary.businessSummary.title }}\n                </h5>\n                <p class=\"text-sm text-gray-300\">\n                  {{ step.data.intelligentSummary.businessSummary.description }}\n                </p>\n                \n                <!-- Document Type Specific -->\n                <div v-if=\"step.data.intelligentSummary.summaryType === 'document'\" class=\"mt-2 text-xs text-gray-400\">\n                  <span>{{ step.data.intelligentSummary.businessSummary.pageCount }} pages</span>\n                  <span class=\"mx-2\">•</span>\n                  <span>Type: {{ step.data.intelligentSummary.businessSummary.documentType }}</span>\n                </div>\n                \n                <!-- Dataset Type Specific -->\n                <div v-else-if=\"step.data.intelligentSummary.summaryType === 'dataset'\" class=\"mt-2 text-xs text-gray-400\">\n                  <span>{{ step.data.intelligentSummary.businessSummary.totalRows }} rows</span>\n                  <span class=\"mx-2\">•</span>\n                  <span>{{ step.data.intelligentSummary.businessSummary.totalColumns }} columns</span>\n                </div>\n              </div>\n\n              <!-- Metrics Grid -->\n              <div v-if=\"step.data.intelligentSummary.metrics && Object.keys(step.data.intelligentSummary.metrics).length > 0\" \n                   class=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                <div v-for=\"(value, key) in step.data.intelligentSummary.metrics\" \n                     :key=\"key\"\n                     class=\"bg-gray-800/50 rounded p-2 text-center\">\n                  <div class=\"text-xs text-gray-500 capitalize\">{{ formatMetricKey(key) }}</div>\n                  <div class=\"text-sm font-medium text-white\">{{ formatMetricValue(value) }}</div>\n                </div>\n              </div>\n\n              <!-- Preview Section -->\n              <div v-if=\"step.data.intelligentSummary.preview && !expandedSteps.has(step._nodeId)\" \n                   class=\"bg-gray-900/50 rounded-lg p-3\">\n                <div class=\"flex items-center justify-between mb-2\">\n                  <span class=\"text-xs font-medium text-gray-400\">DATA PREVIEW</span>\n                  <button @click=\"toggleExpandedStep(step._nodeId)\" \n                          class=\"text-xs text-blue-400 hover:text-blue-300\">\n                    View More →\n                  </button>\n                </div>\n                \n                <!-- Document Preview -->\n                <div v-if=\"step.data.intelligentSummary.summaryType === 'document'\" class=\"text-xs text-gray-300 space-y-1\">\n                  <div v-if=\"step.data.intelligentSummary.preview.keyDates?.length > 0\">\n                    <span class=\"text-gray-500\">Dates:</span> {{ step.data.intelligentSummary.preview.keyDates.join(', ') }}\n                  </div>\n                  <div v-if=\"step.data.intelligentSummary.preview.amounts?.length > 0\">\n                    <span class=\"text-gray-500\">Amounts:</span> {{ step.data.intelligentSummary.preview.amounts.join(', ') }}\n                  </div>\n                </div>\n                \n                <!-- Dataset Preview -->\n                <div v-else-if=\"step.data.intelligentSummary.summaryType === 'dataset' && step.data.intelligentSummary.preview.sampleRows\" \n                     class=\"overflow-x-auto\">\n                  <table class=\"text-xs w-full\">\n                    <thead>\n                      <tr class=\"text-gray-500\">\n                        <th v-for=\"header in step.data.intelligentSummary.preview.headers?.slice(0, 4)\" \n                            :key=\"header\" \n                            class=\"px-2 py-1 text-left\">\n                          {{ header }}\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(row, idx) in step.data.intelligentSummary.preview.sampleRows?.slice(0, 3)\" \n                          :key=\"idx\"\n                          class=\"text-gray-300 border-t border-gray-800\">\n                        <td v-for=\"header in step.data.intelligentSummary.preview.headers?.slice(0, 4)\" \n                            :key=\"header\"\n                            class=\"px-2 py-1\">\n                          {{ row[header] }}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              <!-- Business Insight -->\n              <div v-if=\"step.data.intelligentSummary.businessInsight\" \n                   class=\"bg-green-900/20 border border-green-500/20 rounded-lg p-3\">\n                <div class=\"flex items-start gap-2\">\n                  <Icon icon=\"lucide:lightbulb\" class=\"w-4 h-4 text-green-400 mt-0.5\" />\n                  <div>\n                    <div class=\"text-xs font-medium text-green-400 mb-1\">BUSINESS INSIGHT</div>\n                    <div class=\"text-sm text-gray-300\">{{ step.data.intelligentSummary.businessInsight }}</div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Action Buttons -->\n              <div v-if=\"step.data.intelligentSummary.actions?.length > 0\" class=\"flex flex-wrap gap-2\">\n                <button v-for=\"action in step.data.intelligentSummary.actions\" \n                        :key=\"action\"\n                        @click=\"handleIntelligentAction(action, step)\"\n                        class=\"px-3 py-1 text-xs bg-gray-700 hover:bg-gray-600 text-white rounded-md transition-colors\">\n                  {{ formatActionLabel(action) }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- No Data -->\n        <div v-else class=\"text-center py-12 text-gray-400\">\n          <Icon icon=\"lucide:list\" class=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n          <h3 class=\"text-lg font-medium mb-2\">Process Not Yet Configured</h3>\n          <p class=\"text-sm mb-2\">This business process doesn't have steps configured for client reporting.</p>\n          <div class=\"bg-blue-400/10 border border-blue-400/20 rounded-lg p-4 mt-4 max-w-md mx-auto\">\n            <h4 class=\"text-blue-400 font-medium mb-2\">For Administrators:</h4>\n            <p class=\"text-xs text-blue-300\">\n              Add 'show-1', 'show-2', etc. notes to workflow nodes to make them visible in business reporting.\n            </p>\n          </div>\n        </div>\n      </div>\n    </template>\n\n    <!-- Process History Tab -->\n    <template #history=\"{ data }\">\n      <div class=\"p-4 overflow-y-auto\">\n        <h3 class=\"text-lg font-semibold text-white mb-3\">Process Execution History</h3>\n\n        <!-- History Stats (REAL DATA - Including Canceled) -->\n        <div class=\"grid grid-cols-2 md:grid-cols-4 gap-3 mb-4\">\n          <div class=\"metric-card-glassmorphism rounded-lg p-2\">\n            <div class=\"flex items-center justify-between\">\n              <Icon icon=\"lucide:play-circle\" class=\"w-4 h-4 text-blue-400\" />\n              <span class=\"text-xs text-gray-400\">Total</span>\n            </div>\n            <div class=\"text-lg font-bold text-white\">{{ workflowStats?.kpis?.totalExecutions || 0 }}</div>\n            <div class=\"text-xs text-gray-500\">{{ workflowStats?.kpis?.last24hExecutions || 0 }} oggi</div>\n          </div>\n          <div class=\"metric-card-glassmorphism rounded-lg p-2\">\n            <div class=\"flex items-center justify-between\">\n              <Icon icon=\"lucide:check-circle\" class=\"w-4 h-4 text-green-400\" />\n              <span class=\"text-xs text-gray-400\">Success</span>\n            </div>\n            <div class=\"text-lg font-bold text-green-400\">{{ workflowStats?.kpis?.successfulExecutions || 0 }}</div>\n            <div class=\"text-xs text-gray-500\">{{ workflowStats?.kpis?.successRate || 0 }}% rate</div>\n          </div>\n          <div class=\"metric-card-glassmorphism rounded-lg p-2\">\n            <div class=\"flex items-center justify-between\">\n              <Icon icon=\"lucide:x-circle\" class=\"w-4 h-4 text-red-400\" />\n              <span class=\"text-xs text-gray-400\">Failed</span>\n            </div>\n            <div class=\"text-lg font-bold text-red-400\">{{ workflowStats?.kpis?.failedExecutions || 0 }}</div>\n            <div v-if=\"workflowStats?.kpis?.canceledExecutions > 0\" class=\"text-xs text-orange-400\">\n              +{{ workflowStats.kpis.canceledExecutions }} canceled\n            </div>\n          </div>\n          <div class=\"metric-card-glassmorphism rounded-lg p-2\">\n            <div class=\"flex items-center justify-between\">\n              <Icon icon=\"lucide:clock\" class=\"w-4 h-4 text-purple-400\" />\n              <span class=\"text-xs text-gray-400\">Avg Time</span>\n            </div>\n            <div class=\"text-lg font-bold text-purple-400\">\n              {{ workflowStats?.kpis?.avgRunTime ? formatDuration(workflowStats.kpis.avgRunTime) : '0ms' }}\n            </div>\n            <div class=\"text-xs text-gray-500\">per run</div>\n          </div>\n        </div>\n\n        <!-- Timeline Trend Chart -->\n        <div v-if=\"workflowStats?.trend?.length > 0\" class=\"card-glassmorphism rounded-lg p-3 mb-4\">\n          <h4 class=\"text-sm font-medium text-white mb-2\">Trend ultimi 7 giorni</h4>\n          <div class=\"flex items-end justify-between h-20 gap-1\">\n            <div v-for=\"(day, idx) in workflowStats.trend.slice(0, 7)\" :key=\"idx\" class=\"flex-1 flex flex-col justify-end\">\n              <div\n                class=\"bg-emerald-500/30 rounded-t hover:bg-emerald-500/40 transition-all\"\n                :style=\"{ height: `${Math.max(10, (day.executions / Math.max(...workflowStats.trend.map(d => d.executions))) * 100)}%` }\"\n                :title=\"`${day.date}: ${day.executions} esecuzioni`\"\n              ></div>\n              <span class=\"text-xs text-gray-500 mt-1\">{{ new Date(day.date).getDate() }}</span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Recent History Table (REAL EXECUTIONS DATA) -->\n        <div v-if=\"executionsHistory.length > 0\" class=\"bg-surface-hover rounded-lg border border-border overflow-hidden\">\n          <div class=\"max-h-[400px] overflow-y-auto\">\n          <table class=\"w-full\">\n            <thead class=\"bg-black/20 border-b border-border\">\n              <tr>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-text-muted uppercase\">Date</th>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-text-muted uppercase\">Status</th>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-text-muted uppercase\">Duration</th>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-text-muted uppercase\">Business Outcome</th>\n              </tr>\n            </thead>\n            <tbody class=\"divide-y divide-border/50\">\n              <tr v-for=\"exec in executionsHistory.slice(0, 25)\" :key=\"exec.id\" class=\"hover:bg-surface-hover/50 text-xs\">\n                <td class=\"px-3 py-2 text-text-muted\">{{ formatTimestamp(exec.startedAt || exec.createdAt) }}</td>\n                <td class=\"px-3 py-2\">\n                  <span :class=\"[\n                    'px-2 py-1 text-xs rounded',\n                    exec.status === 'success' ? 'bg-green-400/20 text-green-400' :\n                    exec.status === 'error' ? 'bg-red-400/20 text-red-400' :\n                    'bg-yellow-400/20 text-yellow-400'\n                  ]\">\n                    {{ exec.status === 'success' ? 'Success' : exec.status === 'error' ? 'Failed' : 'Running' }}\n                  </span>\n                </td>\n                <td class=\"px-3 py-2 text-text-muted\">\n                  <span v-if=\"exec.duration\">{{ formatDuration(exec.duration) }}</span>\n                  <span v-else class=\"text-gray-600\">-</span>\n                </td>\n                <td class=\"px-3 py-2 text-text-muted\">\n                  <span v-if=\"exec.data?.businessOutcome\" class=\"text-xs\">\n                    {{ exec.data.businessOutcome }}\n                  </span>\n                  <span v-else class=\"text-xs text-gray-600\">-</span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          </div>\n        </div>\n\n        <!-- No Data State -->\n        <div v-else class=\"text-center py-6 text-gray-400\">\n          <Icon icon=\"lucide:history\" class=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n          <p>No execution history available yet</p>\n        </div>\n      </div>\n    </template>\n\n    <!-- Analytics Tab -->\n    <template #analytics=\"{ data }\">\n      <div class=\"p-3 overflow-y-auto\">\n        <!-- Grid 2 colonne per ottimizzare spazio -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-3\">\n\n          <!-- Colonna Sinistra -->\n          <div class=\"space-y-3\">\n            <!-- Performance Scorecard Compatto -->\n            <div class=\"card-glassmorphism rounded-lg p-3\">\n              <h4 class=\"text-sm font-medium text-white mb-2 flex items-center gap-2\">\n                <Icon icon=\"lucide:gauge\" class=\"w-4 h-4 text-emerald-400\" />\n                Performance Scores\n              </h4>\n\n              <!-- 2x2 Grid Scores - Simplified Colors -->\n              <div class=\"grid grid-cols-2 gap-2 mb-2\">\n                <div class=\"p-2 bg-surface/50 rounded border border-emerald-500/20\">\n                  <div class=\"flex items-center justify-between\">\n                    <Icon icon=\"lucide:check-circle\" class=\"w-3 h-3 text-emerald-400\" />\n                    <span class=\"text-xl font-bold text-white\">{{ workflowStats?.kpis?.successRate || 0 }}%</span>\n                  </div>\n                  <div class=\"text-xs text-gray-400\">Success Rate</div>\n                  <div v-if=\"workflowStats?.trends?.successRateTrend\" class=\"text-xs mt-0.5\"\n                       :class=\"workflowStats.trends.successRateTrend > 0 ? 'text-emerald-400' : 'text-gray-500'\">\n                    {{ workflowStats.trends.successRateTrend > 0 ? '↑' : '↓' }} {{ Math.abs(workflowStats.trends.successRateTrend) }}%\n                  </div>\n                </div>\n\n                <div class=\"p-2 bg-surface/50 rounded border border-border/50\">\n                  <div class=\"flex items-center justify-between\">\n                    <Icon icon=\"lucide:timer\" class=\"w-3 h-3 text-gray-400\" />\n                    <span class=\"text-xl font-bold text-white\">{{ formatDuration(workflowStats?.kpis?.avgRunTime || 0) }}</span>\n                  </div>\n                  <div class=\"text-xs text-gray-400\">Avg Time</div>\n                  <div v-if=\"workflowStats?.kpis?.minRunTime\" class=\"text-xs text-gray-500 mt-0.5\">\n                    {{ formatDuration(workflowStats.kpis.minRunTime) }}-{{ formatDuration(workflowStats.kpis.maxRunTime) }}\n                  </div>\n                </div>\n\n                <div class=\"p-2 bg-surface/50 rounded border border-border/50\">\n                  <div class=\"flex items-center justify-between\">\n                    <Icon icon=\"lucide:zap\" class=\"w-3 h-3 text-gray-400\" />\n                    <span class=\"text-xl font-bold text-white\">{{ workflowStats?.kpis?.efficiencyScore || 0 }}</span>\n                  </div>\n                  <div class=\"text-xs text-gray-400\">Efficiency</div>\n                  <div class=\"text-xs text-gray-500\">/100 points</div>\n                </div>\n\n                <div class=\"p-2 bg-surface/50 rounded border border-border/50\">\n                  <div class=\"flex items-center justify-between\">\n                    <Icon icon=\"lucide:shield-check\" class=\"w-3 h-3 text-gray-400\" />\n                    <span class=\"text-xl font-bold text-white\">{{ workflowStats?.kpis?.reliabilityScore || 0 }}%</span>\n                  </div>\n                  <div class=\"text-xs text-gray-400\">Reliability</div>\n                  <div class=\"text-xs text-gray-500\">10 runs</div>\n                </div>\n              </div>\n\n              <!-- Mini Stats Bar -->\n              <div class=\"grid grid-cols-3 gap-1.5\">\n                <div class=\"p-1.5 bg-surface/30 rounded text-center\">\n                  <div class=\"text-xs text-gray-500\">Runs</div>\n                  <div class=\"text-sm font-bold text-white\">{{ workflowStats?.kpis?.totalExecutions || 0 }}</div>\n                </div>\n                <div class=\"p-1.5 bg-surface/30 rounded text-center\">\n                  <div class=\"text-xs text-gray-500\">Data</div>\n                  <div class=\"text-sm font-bold text-white\">{{ workflowStats?.kpis?.totalDataProcessed || 0 }}</div>\n                </div>\n                <div class=\"p-1.5 bg-surface/30 rounded text-center\">\n                  <div class=\"text-xs text-gray-500\">Saved</div>\n                  <div class=\"text-sm font-bold text-white\">{{ workflowStats?.kpis?.automationImpact || 0 }}m</div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Execution Distribution Chart -->\n            <div class=\"card-glassmorphism rounded-lg p-3\">\n              <h4 class=\"text-sm font-medium text-white mb-2 flex items-center gap-2\">\n                <Icon icon=\"lucide:pie-chart\" class=\"w-4 h-4 text-yellow-400\" />\n                Execution Breakdown\n              </h4>\n\n              <!-- Visual Bar Chart -->\n              <div class=\"h-20 flex items-end gap-1 mb-2\">\n                <div class=\"flex-1 bg-green-500/30 rounded-t border-t border-green-500/50 hover:bg-green-500/40 transition-all\"\n                     :style=\"{ height: `${Math.max(10, (workflowStats?.kpis?.successfulExecutions / (workflowStats?.kpis?.totalExecutions || 1)) * 100)}%` }\"\n                     :title=\"`Success: ${workflowStats?.kpis?.successfulExecutions || 0}`\">\n                  <div v-if=\"workflowStats?.kpis?.successfulExecutions > 0\" class=\"text-xs text-center text-green-400 pt-1\">\n                    {{ workflowStats?.kpis?.successfulExecutions }}\n                  </div>\n                </div>\n                <div class=\"flex-1 bg-red-500/30 rounded-t border-t border-red-500/50 hover:bg-red-500/40 transition-all\"\n                     :style=\"{ height: `${Math.max(10, (workflowStats?.kpis?.failedExecutions / (workflowStats?.kpis?.totalExecutions || 1)) * 100)}%` }\"\n                     :title=\"`Failed: ${workflowStats?.kpis?.failedExecutions || 0}`\">\n                  <div v-if=\"workflowStats?.kpis?.failedExecutions > 0\" class=\"text-xs text-center text-red-400 pt-1\">\n                    {{ workflowStats?.kpis?.failedExecutions }}\n                  </div>\n                </div>\n                <div v-if=\"workflowStats?.kpis?.canceledExecutions > 0\" class=\"flex-1 bg-orange-500/30 rounded-t border-t border-orange-500/50 hover:bg-orange-500/40 transition-all\"\n                     :style=\"{ height: `${Math.max(10, (workflowStats?.kpis?.canceledExecutions / (workflowStats?.kpis?.totalExecutions || 1)) * 100)}%` }\"\n                     :title=\"`Canceled: ${workflowStats?.kpis?.canceledExecutions || 0}`\">\n                  <div class=\"text-xs text-center text-orange-400 pt-1\">\n                    {{ workflowStats?.kpis?.canceledExecutions }}\n                  </div>\n                </div>\n              </div>\n\n              <!-- Legend -->\n              <div class=\"flex justify-around text-xs\">\n                <span class=\"flex items-center gap-1\">\n                  <span class=\"w-2 h-2 bg-green-400 rounded-full\"></span>\n                  Success {{ workflowStats?.kpis?.successRate || 0 }}%\n                </span>\n                <span class=\"flex items-center gap-1\">\n                  <span class=\"w-2 h-2 bg-red-400 rounded-full\"></span>\n                  Failed {{ workflowStats?.kpis?.failureRate || 0 }}%\n                </span>\n                <span v-if=\"workflowStats?.kpis?.canceledExecutions > 0\" class=\"flex items-center gap-1\">\n                  <span class=\"w-2 h-2 bg-orange-400 rounded-full\"></span>\n                  Cancel {{ ((workflowStats?.kpis?.canceledExecutions / (workflowStats?.kpis?.totalExecutions || 1)) * 100).toFixed(1) }}%\n                </span>\n              </div>\n            </div>\n\n            <!-- 7-Day Trend Mini Chart -->\n            <div class=\"card-glassmorphism rounded-lg p-3\">\n              <h4 class=\"text-sm font-medium text-white mb-2 flex items-center gap-2\">\n                <Icon icon=\"lucide:trending-up\" class=\"w-4 h-4 text-emerald-400\" />\n                Weekly Trend\n              </h4>\n              <div v-if=\"workflowStats?.trend?.length > 0\" class=\"h-24\">\n                <div class=\"flex items-end justify-between h-20 gap-0.5\">\n                  <div v-for=\"(day, idx) in workflowStats.trend.slice(0, 7).reverse()\" :key=\"idx\"\n                       class=\"flex-1 flex flex-col justify-end\">\n                    <div class=\"bg-gradient-to-t from-emerald-500/40 to-emerald-500/20 rounded-t hover:from-emerald-500/50 hover:to-emerald-500/30 transition-all border-t border-emerald-500/50\"\n                         :style=\"{ height: `${Math.max(5, (day.executions / Math.max(...workflowStats.trend.map(d => d.executions))) * 100)}%` }\"\n                         :title=\"`${day.date}: ${day.executions} runs`\">\n                      <span v-if=\"day.executions > 0\" class=\"text-xs text-emerald-400 text-center block pt-0.5\">{{ day.executions }}</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"flex justify-between mt-0.5\">\n                  <span v-for=\"(day, idx) in workflowStats.trend.slice(0, 7).reverse()\" :key=\"idx\" class=\"flex-1 text-center text-xs text-gray-500\">\n                    {{ new Date(day.date).getDate() }}\n                  </span>\n                </div>\n              </div>\n              <div v-else class=\"h-20 flex items-center justify-center text-xs text-gray-500\">\n                No trend data\n              </div>\n            </div>\n          </div>\n\n          <!-- Colonna Destra -->\n          <div class=\"space-y-3\">\n\n            <!-- Activity Heatmap -->\n            <div class=\"card-glassmorphism rounded-lg p-3\">\n              <h4 class=\"text-sm font-medium text-white mb-2 flex items-center gap-2\">\n                <Icon icon=\"lucide:activity\" class=\"w-4 h-4 text-blue-400\" />\n                Activity Metrics\n              </h4>\n\n              <!-- 2x2 Grid - Minimal Colors -->\n              <div class=\"grid grid-cols-2 gap-2 mb-2\">\n                <div class=\"p-2 bg-surface/50 rounded border border-border/50\">\n                  <div class=\"flex items-center justify-between\">\n                    <Icon icon=\"lucide:clock-3\" class=\"w-3 h-3 text-gray-400\" />\n                    <span class=\"text-lg font-bold text-white\">{{ workflowStats?.kpis?.last24hExecutions || 0 }}</span>\n                  </div>\n                  <div class=\"text-xs text-gray-400\">Last 24h</div>\n                </div>\n                <div class=\"p-2 bg-surface/50 rounded border border-border/50\">\n                  <div class=\"flex items-center justify-between\">\n                    <Icon icon=\"lucide:calendar-days\" class=\"w-3 h-3 text-gray-400\" />\n                    <span class=\"text-lg font-bold text-white\">{{ workflowStats?.kpis?.last7dExecutions || 0 }}</span>\n                  </div>\n                  <div class=\"text-xs text-gray-400\">Last 7d</div>\n                </div>\n                <div class=\"p-2 bg-surface/50 rounded border border-border/50\">\n                  <div class=\"flex items-center justify-between\">\n                    <Icon icon=\"lucide:bar-chart-2\" class=\"w-3 h-3 text-gray-400\" />\n                    <span class=\"text-lg font-bold text-white\">{{ workflowStats?.kpis?.avgExecutionsPerDay || 0 }}</span>\n                  </div>\n                  <div class=\"text-xs text-gray-400\">Daily Avg</div>\n                </div>\n                <div class=\"p-2 bg-surface/50 rounded border border-border/50\">\n                  <div class=\"flex items-center justify-between\">\n                    <Icon icon=\"lucide:zap\" class=\"w-3 h-3 text-gray-400\" />\n                    <span class=\"text-lg font-bold text-white\">\n                      <span v-if=\"workflowStats?.kpis?.peakHour !== null\">{{ workflowStats.kpis.peakHour }}:00</span>\n                      <span v-else class=\"text-gray-600\">-</span>\n                    </span>\n                  </div>\n                  <div class=\"text-xs text-gray-400\">Peak Hour</div>\n                </div>\n              </div>\n\n              <!-- Volume Trend Indicator -->\n              <div v-if=\"workflowStats?.trends?.volumeTrend !== undefined\" class=\"p-2 bg-surface/30 rounded\">\n                <div class=\"flex items-center justify-between\">\n                  <span class=\"text-xs text-gray-400\">Volume Trend</span>\n                  <span class=\"text-xs font-bold flex items-center gap-1\"\n                        :class=\"workflowStats.trends.volumeTrend > 0 ? 'text-green-400' : 'text-orange-400'\">\n                    <Icon :icon=\"workflowStats.trends.volumeTrend > 0 ? 'lucide:trending-up' : 'lucide:trending-down'\" class=\"w-3 h-3\" />\n                    {{ Math.abs(workflowStats.trends.volumeTrend) }}% vs prev\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <!-- Performance Details -->\n            <div class=\"card-glassmorphism rounded-lg p-3\">\n              <h4 class=\"text-sm font-medium text-white mb-2 flex items-center gap-2\">\n                <Icon icon=\"lucide:gauge\" class=\"w-4 h-4 text-gray-400\" />\n                Timing Analysis\n              </h4>\n              <div class=\"space-y-1.5\">\n                <div class=\"flex justify-between items-center p-1.5 bg-surface/50 rounded\">\n                  <span class=\"text-xs text-gray-400 flex items-center gap-1\">\n                    <Icon icon=\"lucide:timer\" class=\"w-3 h-3\" />\n                    Average\n                  </span>\n                  <span class=\"text-sm font-bold text-yellow-400\">{{ formatDuration(workflowStats?.kpis?.avgRunTime || 0) }}</span>\n                </div>\n                <div class=\"flex justify-between items-center p-1.5 bg-surface/50 rounded\">\n                  <span class=\"text-xs text-gray-400 flex items-center gap-1\">\n                    <Icon icon=\"lucide:fast-forward\" class=\"w-3 h-3\" />\n                    Fastest\n                  </span>\n                  <span class=\"text-sm font-bold text-green-400\">{{ formatDuration(workflowStats?.kpis?.minRunTime || 0) }}</span>\n                </div>\n                <div class=\"flex justify-between items-center p-1.5 bg-surface/50 rounded\">\n                  <span class=\"text-xs text-gray-400 flex items-center gap-1\">\n                    <Icon icon=\"lucide:pause\" class=\"w-3 h-3\" />\n                    Slowest\n                  </span>\n                  <span class=\"text-sm font-bold text-red-400\">{{ formatDuration(workflowStats?.kpis?.maxRunTime || 0) }}</span>\n                </div>\n                <div class=\"flex justify-between items-center p-1.5 bg-surface/30 rounded border border-emerald-500/20\">\n                  <span class=\"text-xs text-gray-400 flex items-center gap-1\">\n                    <Icon icon=\"lucide:hourglass\" class=\"w-3 h-3\" />\n                    Total Time\n                  </span>\n                  <span class=\"text-sm font-bold text-emerald-400\">\n                    {{ Math.round((workflowStats?.kpis?.totalExecutions || 0) * (workflowStats?.kpis?.avgRunTime || 0) / 60000) }}m\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <!-- Insights & Intelligence - Monochrome -->\n            <div class=\"card-glassmorphism rounded-lg p-3\">\n              <h4 class=\"text-sm font-medium text-white mb-2 flex items-center gap-2\">\n                <Icon icon=\"lucide:brain\" class=\"w-4 h-4 text-emerald-400\" />\n                AI Insights\n              </h4>\n              <ul class=\"space-y-1.5\">\n                <li v-if=\"workflowStats?.kpis?.totalExecutions\" class=\"flex items-start gap-1.5\">\n                  <Icon icon=\"lucide:activity\" class=\"w-3 h-3 text-gray-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <div class=\"text-xs text-white\">Activity Level</div>\n                    <div class=\"text-xs text-gray-400\">{{ workflowStats.kpis.totalExecutions }} executions tracked</div>\n                    <div class=\"mt-1 h-1 bg-surface/50 rounded-full overflow-hidden\">\n                      <div class=\"h-full bg-emerald-400/50\" :style=\"{ width: `${Math.min(100, workflowStats.kpis.totalExecutions / 10)}%` }\"></div>\n                    </div>\n                  </div>\n                </li>\n                <li v-if=\"workflowStats?.kpis?.successRate\" class=\"flex items-start gap-1.5\">\n                  <Icon icon=\"lucide:shield-check\" class=\"w-3 h-3 text-gray-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <div class=\"text-xs text-white\">Reliability</div>\n                    <div class=\"text-xs text-gray-400\">{{ workflowStats.kpis.successRate }}% success maintained</div>\n                    <div class=\"mt-1 h-1 bg-surface/50 rounded-full overflow-hidden\">\n                      <div class=\"h-full bg-emerald-400/50\" :style=\"{ width: `${workflowStats.kpis.successRate}%` }\"></div>\n                    </div>\n                  </div>\n                </li>\n                <li v-if=\"workflowStats?.kpis?.avgRunTime\" class=\"flex items-start gap-1.5\">\n                  <Icon icon=\"lucide:clock\" class=\"w-3 h-3 text-gray-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <div class=\"text-xs text-white\">Speed</div>\n                    <div class=\"text-xs text-gray-400\">{{ formatDuration(workflowStats.kpis.avgRunTime) }} avg</div>\n                    <div class=\"mt-1 h-1 bg-surface/50 rounded-full overflow-hidden\">\n                      <div class=\"h-full bg-emerald-400/50\" :style=\"{ width: `${Math.max(10, Math.min(100, 100 - (workflowStats.kpis.avgRunTime / 10000) * 100))}%` }\"></div>\n                    </div>\n                  </div>\n                </li>\n                <li v-if=\"executionsHistory.length > 0\" class=\"flex items-start gap-1.5\">\n                  <Icon icon=\"lucide:trending-up\" class=\"w-3 h-3 text-gray-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <div class=\"text-xs text-white\">Recent Trend</div>\n                    <div class=\"text-xs text-gray-400\">\n                      {{ Math.round((executionsHistory.slice(0, 10).filter(e => e.status === 'success').length / Math.min(executionsHistory.length, 10)) * 100) }}% last 10\n                    </div>\n                    <div class=\"mt-1 h-1 bg-surface/50 rounded-full overflow-hidden\">\n                      <div class=\"h-full bg-emerald-400/50\" :style=\"{ width: `${Math.round((executionsHistory.slice(0, 10).filter(e => e.status === 'success').length / Math.min(executionsHistory.length, 10)) * 100)}%` }\"></div>\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </div>\n\n            <!-- Smart Recommendations -->\n            <div class=\"bg-gradient-to-r from-blue-500/20 to-blue-500/10 rounded-lg p-3 border border-blue-500/30\">\n              <h4 class=\"text-sm font-medium text-white mb-2 flex items-center gap-2\">\n                <Icon icon=\"lucide:sparkles\" class=\"w-4 h-4 text-blue-400\" />\n                Optimization Tips\n              </h4>\n              <div class=\"space-y-1.5 text-xs\">\n                <div v-if=\"workflowStats?.kpis?.successRate && workflowStats.kpis.successRate < 95\" class=\"flex items-start gap-1.5 p-1.5 bg-surface/30 rounded border border-border/50\">\n                  <Icon icon=\"lucide:alert-triangle\" class=\"w-3 h-3 text-gray-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <span class=\"text-white font-medium\">Improve Success Rate</span>\n                    <p class=\"text-gray-400 text-xs mt-0.5\">Current: {{ workflowStats.kpis.successRate }}% - Review failed executions</p>\n                  </div>\n                </div>\n                <div v-if=\"workflowStats?.kpis?.avgRunTime && workflowStats.kpis.avgRunTime > 10000\" class=\"flex items-start gap-1.5 p-1.5 bg-surface/30 rounded border border-border/50\">\n                  <Icon icon=\"lucide:clock-alert\" class=\"w-3 h-3 text-gray-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <span class=\"text-white font-medium\">Optimize Performance</span>\n                    <p class=\"text-gray-400 text-xs mt-0.5\">Runtime >10s - Enable parallel processing</p>\n                  </div>\n                </div>\n                <div v-if=\"executionsHistory.filter(e => e.status === 'error').length > 0\" class=\"flex items-start gap-1.5 p-1.5 bg-surface/30 rounded border border-border/50\">\n                  <Icon icon=\"lucide:bug\" class=\"w-3 h-3 text-gray-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <span class=\"text-white font-medium\">Error Pattern Detected</span>\n                    <p class=\"text-gray-400 text-xs mt-0.5\">{{ executionsHistory.filter(e => e.status === 'error').length }} failures need attention</p>\n                  </div>\n                </div>\n                <div v-if=\"!workflowStats?.kpis?.totalExecutions || workflowStats.kpis.totalExecutions === 0\" class=\"flex items-start gap-1.5 p-1.5 bg-surface/30 rounded border border-border/50\">\n                  <Icon icon=\"lucide:info\" class=\"w-3 h-3 text-gray-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <span class=\"text-white font-medium\">No Data Available</span>\n                    <p class=\"text-gray-400 text-xs mt-0.5\">Run process to start collecting metrics</p>\n                  </div>\n                </div>\n                <div v-else-if=\"workflowStats?.kpis?.successRate >= 95\" class=\"flex items-start gap-1.5 p-1.5 bg-surface/30 rounded border border-emerald-500/20\">\n                  <Icon icon=\"lucide:award\" class=\"w-3 h-3 text-emerald-400 mt-0.5\" />\n                  <div class=\"flex-1\">\n                    <span class=\"text-emerald-400 font-medium\">Excellent Performance!</span>\n                    <p class=\"text-gray-400 text-xs mt-0.5\">Consider scaling or adding features</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Bottom Stats Summary Bar -->\n        <div class=\"mt-3 p-2 bg-surface/30 rounded-lg border border-border/50\">\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center gap-4 text-xs\">\n              <span class=\"flex items-center gap-1\">\n                <Icon icon=\"lucide:database\" class=\"w-3 h-3 text-gray-400\" />\n                <span class=\"text-gray-400\">Data Points:</span>\n                <span class=\"text-white font-medium\">{{ workflowStats?.kpis?.totalExecutions || 0 }}</span>\n              </span>\n              <span v-if=\"workflowStats?.period\" class=\"flex items-center gap-1\">\n                <Icon icon=\"lucide:calendar\" class=\"w-3 h-3 text-gray-400\" />\n                <span class=\"text-gray-400\">Period:</span>\n                <span class=\"text-white font-medium\">{{ workflowStats.period }}</span>\n              </span>\n              <span class=\"flex items-center gap-1\">\n                <Icon icon=\"lucide:refresh-cw\" class=\"w-3 h-3 text-gray-400\" />\n                <span class=\"text-gray-400\">Updated:</span>\n                <span class=\"text-white font-medium\">{{ new Date(workflowStats?._metadata?.timestamp || Date.now()).toLocaleTimeString() }}</span>\n              </span>\n            </div>\n            <button @click=\"$emit('refresh')\" class=\"p-1.5 text-gray-400 hover:text-emerald-400 transition-colors rounded hover:bg-white/5\">\n              <Icon icon=\"lucide:refresh-cw\" class=\"w-3 h-3\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </template>\n\n    <!-- Raw Data Tab (Hidden for clients) -->\n    <template #raw=\"{ data }\">\n      <div class=\"p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <div class=\"flex items-center\">\n            <Icon icon=\"lucide:code\" class=\"w-5 h-5 text-gray-400 mr-2\" />\n            <h3 class=\"text-lg font-medium text-white\">Raw Timeline Data</h3>\n          </div>\n          <div class=\"flex gap-2\">\n            <button\n              @click=\"generateBusinessReport\"\n              class=\"flex items-center px-3 py-1.5 bg-gray-700 hover:bg-gray-600 text-white rounded-lg text-sm transition-colors\"\n            >\n              <Icon icon=\"lucide:file-text\" class=\"w-4 h-4 mr-1.5\" />\n              Generate Report\n            </button>\n            <button\n              @click=\"showJsonData\"\n              class=\"flex items-center px-3 py-1.5 bg-gray-700 hover:bg-gray-600 text-white rounded-lg text-sm transition-colors\"\n            >\n              <Icon icon=\"lucide:code\" class=\"w-4 h-4 mr-1.5\" />\n              Show JSON\n            </button>\n          </div>\n        </div>\n        \n        <pre \n          id=\"raw-data-content\"\n          class=\"bg-black/50 p-4 rounded-lg border border-gray-800 text-xs text-gray-300 overflow-auto max-h-96 font-mono whitespace-pre premium-scrollbar\"\n        >{{ \n          data ? \n          JSON.stringify(data, null, 2)\n            .replace(/n8n/gi, 'WFEngine')\n            .replace(/\\.nodes\\./g, '.engine.')\n            .replace(/\\.base\\./g, '.core.')\n          : 'No data available' \n        }}</pre>\n      </div>\n    </template>\n  </DetailModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport DetailModal from './DetailModal.vue'\nimport { useModal } from '../../composables/useModal'\nimport { useBusinessParser } from '../../composables/useBusinessParser'\nimport { businessAPI, $fetch } from '../../services/api-client'\nimport { API_BASE_URL } from '../../utils/api-config'\nimport { UnifiedBusinessProcessor, cleanHtmlContent, truncateText } from '../../shared/business-parsers'\n// XLSX will be loaded on demand to avoid module errors\n\ninterface Props {\n  workflowId: string\n  executionId?: string\n  tenantId?: string\n  show: boolean\n}\n\nconst props = defineProps<Props>()\n\nconst emit = defineEmits<{\n  close: []\n}>()\n\n// Composables\nconst { isLoading, error, setLoading, setError, showToast } = useModal()\nconst { parseBusinessData: legacyParseBusinessData, formatBusinessData, formatTimelineStepData } = useBusinessParser()\n\n// Use new unified processor with compatibility wrapper\nconst parseBusinessData = (data: any, dataType: string, nodeType?: string, nodeName?: string) => {\n  // Use new unified processor\n  const result = UnifiedBusinessProcessor.process(data, {\n    source: 'frontend',\n    nodeType,\n    workflowId: props.workflowId\n  })\n\n  // Convert to legacy format for compatibility\n  return {\n    summary: result.summary,\n    details: result.details,\n    type: result.type,\n    metadata: result.metadata,\n    businessValue: result.businessValue\n  }\n}\n\n// State\nconst timelineData = ref<any>(null)\nconst expandedStep = ref<string | null>(null)\nconst expandedSteps = ref(new Set<string>())\n\n// Additional data for Business Dashboard tabs\nconst executionsHistory = ref<any[]>([])\nconst workflowStats = ref<any>(null)\nconst recentActivity = ref<any[]>([])\nconst workflowInfo = ref<any>(null)\n\n// Modal configuration\nconst modalTitle = computed(() => {\n  return timelineData.value?.workflow?.name || `Business Process ${props.workflowId}`\n})\n\nconst modalSubtitle = computed(() => {\n  if (!timelineData.value) return ''\n  const workflow = timelineData.value.workflow\n  const execution = timelineData.value.execution\n  const status = workflow?.active ? 'ACTIVE' : 'INACTIVE'\n  return `ID: ${props.workflowId} • Status: ${status}${execution ? ` • Last: ${execution.id}` : ''}`\n})\n\nconst tabs = [\n  { id: 'overview', label: 'Process Overview' },\n  { id: 'executions', label: 'Latest Activity' },\n  { id: 'history', label: 'Process History' },\n  { id: 'analytics', label: 'Analytics' },\n]\n\n// Timeline logic\nconst loadTimeline = async () => {\n  setLoading(true)\n  setError(null)\n\n  const API_BASE = import.meta.env.VITE_API_URL || API_BASE_URL\n\n  try {\n    console.log('🔄 Loading dashboard data for workflow:', props.workflowId)\n\n    // Load from BOTH endpoints to get complete data\n    // 1. Dashboard endpoint for executions and activity\n    const dashboardResponse = await $fetch(`${API_BASE}/api/business/dashboard/${props.workflowId}`)\n\n    // 2. Full-stats endpoint (same as Command Center) for accurate KPIs\n    const fullStatsResponse = await $fetch(`${API_BASE}/api/business/workflow/${props.workflowId}/full-stats`, {\n      params: { days: 30 }\n    })\n    console.log('✅ Dashboard data loaded:', dashboardResponse)\n\n    // Process workflow info\n    if (dashboardResponse.workflow) {\n      workflowInfo.value = dashboardResponse.workflow\n    }\n\n    // Process executions with business data\n    if (dashboardResponse.executions) {\n      executionsHistory.value = dashboardResponse.executions\n      console.log('✅ Executions with business data:', executionsHistory.value.length)\n    }\n\n    // Process statistics - Use full-stats data (same as Command Center)\n    if (fullStatsResponse) {\n      workflowStats.value = fullStatsResponse\n      console.log('✅ Full statistics loaded:', workflowStats.value)\n      console.log('📊 KPIs detail from full-stats:', {\n        total: workflowStats.value?.kpis?.totalExecutions,\n        success: workflowStats.value?.kpis?.successfulExecutions,\n        failed: workflowStats.value?.kpis?.failedExecutions,\n        canceled: workflowStats.value?.kpis?.canceledExecutions,\n        rate: workflowStats.value?.kpis?.successRate\n      })\n    } else if (dashboardResponse.statistics) {\n      // Fallback to dashboard statistics if full-stats fails\n      workflowStats.value = dashboardResponse.statistics\n      console.log('⚠️ Using fallback statistics from dashboard endpoint')\n    }\n\n    // Process recent activity (AI responses, emails)\n    if (dashboardResponse.recentActivity) {\n      recentActivity.value = dashboardResponse.recentActivity\n      console.log('✅ Recent activity loaded:', recentActivity.value.length, 'items')\n    }\n  } catch (dashboardError) {\n    console.error('❌ Failed to load dashboard data:', dashboardError)\n    setError('Failed to load dashboard data. Please try again.')\n  }\n\n    // Also load timeline data for timeline tab\n    try {\n      let url = `${API_BASE}/api/business/raw-data-for-modal/${props.workflowId}`\n      if (props.executionId) {\n        url += `?executionId=${props.executionId}`\n      }\n      const data = await businessAPI.getWorkflowDetails(props.workflowId)\n      console.log('✅ Process timeline loaded:', data.data)\n    \n    // Check if no business nodes are configured\n    if (!data.data?.businessNodes || data.data.businessNodes.length === 0) {\n      console.log('ℹ️ No show-n nodes found for this workflow - showing empty state')\n      timelineData.value = { ...data.data, businessNodes: [] }\n      return\n    }\n    \n    // Enrich timeline data with business summaries\n    console.log(`📊 Starting enrichment of ${data.data?.businessNodes?.length || 0} nodes`)\n    if (data.data?.businessNodes) {\n      const originalLength = data.data.businessNodes.length\n      \n      data.data.businessNodes = data.data.businessNodes.map((node: any, index: number) => {\n        console.log(`📊 Processing node ${index + 1}/${originalLength}: \"${node.name}\"`)\n        \n        if (node.data && (node.data.inputJson || node.data.outputJson)) {\n          try {\n            const enrichedData = formatTimelineStepData(\n              node.data.inputJson,\n              node.data.outputJson,\n              node.data.nodeType,\n              node.name\n            )\n            console.log(`✅ Enriched node \"${node.name}\":`, enrichedData)\n            return {\n              ...node,\n              enrichedData\n            }\n          } catch (err) {\n            console.warn(`⚠️ Failed to enrich node \"${node.name}\":`, err)\n            return node\n          }\n        } else {\n          console.log(`ℹ️ Skipping enrichment for node \"${node.name}\" - no input/output data`)\n          return node\n        }\n      })\n      \n      console.log(`📊 Enrichment complete: ${data.data.businessNodes.length}/${originalLength} nodes processed`)\n      \n      if (data.data.businessNodes.length !== originalLength) {\n        console.error(`❌ Node count mismatch! Original: ${originalLength}, Final: ${data.data.businessNodes.length}`)\n      }\n    }\n    \n    timelineData.value = data.data\n    \n  } catch (err: any) {\n    console.error('❌ Failed to load process timeline:', err)\n    \n    // More user-friendly error messages\n    if (err.message.includes('Failed to fetch') || err.message.includes('fetch')) {\n      setError('Process configuration incomplete. This business process needs to be configured with visible steps for reporting.')\n    } else if (err.message.includes('404')) {\n      setError('Process not found or not yet configured for business reporting.')\n    } else {\n      setError('Unable to load process details. Please try again or contact support.')\n    }\n  } finally {\n    setLoading(false)\n  }\n}\n\n\n// Step visualization helpers\nconst getStepIcon = (status: string) => {\n  switch (status) {\n    case 'success': return 'lucide:check-circle'\n    case 'error': return 'lucide:x-circle'\n    case 'running': return 'lucide:settings'\n    case 'not-executed': return 'lucide:clock'\n    default: return 'lucide:clock'\n  }\n}\n\nconst getStepColor = (status: string) => {\n  switch (status) {\n    case 'success': return 'border-green-400/30 bg-green-400/5 hover:bg-green-400/10'\n    case 'error': return 'border-red-400/30 bg-red-400/5 hover:bg-red-400/10'\n    case 'running': return 'border-yellow-400/30 bg-yellow-400/5 hover:bg-yellow-400/10'\n    case 'not-executed': return 'border-gray-600/30 bg-gray-800/50 hover:bg-gray-700/50'\n    default: return 'border-gray-400/30 bg-gray-400/5 hover:bg-gray-400/10'\n  }\n}\n\nconst getBusinessSummary = (step: any): string => {\n  const parsedData = parseBusinessData(\n    step.outputData || step.inputData,\n    step.outputData ? 'output' : 'input',\n    step.nodeType,\n    step.nodeName\n  )\n  return parsedData.summary\n}\n\nconst getBusinessErrorSummary = (step: any): string => {\n  // Use the business parser to extract detailed error information\n  const parsedData = parseBusinessData(\n    step.data,\n    'output',\n    step.nodeType,\n    step.name\n  )\n  \n  // If the business parser extracted detailed error information, use it\n  if (parsedData.type === 'error' && parsedData.details.length > 0) {\n    return parsedData.details.join('\\n')\n  }\n  \n  // Fallback to direct n8n error details if available\n  if (step.data?.n8nErrorDetails) {\n    const error = step.data.n8nErrorDetails\n    return `${error.errorType}: ${error.message} (Nodo: ${error.nodeName})`\n  }\n  \n  // Final fallback\n  return 'Process execution failed to complete successfully'\n}\n\nconst getBusinessErrorDetails = (step: any): string => {\n  // Use the business parser to extract detailed error information\n  const parsedData = parseBusinessData(\n    step.data,\n    'output',\n    step.nodeType,\n    step.name\n  )\n  \n  // If the business parser extracted detailed error information, use the first detail\n  if (parsedData.type === 'error' && parsedData.details.length > 0) {\n    // Return the most important detail (usually the first one with the error message)\n    return parsedData.details.find(detail => detail.includes('Errore:')) || parsedData.details[0]\n  }\n  \n  // Fallback to direct n8n error details if available\n  if (step.data?.n8nErrorDetails) {\n    const error = step.data.n8nErrorDetails\n    return error.message || ''\n  }\n  \n  // Final fallback\n  return 'Check raw data for error details'\n}\n\nconst getBusinessErrorContext = (step: any): string => {\n  // Use the business parser to extract detailed error information\n  const parsedData = parseBusinessData(\n    step.data,\n    'output',\n    step.nodeType,\n    step.name\n  )\n  \n  // If the business parser extracted detailed error information, use node info\n  if (parsedData.type === 'error' && parsedData.details.length > 1) {\n    // Return the node context (usually the second detail with node info)\n    return parsedData.details.find(detail => detail.includes('Nodo Fallito:')) || \n           parsedData.details.find(detail => detail.includes('Tipo Errore:')) ||\n           parsedData.details[1]\n  }\n  \n  // Fallback to direct n8n error details if available\n  if (step.data?.n8nErrorDetails) {\n    const error = step.data.n8nErrorDetails\n    return `Errore nel nodo: ${error.nodeName} (${error.errorType})`\n  }\n  \n  // Final fallback\n  return `Errore durante l'esecuzione del nodo: ${step.name}`\n}\n\nconst getBusinessData = (step: any, dataType: 'input' | 'output'): string => {\n  const data = dataType === 'input' ? step.inputData : step.outputData\n  const parsedData = parseBusinessData(data, dataType, step.nodeType, step.nodeName)\n  return formatBusinessData(parsedData)\n}\n\nconst toggleExpanded = (stepId: string | number) => {\n  expandedStep.value = expandedStep.value === stepId ? null : String(stepId)\n}\n\n// Business Data Helper Functions - Universal for ALL workflows\nconst calculateSuccessRate = () => {\n  // Use REAL KPI data from backend\n  if (workflowStats.value?.kpis?.successRate !== undefined) {\n    return workflowStats.value.kpis.successRate\n  }\n  // Fallback calculation if KPIs not available\n  const successCount = workflowStats.value?.kpis?.successfulExecutions || 0\n  const failedCount = workflowStats.value?.kpis?.failedExecutions || 0\n  const total = successCount + failedCount\n  if (total === 0) return 100\n  return Math.round((successCount / total) * 100)\n}\n\nconst getBusinessMetricLabel = () => {\n  // Use REAL KPI data from backend\n  const kpis = workflowStats.value?.kpis\n  if (!kpis) return 'Data Points'\n\n  // Check which metrics have actual data\n  if (kpis.ordersProcessed > 0) return 'Orders Processed'\n  if (kpis.aiResponsesGenerated > 0) return 'AI Responses'\n  if (kpis.emailsProcessed > 0) return 'Emails Handled'\n  if (kpis.avgDataItemsPerRun > 1) return 'Avg Items/Run'\n  if (kpis.totalDataProcessed > 0) return 'Data Processed'\n  return 'Operations'\n}\n\nconst formatBusinessMetric = () => {\n  // Show the most relevant REAL business metric\n  const kpis = workflowStats.value?.kpis\n  if (!kpis) return 0\n\n  // Return actual data from KPIs\n  if (kpis.ordersProcessed > 0) return kpis.ordersProcessed\n  if (kpis.aiResponsesGenerated > 0) return kpis.aiResponsesGenerated\n  if (kpis.emailsProcessed > 0) return kpis.emailsProcessed\n  if (kpis.avgDataItemsPerRun > 1) return kpis.avgDataItemsPerRun.toFixed(1)\n  if (kpis.totalDataProcessed > 0) return kpis.totalDataProcessed\n  return kpis.totalExecutions || 0\n}\n\nconst formatRelativeTime = (timestamp: string) => {\n  const date = new Date(timestamp)\n  const now = new Date()\n  const diff = now.getTime() - date.getTime()\n\n  const minutes = Math.floor(diff / 60000)\n  const hours = Math.floor(diff / 3600000)\n  const days = Math.floor(diff / 86400000)\n\n  if (minutes < 1) return 'Just now'\n  if (minutes < 60) return `${minutes} minute${minutes > 1 ? 's' : ''} ago`\n  if (hours < 24) return `${hours} hour${hours > 1 ? 's' : ''} ago`\n  return `${days} day${days > 1 ? 's' : ''} ago`\n}\n\n// Utility functions\nconst formatDuration = (ms: number) => {\n  if (ms < 1000) return `${ms}ms`\n  if (ms < 60000) return `${(ms / 1000).toFixed(1)}s`\n  return `${(ms / 60000).toFixed(1)}min`\n}\n\nconst formatTimestamp = (timestamp: string | number) => {\n  // Handle both string ISO dates and Unix timestamps\n  const date = typeof timestamp === 'number' ? new Date(timestamp) : new Date(timestamp)\n  return date.toLocaleString('it-IT', {\n    dateStyle: 'short',\n    timeStyle: 'medium'\n  })\n}\n\n// Actions\nconst replyToCustomer = (context: any) => {\n  const customerEmail = context.customerEmail\n  const subject = context.subject || ''\n  \n  if (customerEmail) {\n    window.open(`mailto:${customerEmail}?subject=Re: ${subject}`, '_blank')\n  }\n}\n\nconst downloadReport = () => {\n  if (!timelineData.value) return\n  \n  const reportContent = generateBusinessReport()\n  const blob = new Blob([reportContent], { type: 'text/plain;charset=utf-8' })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.href = url\n  link.download = `business-process-report-${props.workflowId}-${new Date().toISOString().slice(0, 10)}.txt`\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n  URL.revokeObjectURL(url)\n}\n\nconst generateBusinessReport = (): string => {\n  if (!timelineData.value) return ''\n  \n  let report = `╔${'═'.repeat(78)}╗\\n`\n  report += `║${' '.repeat(15)}BUSINESS PROCESS EXECUTION REPORT${' '.repeat(16)}║\\n`\n  report += `║${' '.repeat(25)}PilotPro Control Center${' '.repeat(29)}║\\n`\n  report += `╚${'═'.repeat(78)}╝\\n\\n`\n  \n  // Process Information\n  report += `┌─ PROCESS INFORMATION ${'─'.repeat(56)}┐\\n\\n`\n  report += `  Process Name:      ${timelineData.value.workflowName || ''}\\n`\n  report += `  Process ID:        ${props.workflowId}\\n`\n  report += `  Status:            ${timelineData.value.status === 'active' ? 'ACTIVE' : 'INACTIVE'}\\n`\n  \n  if (timelineData.value.lastExecution) {\n    report += `\\n  LAST EXECUTION:\\n`\n    report += `  ├─ Execution ID:   ${timelineData.value.lastExecution.id}\\n`\n    report += `  ├─ Date/Time:      ${formatTimestamp(timelineData.value.lastExecution.executedAt)}\\n`\n    report += `  ├─ Total Duration: ${formatDuration(timelineData.value.lastExecution.duration)}\\n`\n    report += `  └─ Status:         ${timelineData.value.lastExecution.status || 'Completed'}\\n`\n  }\n  \n  report += `\\n└${'─'.repeat(78)}┘\\n\\n`\n  \n  // Business Context\n  if (timelineData.value.execution?.businessContext && Object.keys(timelineData.value.execution.businessContext).length > 0) {\n    report += `┌─ BUSINESS CONTEXT ANALYSIS ${'─'.repeat(50)}┐\\n\\n`\n    \n    const context = timelineData.value.execution.businessContext\n    if (context.customerEmail) {\n      report += `  CUSTOMER INFORMATION:\\n`\n      report += `     Email: ${context.customerEmail}\\n\\n`\n    }\n    \n    if (context.subject) {\n      report += `  COMMUNICATION SUBJECT:\\n`\n      report += `     \"${context.subject}\"\\n\\n`\n    }\n    \n    if (context.orderId) {\n      report += `  ORDER REFERENCE:\\n`\n      report += `     Order ID: ${context.orderId}\\n\\n`\n    }\n    \n    if (context.classification) {\n      report += `  AI CLASSIFICATION:\\n`\n      report += `     Category: ${context.classification}\\n`\n      if (context.confidence) {\n        report += `     Confidence: ${context.confidence}%\\n`\n      }\n      report += `\\n`\n    }\n    \n    report += `└${'─'.repeat(78)}┘\\n\\n`\n  }\n  \n  return report\n}\n\nconst showJsonData = () => {\n  const preElement = document.getElementById('raw-data-content')\n  if (preElement && timelineData.value) {\n    const sanitizedJson = JSON.stringify(timelineData.value, null, 2)\n      .replace(/n8n/gi, 'WFEngine')\n      .replace(/\\.nodes\\./g, '.engine.')\n      .replace(/\\.base\\./g, '.core.')\n    preElement.textContent = sanitizedJson\n  }\n}\n\n// Executions Details Helper Functions\nconst formatBusinessStepType = (step: any): string => {\n  const nodeName = step.name?.toLowerCase() || ''\n  \n  if (nodeName.includes('mail') || nodeName.includes('ricezione')) {\n    return 'Customer Communication'\n  }\n  if (nodeName.includes('milena') || nodeName.includes('assistente')) {\n    return 'AI Assistant Processing'\n  }\n  if (nodeName.includes('qdrant') || nodeName.includes('vector')) {\n    return 'Knowledge Base Search'\n  }\n  if (nodeName.includes('ordini') || nodeName.includes('order')) {\n    return 'Order Management'\n  }\n  if (nodeName.includes('supabase') || nodeName.includes('database')) {\n    return 'Data Storage Operation'\n  }\n  if (nodeName.includes('execute') || nodeName.includes('workflow')) {\n    return 'Business Process Execution'\n  }\n  \n  return 'Business Process Step'\n}\n\nconst generateExecutionDetail = (step: any): string => {\n  const nodeName = step.name?.toLowerCase() || ''\n  \n  // Email nodes - focus on communication\n  if (nodeName.includes('ricezione') && step.data?.outputJson) {\n    const email = step.data.outputJson\n    if (email.oggetto && email.mittente) {\n      return `Customer email received from ${email.mittente} regarding \"${email.oggetto}\". Message successfully processed and categorized for business response.`\n    }\n    return 'Customer email received and processed successfully.'\n  }\n  \n  // AI Assistant nodes - focus on intelligence\n  if ((nodeName.includes('milena') || nodeName.includes('assistente')) && step.data?.outputJson?.output) {\n    const aiOutput = step.data.outputJson.output\n    if (aiOutput.categoria) {\n      return `AI Assistant analyzed the customer request and generated an intelligent response. Category: ${aiOutput.categoria}. Response crafted based on business knowledge and customer context.`\n    }\n    return 'AI Assistant processed the request and generated an intelligent, personalized response for the customer.'\n  }\n  \n  // Vector/Knowledge search nodes\n  if (nodeName.includes('qdrant') || nodeName.includes('vector')) {\n    return 'Knowledge base searched to find relevant information and context for providing accurate customer support.'\n  }\n  \n  // Order/Database nodes\n  if (nodeName.includes('ordini') || nodeName.includes('order')) {\n    return 'Order information retrieved and processed to provide customer with accurate status and details.'\n  }\n  \n  // Database storage nodes\n  if (nodeName.includes('supabase') || nodeName.includes('database')) {\n    return 'Customer interaction data saved to business database for future reference and analytics.'\n  }\n  \n  // Sub-workflow execution\n  if (nodeName.includes('execute') || nodeName.includes('workflow')) {\n    return 'Business process sub-routine executed successfully to handle specific customer requirements.'\n  }\n  \n  // Generic business value\n  return 'Business process step completed successfully, contributing to efficient customer service automation.'\n}\n\n// Intelligent Summary Helper Functions\nconst getIntelligentSummaryIcon = (type: string) => {\n  const icons: Record<string, string> = {\n    'document': 'lucide:file-text',\n    'dataset': 'lucide:table',\n    'statistical': 'lucide:bar-chart-2',\n    'ai_generated': 'lucide:sparkles',\n    'email_batch': 'lucide:mail',\n    'api_response': 'lucide:cloud',\n    'generic': 'lucide:file'\n  }\n  return icons[type] || 'lucide:file'\n}\n\nconst getIntelligentSummaryLabel = (summaryType: string) => {\n  const labels: Record<string, string> = {\n    'document': 'Document Analysis',\n    'dataset': 'Data Table',\n    'emails': 'Email Batch',\n    'api': 'API Response',\n    'statistics': 'Statistical Analysis',\n    'ai': 'AI Analysis',\n    'generic': 'Process Data'\n  }\n  return labels[summaryType] || 'Process Data'\n}\n\nconst formatMetricKey = (key: string) => {\n  return key.replace(/_/g, ' ').replace(/([A-Z])/g, ' $1').trim()\n}\n\nconst formatMetricValue = (value: any) => {\n  if (typeof value === 'number') {\n    if (value > 1000000) return `${(value / 1000000).toFixed(1)}M`\n    if (value > 1000) return `${(value / 1000).toFixed(1)}K`\n    if (value % 1 !== 0) return value.toFixed(2)\n    return value.toString()\n  }\n  if (typeof value === 'boolean') return value ? 'Yes' : 'No'\n  if (value === null || value === undefined) return '-'\n  return value.toString()\n}\n\nconst formatActionLabel = (action: string) => {\n  const labels: Record<string, string> = {\n    'download_full': 'Download Full Data',\n    'request_ai_analysis': 'AI Analysis',\n    'extract_data': 'Extract Data',\n    'view_full_table': 'View Full Table',\n    'export_excel': 'Export Excel',\n    'generate_report': 'Generate Report',\n    'analyze_patterns': 'Analyze Patterns',\n    'view_all_emails': 'View All Emails',\n    'export_list': 'Export List',\n    'analyze_sentiment': 'Analyze Sentiment',\n    'view_json': 'View JSON',\n    'export_data': 'Export Data',\n    'analyze_structure': 'Analyze Structure',\n    'view_chart': 'View Chart',\n    'export_stats': 'Export Statistics',\n    'analyze_trends': 'Analyze Trends',\n    'view_raw': 'View Raw',\n    'download': 'Download',\n    'regenerate_analysis': 'Regenerate Analysis'\n  }\n  return labels[action] || action\n}\n\nconst toggleExpandedStep = (stepId: string) => {\n  if (expandedSteps.value.has(stepId)) {\n    expandedSteps.value.delete(stepId)\n  } else {\n    expandedSteps.value.add(stepId)\n  }\n}\n\nconst handleIntelligentAction = async (action: string, step: any) => {\n  console.log('🎯 Handling intelligent action:', action, step)\n  \n  switch(action) {\n    case 'download_full':\n      downloadFullData(step)\n      break\n    case 'request_ai_analysis':\n      await requestAIAnalysis(step)\n      break\n    case 'export_excel':\n      exportToExcel(step)\n      break\n    case 'generate_report':\n      generateStepReport(step)\n      break\n    default:\n      showToast('info', `Action \"${action}\" not yet implemented`)\n  }\n}\n\nconst downloadFullData = (step: any) => {\n  const data = step.data?.rawOutputData || step.data?.outputJson || {}\n  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.href = url\n  link.download = `${step.name}-data-${new Date().toISOString().slice(0, 10)}.json`\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n  URL.revokeObjectURL(url)\n  showToast('success', 'Data downloaded successfully')\n}\n\nconst requestAIAnalysis = async (step: any) => {\n  showToast('info', 'Requesting AI analysis...')\n  // TODO: Implement AI analysis request\n  // This would call the backend to process through Ollama\n  setTimeout(() => {\n    showToast('success', 'AI analysis complete')\n  }, 2000)\n}\n\n\nconst exportToExcel = async (step: any) => {\n  try {\n    // Prepare CSV data for Excel-compatible format\n    const csvRows = []\n\n    // Add headers\n    csvRows.push(['Field', 'Value', 'Details'])\n\n    // Add basic info\n    csvRows.push(['Step Name', step.name, ''])\n    csvRows.push(['Type', step.data?.intelligentSummary?.businessSummary?.title || step.type, ''])\n    csvRows.push(['Status', step.status, ''])\n    csvRows.push(['Execution Time', formatDuration(step.executionTime || 0), ''])\n    csvRows.push(['Started', step.startTime ? new Date(step.startTime).toLocaleString('it-IT') : '', ''])\n    csvRows.push(['Finished', step.endTime ? new Date(step.endTime).toLocaleString('it-IT') : '', ''])\n\n    // Add business summary if available\n    if (step.data?.intelligentSummary?.businessSummary?.description) {\n      csvRows.push(['', '', '']) // Empty row\n      csvRows.push(['Business Summary', step.data.intelligentSummary.businessSummary.description, ''])\n    }\n\n    // Add metrics if available\n    if (step.data?.intelligentSummary?.metrics) {\n      csvRows.push(['', '', '']) // Empty row\n      csvRows.push(['Metrics', '', ''])\n      Object.entries(step.data.intelligentSummary.metrics).forEach(([key, value]) => {\n        csvRows.push(['', key, String(value)])\n      })\n    }\n\n    // Add preview data if available\n    if (step.data?.intelligentSummary?.preview?.sampleRows) {\n      csvRows.push(['', '', '']) // Empty row\n      csvRows.push(['Preview Data', '', ''])\n\n      const sampleRows = step.data.intelligentSummary.preview.sampleRows\n      if (Array.isArray(sampleRows) && sampleRows.length > 0) {\n        // Add headers from first row\n        const headers = Object.keys(sampleRows[0])\n        csvRows.push(headers)\n\n        // Add data rows\n        sampleRows.forEach((row: any) => {\n          csvRows.push(headers.map(h => String(row[h] || '')))\n        })\n      }\n    }\n\n    // Convert to CSV string\n    const csvContent = csvRows\n      .map(row => row.map(cell => {\n        // Escape quotes and wrap in quotes if contains comma or newline\n        const escaped = String(cell).replace(/\"/g, '\"\"')\n        return escaped.includes(',') || escaped.includes('\\n') || escaped.includes('\"')\n          ? `\"${escaped}\"`\n          : escaped\n      }).join(','))\n      .join('\\n')\n\n    // Create blob with BOM for Excel compatibility\n    const BOM = '\\uFEFF'\n    const blob = new Blob([BOM + csvContent], { type: 'text/csv;charset=utf-8;' })\n\n    // Download file\n    const url = URL.createObjectURL(blob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = `${step.name}-data-${new Date().toISOString().slice(0, 10)}.csv`\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    URL.revokeObjectURL(url)\n\n    showToast('success', 'CSV file downloaded successfully (Excel compatible)')\n  } catch (error) {\n    console.error('Export error:', error)\n    showToast('error', 'Failed to export data')\n  }\n}\n\nconst generateStepReport = (step: any) => {\n  const report = `\nBusiness Process Step Report\n============================\nStep Name: ${step.name}\nType: ${step.data?.intelligentSummary?.businessSummary?.title || step.type}\nStatus: ${step.status}\nExecution Time: ${formatDuration(step.executionTime || 0)}\n\nBusiness Summary:\n${step.data?.intelligentSummary?.businessSummary?.description || ''}\n\nBusiness Insight:\n${step.data?.intelligentSummary?.businessInsight || ''}\n\nGenerated: ${new Date().toLocaleString()}\n  `.trim()\n  \n  const blob = new Blob([report], { type: 'text/plain' })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement('a')\n  link.href = url\n  link.download = `${step.name}-report-${new Date().toISOString().slice(0, 10)}.txt`\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n  URL.revokeObjectURL(url)\n  showToast('success', 'Report generated successfully')\n}\n\n// Lifecycle\nwatch(() => props.show, (newShow) => {\n  if (newShow) {\n    console.log('📊 Timeline modal opened for process:', props.workflowId)\n    loadTimeline()\n  }\n})\n\nonMounted(() => {\n  if (props.show) {\n    loadTimeline()\n  }\n})\n</script>\n\n<style scoped>\n/* Glassmorphism Cards - Insights Theme */\n.card-glassmorphism {\n  background: linear-gradient(135deg,\n    rgba(25, 25, 25, 0.5) 0%,\n    rgba(20, 20, 20, 0.3) 100%);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n}\n\n.metric-card-glassmorphism {\n  background: linear-gradient(135deg,\n    rgba(30, 30, 30, 0.4) 0%,\n    rgba(25, 25, 25, 0.2) 100%);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n}\n\n.metric-card-glassmorphism:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25);\n  border-color: rgba(16, 185, 129, 0.2);\n}\n\n.value-card-glassmorphism {\n  background: linear-gradient(135deg,\n    rgba(16, 185, 129, 0.08) 0%,\n    rgba(16, 185, 129, 0.03) 100%);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border: 1px solid rgba(16, 185, 129, 0.2);\n  box-shadow:\n    0 8px 32px rgba(0, 0, 0, 0.2),\n    0 0 40px rgba(16, 185, 129, 0.05);\n}\n\n/* Performance Metrics Cards */\n.performance-card {\n  background: linear-gradient(135deg,\n    rgba(30, 30, 30, 0.3) 0%,\n    rgba(25, 25, 25, 0.2) 100%);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n/* Activity Pattern Cards */\n.activity-card {\n  background: rgba(20, 20, 20, 0.4);\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.03);\n}\n</style>"],"names":["useModal","initialShow","config","uiStore","useUIStore","show","ref","isLoading","error","closeOnEscape","closeOnClickOutside","showLoadingSpinner","open","close","setLoading","loading","setError","err","showToast","type","title","message","handleKeydown","event","handleClickOutside","watch","newShow","props","__props","activeTab","hasContent","computed","_createBlock","_Teleport","_createElementBlock","_cache","_withModifiers","_unref","args","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","Icon","headerIcon","_hoisted_5","_toDisplayString","subtitle","$slots","_openBlock","_hoisted_6","_renderSlot","_ctx","_hoisted_7","_hoisted_8","$emit","_hoisted_9","_hoisted_10","_hoisted_11","loadingText","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","tabs","_hoisted_16","_Fragment","_renderList","tab","$event","_normalizeClass","_hoisted_17","_hoisted_18","data","_hoisted_19","useBusinessParser","sanitizeNodeType","nodeType","extractEmailData","insights","subject","sender","field","emailBody","preview","extractAIData","aiResponse","extractOrderData","extractVectorData","matches","count","extractGenericData","dataString","emailRegex","emails","processData","keys","parseBusinessData","dataType","nodeName","sanitizedType","nodeNameLower","errorSummary","errorDetails","errorType","stackTrace","httpCode","timestamp","date","firstLine","isEmailNode","isAINode","isOrderNode","isVectorNode","emailData","aiData","orderData","vectorData","formatBusinessData","parsedData","header","details","formatTimelineStepData","inputData","outputData","parsedInput","parsedOutput","inputSummary","outputSummary","emailContent","cleanContent","responseContent","cleanResponse","searchResults","resultCount","firstResult","parsedResult","content","workflowResult","businessValue","generateBusinessValue","parseIntelligentSummary","summary","key","value","parsed","cleanHtmlContent","truncateText","text","maxLength","truncated","lastSpace","detectDataType","calculateConfidence","fieldCount","EmailParser","confidence","cleanBody","result","jsonData","indicators","domain","AIResponseParser","response","responseText","prompt","clean","UnifiedBusinessProcessor","context","cacheKey","firstKey","orderId","item","total","query","results","index","timelineData","expandedSteps","executionsHistory","workflowStats","recentActivity","workflowInfo","modalTitle","modalSubtitle","workflow","execution","status","loadTimeline","API_BASE","API_BASE_URL","dashboardResponse","$fetch","fullStatsResponse","dashboardError","url","businessAPI","originalLength","node","enrichedData","getBusinessSummary","step","getBusinessErrorSummary","getBusinessErrorDetails","detail","getBusinessErrorContext","calculateSuccessRate","successCount","failedCount","getBusinessMetricLabel","kpis","formatBusinessMetric","formatRelativeTime","diff","minutes","hours","days","formatDuration","ms","formatTimestamp","generateBusinessReport","report","showJsonData","preElement","sanitizedJson","formatBusinessStepType","generateExecutionDetail","email","aiOutput","getIntelligentSummaryIcon","getIntelligentSummaryLabel","summaryType","formatMetricKey","formatMetricValue","formatActionLabel","action","toggleExpandedStep","stepId","handleIntelligentAction","downloadFullData","requestAIAnalysis","exportToExcel","generateStepReport","blob","link","csvRows","sampleRows","headers","row","h","csvContent","cell","escaped","BOM","onMounted","DetailModal","_withCtx","capability","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","activity","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","idx","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","day","_normalizeStyle","d","_hoisted_101","_hoisted_102","_hoisted_103","_hoisted_104","_hoisted_105","exec","_hoisted_106","_hoisted_107","_hoisted_108","_hoisted_109","_hoisted_110","_hoisted_111","_hoisted_112","_hoisted_113","_hoisted_114","_hoisted_115","_hoisted_116","_hoisted_117","_hoisted_118","_hoisted_119","_hoisted_120","_hoisted_121","_hoisted_122","_hoisted_123","_hoisted_124","_hoisted_125","_hoisted_126","_hoisted_127","_hoisted_128","_hoisted_129","_hoisted_130","_hoisted_131","_hoisted_132","_hoisted_133","_hoisted_134","_hoisted_135","_hoisted_136","_hoisted_137","_hoisted_138","_hoisted_139","_hoisted_140","_hoisted_141","_hoisted_142","_hoisted_143","_hoisted_145","_hoisted_147","_hoisted_149","_hoisted_150","_hoisted_151","_createTextVNode","_hoisted_152","_hoisted_153","_hoisted_154","_hoisted_155","_hoisted_156","_hoisted_157","_hoisted_159","_hoisted_160","_hoisted_161","_hoisted_162","_hoisted_163","_hoisted_164","_hoisted_165","_hoisted_166","_hoisted_167","_hoisted_168","_hoisted_169","_hoisted_170","_hoisted_171","_hoisted_172","_hoisted_173","_hoisted_174","_hoisted_175","_hoisted_176","_hoisted_177","_hoisted_179","_hoisted_180","_hoisted_181","_hoisted_182","_hoisted_183","_hoisted_184","_hoisted_185","_hoisted_186","_hoisted_187","_hoisted_188","_hoisted_189","_hoisted_190","_hoisted_191","_hoisted_192","_hoisted_193","_hoisted_194","_hoisted_195","_hoisted_196","_hoisted_197","_hoisted_198","_hoisted_199","_hoisted_200","_hoisted_201","_hoisted_202","_hoisted_203","_hoisted_204","_hoisted_205","_hoisted_206","_hoisted_207","_hoisted_208","_hoisted_209","_hoisted_210","_hoisted_211","_hoisted_212","_hoisted_213","_hoisted_214","e","_hoisted_215","_hoisted_216","_hoisted_217","_hoisted_218","_hoisted_219","_hoisted_220","_hoisted_221","_hoisted_222","_hoisted_223","_hoisted_224","_hoisted_225","_hoisted_226","_hoisted_227","_hoisted_228","_hoisted_229","_hoisted_230","_hoisted_231","_hoisted_232","_hoisted_233","_hoisted_234","_hoisted_235","_hoisted_236","_hoisted_237","_hoisted_238","_hoisted_239","_hoisted_240","_hoisted_241"],"mappings":"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"}