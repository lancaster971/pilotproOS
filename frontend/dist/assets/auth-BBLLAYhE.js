import{a9 as y,r,K as p}from"./index-B-y45HLq.js";const T=y("auth",()=>{const t=r(null),a=r(localStorage.getItem("pilotpro_token")),c=r(!1),s=r(null),u=r(null),d=p(()=>!!a.value),h=p(()=>t.value?.tenantId||"client_simulation_a"),m=async(e,l)=>{c.value=!0,s.value=null;try{console.log("🌐 Making fetch to /api/auth/login...");const o=await fetch("/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:l}),credentials:"include"});console.log("📡 Response received:",o.status,o.statusText);const n=await o.json();if(console.log("📄 Response data:",n),!o.ok)throw new Error(n.message||"Login failed");t.value={id:n.user.id,email:n.user.email,name:n.user.email.split("@")[0],role:n.user.role,tenantId:"pilotpros_client",createdAt:new Date().toISOString()},a.value="authenticated",i(),console.log("✅ Login successful with HttpOnly cookies:",t.value)}catch(o){throw s.value=o.message||"Login failed",console.error("❌ Login failed:",o),o}finally{c.value=!1}},f=async()=>{console.log("🚪 Logout initiated..."),g();try{await fetch("/api/auth/logout",{method:"POST",credentials:"include"}),console.log("✅ Server logout successful")}catch(e){console.error("❌ Logout API failed (continuing anyway):",e)}t.value=null,a.value=null,s.value=null,localStorage.removeItem("pilotpro_token"),console.log("✅ Logout completed - all state cleared")},v=async()=>{localStorage.removeItem("pilotpro_token");try{const e=await fetch("/api/auth/profile",{credentials:"include"});if(e.ok){const l=await e.json();t.value={id:l.user.id,email:l.user.email,name:l.user.email.split("@")[0],role:l.user.role,tenantId:"pilotpros_client",createdAt:l.user.createdAt},a.value="authenticated",i(),console.log("✅ Auth initialized from HttpOnly cookies:",t.value)}else console.log("ℹ️ No existing authentication found (expected)")}catch{console.log("ℹ️ Auth initialization skipped (no connection)")}},i=()=>{g(),u.value=setTimeout(async()=>{console.log("🔄 Auto-refresh: Refreshing token before expiry...");try{(await fetch("/api/auth/refresh",{method:"POST",credentials:"include"})).ok?(console.log("✅ Token refreshed successfully!"),i()):(console.log("❌ Token refresh failed, logging out"),await f(),s.value="Sessione scaduta. Effettua nuovamente il login.")}catch(e){console.error("❌ Error refreshing token:",e),i()}},13*60*1e3)},g=()=>{u.value&&(clearTimeout(u.value),u.value=null)};return{user:t,token:a,isLoading:c,error:s,isAuthenticated:d,tenantId:h,login:m,logout:f,initializeAuth:v,resetAutoLogoutTimer:()=>{d.value&&i()},clearAutoLogoutTimer:g}});export{T as useAuthStore};
//# sourceMappingURL=auth-BBLLAYhE.js.map
