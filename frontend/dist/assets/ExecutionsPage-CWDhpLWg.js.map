{"version":3,"file":"ExecutionsPage-CWDhpLWg.js","sources":["../../src/stores/workflows.ts","../../src/pages/ExecutionsPage.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport type { Workflow, WorkflowStats } from '../types'\nimport { businessAPI } from '../services/api-client'\n\nexport const useWorkflowsStore = defineStore('workflows', () => {\n  // State - same structure as n8n workflow store\n  const workflows = ref<Workflow[]>([])\n  const selectedWorkflow = ref<Workflow | null>(null)\n  const isLoading = ref(false)\n  const error = ref<string | null>(null)\n  const lastFetch = ref<number>(0)\n\n  // Getters - computed properties like n8n\n  const stats = computed((): WorkflowStats => ({\n    total: workflows.value.length,\n    active: workflows.value.filter(w => w.active && !w.is_archived).length,\n    inactive: workflows.value.filter(w => !w.active && !w.is_archived).length,\n    archived: workflows.value.filter(w => w.is_archived).length,\n  }))\n\n  const activeWorkflows = computed(() => \n    workflows.value.filter(w => w.active && !w.is_archived)\n  )\n\n  const recentWorkflows = computed(() => \n    workflows.value\n      .sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime())\n      .slice(0, 10)\n  )\n\n  // Actions - same API approach as n8n\n  const fetchWorkflows = async () => {\n    isLoading.value = true\n    error.value = null\n\n    try {\n      // Use our PilotProOS backend API\n      const response = await apiClient.get('/api/business/processes')\n      const data = response.data\n\n      // Transform backend data to workflow format\n      workflows.value = (data.data || []).map((process: any): Workflow => ({\n        id: process.process_id,\n        name: process.process_name,\n        active: process.is_active,\n        is_archived: false,\n        created_at: process.created_date || new Date().toISOString(),\n        updated_at: process.last_modified || new Date().toISOString(),\n        node_count: 5, // Default value\n        execution_count: parseInt(process.executions_today) || 0,\n        has_webhook: false,\n        last_execution: process.last_modified,\n        tags: [],\n        settings: {},\n      }))\n\n      lastFetch.value = Date.now()\n      console.log('✅ Workflows loaded:', workflows.value.length)\n      \n    } catch (err: any) {\n      error.value = err.message || 'Failed to load workflows'\n      console.error('❌ Failed to load workflows:', err)\n      \n      // Fallback data for demo\n      workflows.value = [{\n        id: '1',\n        name: 'TRY Backend',\n        active: true,\n        is_archived: false,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n        node_count: 5,\n        execution_count: 0,\n        has_webhook: false,\n        last_execution: null,\n        tags: [],\n        settings: {},\n      }]\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  const selectWorkflow = (workflow: Workflow) => {\n    selectedWorkflow.value = workflow\n    console.log('✅ Workflow selected:', workflow.name)\n  }\n\n  const toggleWorkflow = async (workflow: Workflow) => {\n    try {\n      // In real implementation, call backend API\n      workflow.active = !workflow.active\n      console.log(`✅ Workflow ${workflow.active ? 'activated' : 'deactivated'}:`, workflow.name)\n    } catch (err: any) {\n      console.error('❌ Failed to toggle workflow:', err)\n    }\n  }\n\n  const createWorkflow = async (workflowData: Partial<Workflow>) => {\n    try {\n      // In real implementation, call backend API\n      const newWorkflow: Workflow = {\n        id: 'new-' + Date.now(),\n        name: workflowData.name || 'New Workflow',\n        active: false,\n        is_archived: false,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n        node_count: 0,\n        execution_count: 0,\n        has_webhook: false,\n        last_execution: null,\n        tags: workflowData.tags || [],\n        settings: workflowData.settings || {},\n      }\n      \n      workflows.value.push(newWorkflow)\n      console.log('✅ Workflow created:', newWorkflow.name)\n      return newWorkflow\n    } catch (err: any) {\n      console.error('❌ Failed to create workflow:', err)\n      throw err\n    }\n  }\n\n  return {\n    // State\n    workflows,\n    selectedWorkflow,\n    isLoading,\n    error,\n    lastFetch,\n    \n    // Getters\n    stats,\n    activeWorkflows,\n    recentWorkflows,\n    \n    // Actions\n    fetchWorkflows,\n    selectWorkflow,\n    toggleWorkflow,\n    createWorkflow,\n  }\n})","<template>\n  <MainLayout>\n    <div class=\"executions-container\">\n\n      <!-- Professional KPI Bar -->\n      <div class=\"professional-kpi-bar\">\n        <div class=\"kpi-card\">\n          <Icon icon=\"mdi:sigma\" class=\"kpi-card-icon\" />\n          <div class=\"kpi-card-content\">\n            <div class=\"kpi-card-value\">{{ executionStats.total }}</div>\n            <div class=\"kpi-card-label\">TOTAL RUNS</div>\n          </div>\n        </div>\n\n        <div class=\"kpi-card highlight-success\">\n          <Icon icon=\"mdi:check-circle\" class=\"kpi-card-icon\" />\n          <div class=\"kpi-card-content\">\n            <div class=\"kpi-card-value\">{{ executionStats.success }}</div>\n            <div class=\"kpi-card-label\">SUCCESS</div>\n          </div>\n        </div>\n\n        <div class=\"kpi-card highlight-error\">\n          <Icon icon=\"mdi:alert-circle\" class=\"kpi-card-icon\" />\n          <div class=\"kpi-card-content\">\n            <div class=\"kpi-card-value\">{{ executionStats.error }}</div>\n            <div class=\"kpi-card-label\">ERRORS</div>\n          </div>\n        </div>\n\n        <div class=\"kpi-card\">\n          <Icon icon=\"mdi:cancel\" class=\"kpi-card-icon\" />\n          <div class=\"kpi-card-content\">\n            <div class=\"kpi-card-value\">{{ executionStats.canceled }}</div>\n            <div class=\"kpi-card-label\">CANCELED</div>\n          </div>\n        </div>\n\n        <div class=\"kpi-card\">\n          <Icon icon=\"mdi:play-circle\" class=\"kpi-card-icon\" />\n          <div class=\"kpi-card-content\">\n            <div class=\"kpi-card-value\">{{ executionStats.running }}</div>\n            <div class=\"kpi-card-label\">RUNNING</div>\n          </div>\n        </div>\n\n        <div class=\"kpi-card\">\n          <Icon icon=\"mdi:clock-outline\" class=\"kpi-card-icon\" />\n          <div class=\"kpi-card-content\">\n            <div class=\"kpi-card-value\">{{ executionStats.waiting }}</div>\n            <div class=\"kpi-card-label\">WAITING</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Filters - Excel Style -->\n      <div class=\"control-card p-4\">\n        <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n          <!-- Search Input -->\n          <div class=\"relative\">\n            <Icon icon=\"mdi:magnify\" class=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500\" />\n            <input\n              v-model=\"searchTerm\"\n              type=\"text\"\n              placeholder=\"Cerca executions...\"\n              class=\"w-full pl-10 pr-4 py-2 bg-gray-800 border border-gray-700 rounded-md text-white text-sm focus:border-green-500 focus:outline-none\"\n            />\n          </div>\n\n          <!-- Status Filter -->\n          <select\n            v-model=\"statusFilter\"\n            class=\"px-3 py-2 bg-gray-800 border border-gray-700 rounded-md text-white text-sm focus:border-green-500 focus:outline-none\"\n          >\n            <option value=\"all\">Any Status ({{ executionStats.total }})</option>\n            <option value=\"success\">Success ({{ executionStats.success }})</option>\n            <option value=\"error\">Error ({{ executionStats.error }})</option>\n            <option value=\"canceled\">Canceled ({{ executionStats.canceled }})</option>\n            <option value=\"running\">Running ({{ executionStats.running }})</option>\n            <option value=\"waiting\">Waiting ({{ executionStats.waiting }})</option>\n          </select>\n\n          <!-- Workflow Filter -->\n          <select\n            v-model=\"workflowFilter\"\n            class=\"px-3 py-2 bg-gray-800 border border-gray-700 rounded-md text-white text-sm focus:border-green-500 focus:outline-none\"\n          >\n            <option value=\"all\">All Workflows</option>\n            <option\n              v-for=\"workflow in uniqueWorkflows\"\n              :key=\"workflow.id\"\n              :value=\"workflow.id\"\n            >\n              {{ workflow.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <!-- Executions Table - Excel Dark Style -->\n      <div class=\"bg-gray-900 border border-gray-700 rounded-lg overflow-hidden\">\n        <div class=\"overflow-x-auto\">\n          <table class=\"w-full border-collapse\">\n            <thead>\n              <tr class=\"bg-gray-800 border-b-2 border-gray-600\">\n                <th class=\"border-r border-gray-700 px-2 py-1 text-xs font-bold text-gray-300 text-left\">PROCESS NAME</th>\n                <th class=\"border-r border-gray-700 px-2 py-1 text-xs font-bold text-gray-300 text-left\">STATUS</th>\n                <th class=\"border-r border-gray-700 px-2 py-1 text-xs font-bold text-gray-300 text-left\">STARTED</th>\n                <th class=\"border-r border-gray-700 px-2 py-1 text-xs font-bold text-gray-300 text-left\">RUN TIME</th>\n                <th class=\"border-r border-gray-700 px-2 py-1 text-xs font-bold text-gray-300 text-left\">EXEC. ID</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-if=\"filteredExecutions.length === 0\">\n                <td colspan=\"6\" class=\"px-2 py-8 text-center text-gray-500 bg-gray-900\">\n                  <Icon icon=\"mdi:play-circle-outline\" class=\"h-8 w-8 mx-auto mb-2 text-gray-600\" />\n                  No process runs found\n                </td>\n              </tr>\n\n              <tr\n                v-for=\"(execution, index) in filteredExecutions\"\n                :key=\"execution.id\"\n                class=\"border-b border-gray-700 hover:bg-gray-800\"\n                :class=\"{ 'bg-gray-900': index % 2 === 0, 'bg-gray-850': index % 2 === 1 }\"\n              >\n\n                <td class=\"border-r border-gray-700 px-2 py-1\">\n                  <div class=\"text-xs text-gray-100 max-w-xs\">\n                    <span\n                      @click=\"openExecutionDetails(execution)\"\n                      class=\"truncate block cursor-pointer hover:text-green-400 transition-colors\"\n                      :title=\"execution.workflow_name || execution.processName\"\n                    >\n                      {{ execution.workflow_name || execution.processName }}\n                    </span>\n                  </div>\n                </td>\n\n                <td class=\"border-r border-gray-700 px-2 py-1\">\n                  <!-- Success Status -->\n                  <span\n                    v-if=\"execution.status === 'success'\"\n                    class=\"text-xs text-green-300 font-bold\"\n                  >\n                    SUCCESS\n                  </span>\n                  <!-- Error Status -->\n                  <span\n                    v-else-if=\"execution.status === 'error'\"\n                    class=\"text-xs text-red-300 font-bold\"\n                  >\n                    ERROR\n                  </span>\n                  <!-- Canceled Status -->\n                  <span\n                    v-else-if=\"execution.status === 'canceled'\"\n                    class=\"text-xs text-yellow-300 font-bold\"\n                  >\n                    CANCELED\n                  </span>\n                  <!-- Running Status -->\n                  <span\n                    v-else-if=\"execution.status === 'running'\"\n                    class=\"text-xs text-blue-300 font-bold\"\n                  >\n                    RUNNING\n                  </span>\n                  <!-- Waiting Status -->\n                  <span\n                    v-else-if=\"execution.status === 'waiting'\"\n                    class=\"text-xs text-orange-300 font-bold\"\n                  >\n                    WAITING\n                  </span>\n                  <!-- Unknown Status (fallback) -->\n                  <span\n                    v-else\n                    class=\"text-xs text-white font-bold\"\n                  >\n                    {{ (execution.status || 'UNKNOWN').toUpperCase() }}\n                  </span>\n                </td>\n\n                <td class=\"border-r border-gray-700 px-2 py-1 text-xs text-gray-300\">\n                  {{ formatTime(execution.started_at) }}\n                </td>\n\n                <td class=\"border-r border-gray-700 px-2 py-1 text-xs text-gray-300\">\n                  {{ formatDuration(execution.duration_ms) }}\n                </td>\n\n                <td class=\"border-gray-700 px-2 py-1 text-xs text-gray-400\">\n                  #{{ execution.id || execution.processRunId }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <!-- Pagination -->\n      <div v-if=\"executions.length > 0\" class=\"flex items-center justify-between\">\n        <p class=\"text-sm text-gray-400\">\n          Pagina {{ currentPage }} di {{ totalPages }} -\n          Visualizzando {{ filteredExecutions.length }} di {{ allFilteredExecutions.length }} risultati\n        </p>\n        <div class=\"flex items-center gap-2\">\n          <button\n            @click=\"currentPage = Math.max(1, currentPage - 1)\"\n            :disabled=\"currentPage === 1\"\n            class=\"btn-control text-xs px-3 py-1\"\n            :class=\"currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''\"\n          >\n            ← Precedente\n          </button>\n          <span class=\"text-white text-sm px-2\">\n            {{ currentPage }} / {{ totalPages }}\n          </span>\n          <button\n            @click=\"currentPage = Math.min(totalPages, currentPage + 1)\"\n            :disabled=\"currentPage === totalPages\"\n            class=\"btn-control text-xs px-3 py-1\"\n            :class=\"currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''\"\n          >\n            Successiva →\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Timeline Modal for Execution Details -->\n    <TimelineModal\n      :show=\"showTimelineModal\"\n      :workflow-id=\"selectedExecutionWorkflowId\"\n      :tenant-id=\"authStore.tenantId\"\n      @close=\"closeTimelineModal\"\n    />\n  </MainLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport MainLayout from '../components/layout/MainLayout.vue'\nimport TimelineModal from '../components/common/TimelineModal.vue'\nimport { useAuthStore } from '../stores/auth'\nimport { useWorkflowsStore } from '../stores/workflows'\nimport { useUIStore } from '../stores/ui'\nimport { businessAPI } from '../services/api-client'\nimport webSocketService from '../services/websocket'\nimport type { Execution } from '../types'\n\n// Stores\nconst authStore = useAuthStore()\nconst workflowsStore = useWorkflowsStore()\nconst uiStore = useUIStore()\n\n// Local state\nconst isLoading = ref(false)\nconst autoRefresh = ref(true)\nconst searchTerm = ref('')\nconst statusFilter = ref<'all' | 'success' | 'error' | 'canceled' | 'running' | 'waiting'>('all')\nconst workflowFilter = ref('all')\nconst executions = ref<Execution[]>([])\n\n// Dropdown state\nconst showStatusDropdown = ref(false)\nconst showWorkflowDropdown = ref(false)\n\n// Pagination state\nconst currentPage = ref(1)\nconst itemsPerPage = ref(20)\n\n// Modal state\nconst showTimelineModal = ref(false)\nconst selectedExecutionWorkflowId = ref<string>('')\n\n// Auto-refresh interval\nlet refreshInterval: NodeJS.Timeout\n\n// Reset to page 1 when filters change\nwatch([searchTerm, statusFilter, workflowFilter], () => {\n  currentPage.value = 1\n})\n\n// Computed\nconst executionStats = computed(() => {\n  const stats = {\n    total: executions.value.length,\n    success: executions.value.filter(e => e.status === 'success').length,\n    error: executions.value.filter(e => e.status === 'error').length,\n    canceled: executions.value.filter(e => e.status === 'canceled').length,\n    running: executions.value.filter(e => e.status === 'running').length,\n    waiting: executions.value.filter(e => e.status === 'waiting').length,\n  }\n  console.log('📈 Execution Stats:', stats)\n  return stats\n})\n\nconst uniqueWorkflows = computed(() => {\n  const workflows = new Map()\n  executions.value.forEach(exec => {\n    const id = exec.workflow_id || exec.processId\n    const name = exec.workflow_name || exec.processName\n    if (id && name) {\n      workflows.set(id, name)\n    }\n  })\n  return Array.from(workflows.entries()).map(([id, name]) => ({\n    id,\n    name\n  }))\n})\n\n// All filtered executions (before pagination)\nconst allFilteredExecutions = computed(() => {\n  console.log('🔍 Filtering executions. Total:', executions.value.length)\n  const filtered = executions.value.filter((execution) => {\n    // Search filter\n    const matchesSearch = execution.workflow_name?.toLowerCase().includes(searchTerm.value.toLowerCase()) ||\n                         execution.processName?.toLowerCase().includes(searchTerm.value.toLowerCase()) ||\n                         String(execution.id).includes(searchTerm.value)\n\n    // Status filter\n    const matchesStatus = statusFilter.value === 'all' || execution.status === statusFilter.value\n\n    // Workflow filter\n    const matchesWorkflow = workflowFilter.value === 'all' ||\n                          execution.workflow_id === workflowFilter.value ||\n                          execution.processId === workflowFilter.value\n\n    return matchesSearch && matchesStatus && matchesWorkflow\n  })\n  console.log('✅ All filtered:', filtered.length)\n  return filtered\n})\n\n// Paginated executions\nconst filteredExecutions = computed(() => {\n  const start = (currentPage.value - 1) * itemsPerPage.value\n  const end = start + itemsPerPage.value\n  return allFilteredExecutions.value.slice(start, end)\n})\n\nconst totalPages = computed(() => {\n  return Math.ceil(allFilteredExecutions.value.length / itemsPerPage.value)\n})\n\n// Helper to normalize status\nconst normalizeStatus = (originalStatus: string | null, label?: string): string => {\n  if (!originalStatus) return 'success'\n\n  const status = originalStatus.toLowerCase()\n  if (status.includes('success')) return 'success'\n  if (status.includes('error') || status.includes('fail')) return 'error'\n  if (status.includes('cancel')) return 'canceled'\n  if (status.includes('running') || status.includes('progress')) return 'running'\n  if (status.includes('waiting') || status.includes('pending')) return 'waiting'\n\n  // Check business label as fallback\n  if (label) {\n    const businessLabel = label.toLowerCase()\n    if (businessLabel.includes('completed')) return 'success'\n    if (businessLabel.includes('attention')) return 'error'\n    if (businessLabel.includes('progress')) return 'running'\n  }\n\n  return 'success' // Default to success\n}\n\n// Helper to map execution data\nconst mapExecution = (execution: any) => {\n  const statusKey = normalizeStatus(execution.originalStatus, execution.processRunStatus?.label) || 'success'\n  return {\n    ...execution,\n    id: execution.processRunId || execution.id,\n    workflow_id: execution.processId || execution.workflow_id,\n    workflow_name: execution.processName || execution.workflow_name,\n    status: statusKey,\n    started_at: execution.processRunStarted || execution.processRunStartTime || execution.started_at,\n    stopped_at: execution.processRunStopped || execution.processRunEndTime || execution.stopped_at,\n    duration_ms: execution.processRunDuration ? execution.processRunDuration * 1000 : (execution.processDuration || execution.duration_ms || 0),\n    originalStatus: execution.originalStatus,\n    processRunStatus: execution.processRunStatus\n  }\n}\n\n// Methods\nconst refreshExecutions = async () => {\n  console.log('🚀 Starting refresh executions...')\n  isLoading.value = true\n\n  try {\n    // Use the correct API method that ExecutionsPagePrime uses\n    const data = await businessAPI.getProcessExecutions()\n    console.log('🔥 RAW API DATA:', data)\n\n    if (data.processRuns && Array.isArray(data.processRuns)) {\n      console.log('📦 First execution raw:', data.processRuns[0])\n      executions.value = data.processRuns.map(mapExecution)\n      console.log('✅ Mapped executions:', executions.value)\n\n      if (executions.value.length > 0) {\n        uiStore.showToast('Process Runs', `${executions.value.length} process runs loaded`, 'success')\n      }\n    } else {\n      console.log('⚠️ No processRuns in data')\n      executions.value = []\n    }\n  } catch (error: any) {\n    console.error('❌ ERROR loading executions:', error.message)\n    uiStore.showToast('Error', error.message || 'Unable to load process runs', 'error')\n    executions.value = []\n  } finally {\n    isLoading.value = false\n  }\n}\n\n\n// Status helpers - same pattern as n8n\nconst getStatusClass = (status: string | null) => {\n  switch (status) {\n    case 'success':\n      return 'text-green-400 bg-green-500/10 border-green-500/30'\n    case 'error':\n      return 'text-red-400 bg-red-500/10 border-red-500/30'\n    case 'canceled':\n      return 'text-gray-400 bg-gray-500/10 border-gray-500/30'\n    case 'running':\n      return 'text-blue-400 bg-blue-500/10 border-blue-500/30'\n    case 'waiting':\n      return 'text-yellow-400 bg-yellow-500/10 border-yellow-500/30'\n    case 'unknown':\n      return 'text-gray-400 bg-gray-500/10 border-gray-500/30'\n    default:\n      return 'text-green-400 bg-green-500/10 border-green-500/30' // Default to success color\n  }\n}\n\nconst getStatusDot = (status: string | null) => {\n  switch (status) {\n    case 'success': return 'bg-green-500'\n    case 'error': return 'bg-red-500'\n    case 'canceled': return 'bg-gray-500'\n    case 'running': return 'bg-blue-500'\n    case 'waiting': return 'bg-yellow-500'\n    case 'unknown': return 'bg-gray-500'\n    default: return 'bg-green-500' // Default to success color\n  }\n}\n\nconst getStatusLabel = (status: string | null) => {\n  switch (status) {\n    case 'success': return 'Success'\n    case 'error': return 'Error'\n    case 'canceled': return 'Canceled'\n    case 'running': return 'Running'\n    case 'waiting': return 'Waiting'\n    case 'unknown': return 'Unknown'\n    default: return 'Success' // Default to Success\n  }\n}\n\nconst formatTime = (dateString: string | null | undefined) => {\n  if (!dateString) return '-'\n\n  const date = new Date(dateString)\n  if (isNaN(date.getTime())) return '-'\n\n  const now = new Date()\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n  const executionDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n\n  const timeStr = date.toLocaleTimeString('it-IT', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  })\n\n  if (executionDate.getTime() === today.getTime()) {\n    return timeStr\n  }\n\n  return `${date.toLocaleDateString('it-IT', {\n    month: 'short',\n    day: '2-digit'\n  })}, ${timeStr}`\n}\n\nconst formatDuration = (ms?: number) => {\n  if (!ms) return '-'\n  if (ms < 1000) return `${ms}ms`\n  if (ms < 60000) return `${Math.round(ms / 1000 * 10) / 10}s`\n  return `${Math.round(ms / 60000 * 10) / 10}min`\n}\n\n// Auto-refresh setup\nwatch(autoRefresh, (enabled) => {\n  if (enabled) {\n    webSocketService.startAutoRefresh('executions', refreshExecutions, 5000)\n  } else {\n    webSocketService.stopAutoRefresh('executions')\n  }\n})\n\n// Modal functions\nconst openExecutionDetails = (execution: any) => {\n  console.log('🔥 CLICK DETECTED! Execution:', execution)\n  console.log('🎯 Opening execution details for:', execution.workflow_name, 'ID:', execution.workflow_id)\n  selectedExecutionWorkflowId.value = execution.workflow_id\n  showTimelineModal.value = true\n}\n\nconst closeTimelineModal = () => {\n  showTimelineModal.value = false\n  selectedExecutionWorkflowId.value = ''\n}\n\n// Lifecycle\nonMounted(() => {\n  refreshExecutions()\n  workflowsStore.fetchWorkflows() // For workflow filter\n  \n  if (autoRefresh.value) {\n    webSocketService.startAutoRefresh('executions', refreshExecutions, 5000)\n  }\n  \n  // Listen for real-time execution events\n  window.addEventListener('execution:started', refreshExecutions)\n  window.addEventListener('execution:completed', refreshExecutions)\n})\n\nonUnmounted(() => {\n  // Stop auto-refresh\n  webSocketService.stopAutoRefresh('executions')\n  \n  // Clean up event listeners\n  window.removeEventListener('execution:started', refreshExecutions)\n  window.removeEventListener('execution:completed', refreshExecutions)\n})\n</script>\n\n<style scoped>\n/* Professional Design matching InsightsPage */\n.executions-container {\n  width: 100%;\n  padding: 20px;\n  background: #0a0a0a;\n  min-height: 100vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: calc(100vh - 40px);\n}\n\n/* Header Styling */\n.header-bar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding: 16px 0;\n  border-bottom: 1px solid rgba(31, 41, 55, 0.5);\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #e5e7eb;\n  margin: 0;\n}\n\n.page-subtitle {\n  font-size: 13px;\n  color: #6b7280;\n  margin-top: 4px;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.auto-refresh-toggle {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.checkbox-input {\n  width: 16px;\n  height: 16px;\n  background: rgba(31, 41, 55, 0.5);\n  border: 1px solid rgba(107, 114, 128, 0.3);\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.checkbox-label {\n  font-size: 12px;\n  color: #9ca3af;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.inline-icon {\n  font-size: 14px;\n  color: #6b7280;\n}\n\n/* Action Buttons */\n.action-button {\n  padding: 8px 16px;\n  background: rgba(31, 41, 55, 0.5);\n  border: 1px solid rgba(107, 114, 128, 0.3);\n  border-radius: 6px;\n  color: #e5e7eb;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.action-button:hover:not(:disabled) {\n  background: rgba(31, 41, 55, 0.8);\n  border-color: rgba(16, 185, 129, 0.3);\n  transform: translateY(-1px);\n}\n\n.action-button.primary {\n  background: rgba(59, 130, 246, 0.1);\n  border-color: rgba(59, 130, 246, 0.3);\n  color: #93bbfc;\n}\n\n.action-button.primary:hover {\n  background: rgba(59, 130, 246, 0.2);\n}\n\n.action-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.button-icon {\n  font-size: 16px;\n}\n\n/* Professional KPI Bar */\n.professional-kpi-bar {\n  display: flex;\n  gap: 0;\n  background: rgba(10, 10, 15, 0.8);\n  border: 1px solid rgba(31, 41, 55, 0.4);\n  border-radius: 12px;\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.6);\n  backdrop-filter: blur(10px);\n}\n\n.kpi-card {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 16px 20px;\n  background: rgba(15, 15, 20, 0.6);\n  border: 1px solid rgba(31, 41, 55, 0.3);\n  border-radius: 8px;\n  margin-right: 16px;\n  position: relative;\n}\n\n.kpi-card:last-child {\n  margin-right: 0;\n}\n\n.kpi-card.highlight-success {\n  background: rgba(16, 185, 129, 0.05);\n  border-color: rgba(16, 185, 129, 0.2);\n}\n\n.kpi-card.highlight-success .kpi-card-value {\n  color: #10b981;\n}\n\n.kpi-card.highlight-success .kpi-card-icon {\n  color: #10b981;\n}\n\n.kpi-card.highlight-error {\n  background: rgba(239, 68, 68, 0.05);\n  border-color: rgba(239, 68, 68, 0.2);\n}\n\n.kpi-card.highlight-error .kpi-card-value {\n  color: #ef4444;\n}\n\n.kpi-card.highlight-error .kpi-card-icon {\n  color: #ef4444;\n}\n\n.kpi-card-icon {\n  font-size: 24px;\n  color: #64748b;\n  opacity: 0.8;\n}\n\n.kpi-card-content {\n  flex: 1;\n}\n\n.kpi-card-value {\n  font-size: 28px;\n  font-weight: 700;\n  color: #ffffff;\n  line-height: 1;\n  margin-bottom: 4px;\n  letter-spacing: -0.5px;\n}\n\n.kpi-card-label {\n  font-size: 10px;\n  color: #64748b;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: 500;\n}\n\n/* Section Containers */\n.section-container {\n  background: rgba(10, 10, 15, 0.9);\n  border: 1px solid rgba(31, 41, 55, 0.5);\n  border-radius: 12px;\n  padding: 24px;\n  margin-bottom: 24px;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.6);\n}\n\n/* Filter Inputs */\n.search-input {\n  width: 100%;\n  padding: 10px 40px 10px 16px;\n  background: rgba(31, 41, 55, 0.3);\n  border: 1px solid rgba(107, 114, 128, 0.3);\n  border-radius: 6px;\n  color: #e5e7eb;\n  font-size: 14px;\n}\n\n.search-input:focus {\n  outline: none;\n  border-color: rgba(16, 185, 129, 0.5);\n  background: rgba(31, 41, 55, 0.5);\n}\n\n/* Table Styling */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth {\n  text-align: left;\n  padding: 12px;\n  font-size: 12px;\n  font-weight: 600;\n  color: #9ca3af;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  border-bottom: 1px solid rgba(31, 41, 55, 0.3);\n}\n\ntd {\n  padding: 12px;\n  font-size: 13px;\n  color: #e5e7eb;\n  border-bottom: 1px solid rgba(31, 41, 55, 0.2);\n}\n\ntr:hover {\n  background: rgba(31, 41, 55, 0.1);\n}\n\n/* Status Badge */\n.status-badge {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-size: 11px;\n  font-weight: 600;\n}\n\n/* Empty State */\n.empty-state {\n  text-align: center;\n  padding: 60px 20px;\n  color: #9ca3af;\n}\n\n.empty-icon {\n  font-size: 48px;\n  color: #6b7280;\n  margin-bottom: 16px;\n}\n\n.empty-state p {\n  font-size: 14px;\n  margin-bottom: 0;\n}\n\n/* Pagination */\n.pagination {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 0;\n}\n\n/* Responsive */\n@media (max-width: 1400px) {\n  .professional-kpi-bar {\n    padding: 20px 16px;\n  }\n\n  .kpi-card {\n    padding: 12px 14px;\n    margin-right: 12px;\n  }\n\n  .kpi-card-value {\n    font-size: 24px;\n  }\n}\n\n@media (max-width: 1200px) {\n  .professional-kpi-bar {\n    flex-wrap: wrap;\n    gap: 12px;\n  }\n\n  .kpi-card {\n    min-width: calc(50% - 6px);\n    margin-right: 0;\n  }\n}\n\n@media (max-width: 768px) {\n  .professional-kpi-bar {\n    padding: 16px;\n  }\n\n  .kpi-card {\n    width: 100%;\n    min-width: 100%;\n  }\n\n  .kpi-card-value {\n    font-size: 22px;\n  }\n}\n\n/* Excel Table Zebra Stripes */\n.bg-gray-850 {\n  background-color: #111317;\n}\n\n/* Animations */\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.animate-spin {\n  animation: spin 1s linear infinite;\n}\n</style>"],"names":["useWorkflowsStore","defineStore","workflows","ref","selectedWorkflow","isLoading","error","lastFetch","stats","computed","w","activeWorkflows","recentWorkflows","b","data","process","err","workflow","workflowData","newWorkflow","authStore","useAuthStore","workflowsStore","uiStore","useUIStore","autoRefresh","searchTerm","statusFilter","workflowFilter","executions","currentPage","itemsPerPage","showTimelineModal","selectedExecutionWorkflowId","watch","executionStats","uniqueWorkflows","exec","id","name","allFilteredExecutions","filtered","execution","matchesSearch","matchesStatus","matchesWorkflow","filteredExecutions","start","end","totalPages","normalizeStatus","originalStatus","label","status","businessLabel","mapExecution","statusKey","refreshExecutions","businessAPI","formatTime","dateString","date","now","today","executionDate","timeStr","formatDuration","ms","enabled","webSocketService","openExecutionDetails","closeTimelineModal","onMounted","onUnmounted","_createBlock","MainLayout","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_unref","Icon","_hoisted_4","_hoisted_5","_toDisplayString","_cache","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","$event","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_createElementBlock","_Fragment","_renderList","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_openBlock","index","_normalizeClass","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","TimelineModal"],"mappings":"2ZAKO,MAAMA,GAAoBC,EAAY,YAAa,IAAM,CAE9D,MAAMC,EAAYC,EAAgB,EAAE,EAC9BC,EAAmBD,EAAqB,IAAI,EAC5CE,EAAYF,EAAI,EAAK,EACrBG,EAAQH,EAAmB,IAAI,EAC/BI,EAAYJ,EAAY,CAAC,EAGzBK,EAAQC,EAAS,KAAsB,CAC3C,MAAOP,EAAU,MAAM,OACvB,OAAQA,EAAU,MAAM,OAAOQ,GAAKA,EAAE,QAAU,CAACA,EAAE,WAAW,EAAE,OAChE,SAAUR,EAAU,MAAM,OAAOQ,GAAK,CAACA,EAAE,QAAU,CAACA,EAAE,WAAW,EAAE,OACnE,SAAUR,EAAU,MAAM,OAAOQ,GAAKA,EAAE,WAAW,EAAE,MAAA,EACrD,EAEIC,EAAkBF,EAAS,IAC/BP,EAAU,MAAM,UAAYQ,EAAE,QAAU,CAACA,EAAE,WAAW,CAAA,EAGlDE,EAAkBH,EAAS,IAC/BP,EAAU,MACP,KAAK,CAAC,EAAGW,IAAM,IAAI,KAAKA,EAAE,UAAU,EAAE,UAAY,IAAI,KAAK,EAAE,UAAU,EAAE,SAAS,EAClF,MAAM,EAAG,EAAE,CAAA,EAkGhB,MAAO,CAEL,UAAAX,EACA,iBAAAE,EACA,UAAAC,EACA,MAAAC,EACA,UAAAC,EAGA,MAAAC,EACA,gBAAAG,EACA,gBAAAC,EAGA,eA5GqB,SAAY,CACjCP,EAAU,MAAQ,GAClBC,EAAM,MAAQ,KAEd,GAAI,CAGF,MAAMQ,GADW,MAAM,UAAU,IAAI,yBAAyB,GACxC,KAGtBZ,EAAU,OAASY,EAAK,MAAQ,IAAI,IAAKC,IAA4B,CACnE,GAAIA,EAAQ,WACZ,KAAMA,EAAQ,aACd,OAAQA,EAAQ,UAChB,YAAa,GACb,WAAYA,EAAQ,cAAgB,IAAI,KAAA,EAAO,YAAA,EAC/C,WAAYA,EAAQ,eAAiB,IAAI,KAAA,EAAO,YAAA,EAChD,WAAY,EACZ,gBAAiB,SAASA,EAAQ,gBAAgB,GAAK,EACvD,YAAa,GACb,eAAgBA,EAAQ,cACxB,KAAM,CAAA,EACN,SAAU,CAAA,CAAC,EACX,EAEFR,EAAU,MAAQ,KAAK,IAAA,EACvB,QAAQ,IAAI,sBAAuBL,EAAU,MAAM,MAAM,CAE3D,OAASc,EAAU,CACjBV,EAAM,MAAQU,EAAI,SAAW,2BAC7B,QAAQ,MAAM,8BAA+BA,CAAG,EAGhDd,EAAU,MAAQ,CAAC,CACjB,GAAI,IACJ,KAAM,cACN,OAAQ,GACR,YAAa,GACb,WAAY,IAAI,KAAA,EAAO,YAAA,EACvB,WAAY,IAAI,KAAA,EAAO,YAAA,EACvB,WAAY,EACZ,gBAAiB,EACjB,YAAa,GACb,eAAgB,KAChB,KAAM,CAAA,EACN,SAAU,CAAA,CAAC,CACZ,CACH,QAAA,CACEG,EAAU,MAAQ,EACpB,CACF,EA2DE,eAzDsBY,GAAuB,CAC7Cb,EAAiB,MAAQa,EACzB,QAAQ,IAAI,uBAAwBA,EAAS,IAAI,CACnD,EAuDE,eArDqB,MAAOA,GAAuB,CACnD,GAAI,CAEFA,EAAS,OAAS,CAACA,EAAS,OAC5B,QAAQ,IAAI,cAAcA,EAAS,OAAS,YAAc,aAAa,IAAKA,EAAS,IAAI,CAC3F,OAASD,EAAU,CACjB,QAAQ,MAAM,+BAAgCA,CAAG,CACnD,CACF,EA8CE,eA5CqB,MAAOE,GAAoC,CAChE,GAAI,CAEF,MAAMC,EAAwB,CAC5B,GAAI,OAAS,KAAK,IAAA,EAClB,KAAMD,EAAa,MAAQ,eAC3B,OAAQ,GACR,YAAa,GACb,WAAY,IAAI,KAAA,EAAO,YAAA,EACvB,WAAY,IAAI,KAAA,EAAO,YAAA,EACvB,WAAY,EACZ,gBAAiB,EACjB,YAAa,GACb,eAAgB,KAChB,KAAMA,EAAa,MAAQ,CAAA,EAC3B,SAAUA,EAAa,UAAY,CAAA,CAAC,EAGtC,OAAAhB,EAAU,MAAM,KAAKiB,CAAW,EAChC,QAAQ,IAAI,sBAAuBA,EAAY,IAAI,EAC5CA,CACT,OAASH,EAAU,CACjB,cAAQ,MAAM,+BAAgCA,CAAG,EAC3CA,CACR,CACF,CAmBE,CAEJ,CAAC,65DC6GD,MAAMI,EAAYC,EAAA,EACZC,EAAiBtB,GAAA,EACjBuB,EAAUC,EAAA,EAGVnB,EAAYF,EAAI,EAAK,EACrBsB,EAActB,EAAI,EAAI,EACtBuB,EAAavB,EAAI,EAAE,EACnBwB,EAAexB,EAAsE,KAAK,EAC1FyB,EAAiBzB,EAAI,KAAK,EAC1B0B,EAAa1B,EAAiB,EAAE,EAGXA,EAAI,EAAK,EACPA,EAAI,EAAK,EAGtC,MAAM2B,EAAc3B,EAAI,CAAC,EACnB4B,EAAe5B,EAAI,EAAE,EAGrB6B,EAAoB7B,EAAI,EAAK,EAC7B8B,EAA8B9B,EAAY,EAAE,EAMlD+B,EAAM,CAACR,EAAYC,EAAcC,CAAc,EAAG,IAAM,CACtDE,EAAY,MAAQ,CACtB,CAAC,EAGD,MAAMK,EAAiB1B,EAAS,IAAM,CACpC,MAAMD,EAAQ,CACZ,MAAOqB,EAAW,MAAM,OACxB,QAASA,EAAW,MAAM,UAAY,EAAE,SAAW,SAAS,EAAE,OAC9D,MAAOA,EAAW,MAAM,UAAY,EAAE,SAAW,OAAO,EAAE,OAC1D,SAAUA,EAAW,MAAM,UAAY,EAAE,SAAW,UAAU,EAAE,OAChE,QAASA,EAAW,MAAM,UAAY,EAAE,SAAW,SAAS,EAAE,OAC9D,QAASA,EAAW,MAAM,UAAY,EAAE,SAAW,SAAS,EAAE,MAAA,EAEhE,eAAQ,IAAI,sBAAuBrB,CAAK,EACjCA,CACT,CAAC,EAEK4B,EAAkB3B,EAAS,IAAM,CACrC,MAAMP,MAAgB,IACtB,OAAA2B,EAAW,MAAM,QAAQQ,GAAQ,CAC/B,MAAMC,EAAKD,EAAK,aAAeA,EAAK,UAC9BE,EAAOF,EAAK,eAAiBA,EAAK,YACpCC,GAAMC,GACRrC,EAAU,IAAIoC,EAAIC,CAAI,CAE1B,CAAC,EACM,MAAM,KAAKrC,EAAU,QAAA,CAAS,EAAE,IAAI,CAAC,CAACoC,EAAIC,CAAI,KAAO,CAC1D,GAAAD,EACA,KAAAC,CAAA,EACA,CACJ,CAAC,EAGKC,EAAwB/B,EAAS,IAAM,CAC3C,QAAQ,IAAI,kCAAmCoB,EAAW,MAAM,MAAM,EACtE,MAAMY,EAAWZ,EAAW,MAAM,OAAQa,GAAc,CAEtD,MAAMC,EAAgBD,EAAU,eAAe,YAAA,EAAc,SAAShB,EAAW,MAAM,aAAa,GAC/EgB,EAAU,aAAa,YAAA,EAAc,SAAShB,EAAW,MAAM,YAAA,CAAa,GAC5E,OAAOgB,EAAU,EAAE,EAAE,SAAShB,EAAW,KAAK,EAG7DkB,EAAgBjB,EAAa,QAAU,OAASe,EAAU,SAAWf,EAAa,MAGlFkB,EAAkBjB,EAAe,QAAU,OAC3Bc,EAAU,cAAgBd,EAAe,OACzCc,EAAU,YAAcd,EAAe,MAE7D,OAAOe,GAAiBC,GAAiBC,CAC3C,CAAC,EACD,eAAQ,IAAI,kBAAmBJ,EAAS,MAAM,EACvCA,CACT,CAAC,EAGKK,EAAqBrC,EAAS,IAAM,CACxC,MAAMsC,GAASjB,EAAY,MAAQ,GAAKC,EAAa,MAC/CiB,EAAMD,EAAQhB,EAAa,MACjC,OAAOS,EAAsB,MAAM,MAAMO,EAAOC,CAAG,CACrD,CAAC,EAEKC,EAAaxC,EAAS,IACnB,KAAK,KAAK+B,EAAsB,MAAM,OAAST,EAAa,KAAK,CACzE,EAGKmB,EAAkB,CAACC,EAA+BC,IAA2B,CACjF,GAAI,CAACD,EAAgB,MAAO,UAE5B,MAAME,EAASF,EAAe,YAAA,EAC9B,GAAIE,EAAO,SAAS,SAAS,EAAG,MAAO,UACvC,GAAIA,EAAO,SAAS,OAAO,GAAKA,EAAO,SAAS,MAAM,EAAG,MAAO,QAChE,GAAIA,EAAO,SAAS,QAAQ,EAAG,MAAO,WACtC,GAAIA,EAAO,SAAS,SAAS,GAAKA,EAAO,SAAS,UAAU,EAAG,MAAO,UACtE,GAAIA,EAAO,SAAS,SAAS,GAAKA,EAAO,SAAS,SAAS,EAAG,MAAO,UAGrE,GAAID,EAAO,CACT,MAAME,EAAgBF,EAAM,YAAA,EAC5B,GAAIE,EAAc,SAAS,WAAW,EAAG,MAAO,UAChD,GAAIA,EAAc,SAAS,WAAW,EAAG,MAAO,QAChD,GAAIA,EAAc,SAAS,UAAU,EAAG,MAAO,SACjD,CAEA,MAAO,SACT,EAGMC,EAAgBb,GAAmB,CACvC,MAAMc,EAAYN,EAAgBR,EAAU,eAAgBA,EAAU,kBAAkB,KAAK,GAAK,UAClG,MAAO,CACL,GAAGA,EACH,GAAIA,EAAU,cAAgBA,EAAU,GACxC,YAAaA,EAAU,WAAaA,EAAU,YAC9C,cAAeA,EAAU,aAAeA,EAAU,cAClD,OAAQc,EACR,WAAYd,EAAU,mBAAqBA,EAAU,qBAAuBA,EAAU,WACtF,WAAYA,EAAU,mBAAqBA,EAAU,mBAAqBA,EAAU,WACpF,YAAaA,EAAU,mBAAqBA,EAAU,mBAAqB,IAAQA,EAAU,iBAAmBA,EAAU,aAAe,EACzI,eAAgBA,EAAU,eAC1B,iBAAkBA,EAAU,gBAAA,CAEhC,EAGMe,EAAoB,SAAY,CACpC,QAAQ,IAAI,mCAAmC,EAC/CpD,EAAU,MAAQ,GAElB,GAAI,CAEF,MAAMS,EAAO,MAAM4C,GAAY,qBAAA,EAC/B,QAAQ,IAAI,mBAAoB5C,CAAI,EAEhCA,EAAK,aAAe,MAAM,QAAQA,EAAK,WAAW,GACpD,QAAQ,IAAI,0BAA2BA,EAAK,YAAY,CAAC,CAAC,EAC1De,EAAW,MAAQf,EAAK,YAAY,IAAIyC,CAAY,EACpD,QAAQ,IAAI,uBAAwB1B,EAAW,KAAK,EAEhDA,EAAW,MAAM,OAAS,GAC5BN,EAAQ,UAAU,eAAgB,GAAGM,EAAW,MAAM,MAAM,uBAAwB,SAAS,IAG/F,QAAQ,IAAI,2BAA2B,EACvCA,EAAW,MAAQ,CAAA,EAEvB,OAASvB,EAAY,CACnB,QAAQ,MAAM,8BAA+BA,EAAM,OAAO,EAC1DiB,EAAQ,UAAU,QAASjB,EAAM,SAAW,8BAA+B,OAAO,EAClFuB,EAAW,MAAQ,CAAA,CACrB,QAAA,CACExB,EAAU,MAAQ,EACpB,CACF,EA+CMsD,EAAcC,GAA0C,CAC5D,GAAI,CAACA,EAAY,MAAO,IAExB,MAAMC,EAAO,IAAI,KAAKD,CAAU,EAChC,GAAI,MAAMC,EAAK,QAAA,CAAS,EAAG,MAAO,IAElC,MAAMC,MAAU,KACVC,EAAQ,IAAI,KAAKD,EAAI,YAAA,EAAeA,EAAI,SAAA,EAAYA,EAAI,SAAS,EACjEE,EAAgB,IAAI,KAAKH,EAAK,YAAA,EAAeA,EAAK,SAAA,EAAYA,EAAK,SAAS,EAE5EI,EAAUJ,EAAK,mBAAmB,QAAS,CAC/C,KAAM,UACN,OAAQ,UACR,OAAQ,SAAA,CACT,EAED,OAAIG,EAAc,QAAA,IAAcD,EAAM,UAC7BE,EAGF,GAAGJ,EAAK,mBAAmB,QAAS,CACzC,MAAO,QACP,IAAK,SAAA,CACN,CAAC,KAAKI,CAAO,EAChB,EAEMC,EAAkBC,GACjBA,EACDA,EAAK,IAAa,GAAGA,CAAE,KACvBA,EAAK,IAAc,GAAG,KAAK,MAAMA,EAAK,IAAO,EAAE,EAAI,EAAE,IAClD,GAAG,KAAK,MAAMA,EAAK,IAAQ,EAAE,EAAI,EAAE,MAH1B,IAOlBjC,EAAMT,EAAc2C,GAAY,CAC1BA,EACFC,EAAiB,iBAAiB,aAAcZ,EAAmB,GAAI,EAEvEY,EAAiB,gBAAgB,YAAY,CAEjD,CAAC,EAGD,MAAMC,EAAwB5B,GAAmB,CAC/C,QAAQ,IAAI,gCAAiCA,CAAS,EACtD,QAAQ,IAAI,oCAAqCA,EAAU,cAAe,MAAOA,EAAU,WAAW,EACtGT,EAA4B,MAAQS,EAAU,YAC9CV,EAAkB,MAAQ,EAC5B,EAEMuC,EAAqB,IAAM,CAC/BvC,EAAkB,MAAQ,GAC1BC,EAA4B,MAAQ,EACtC,EAGA,OAAAuC,EAAU,IAAM,CACdf,EAAA,EACAnC,EAAe,eAAA,EAEXG,EAAY,OACd4C,EAAiB,iBAAiB,aAAcZ,EAAmB,GAAI,EAIzE,OAAO,iBAAiB,oBAAqBA,CAAiB,EAC9D,OAAO,iBAAiB,sBAAuBA,CAAiB,CAClE,CAAC,EAEDgB,GAAY,IAAM,CAEhBJ,EAAiB,gBAAgB,YAAY,EAG7C,OAAO,oBAAoB,oBAAqBZ,CAAiB,EACjE,OAAO,oBAAoB,sBAAuBA,CAAiB,CACrE,CAAC,cA3hBCiB,GA6OaC,GAAA,KAAA,YA5OX,IAmOM,CAnONC,EAmOM,MAnONC,GAmOM,CAhOJD,EAgDM,MAhDNE,GAgDM,CA/CJF,EAMM,MANNG,GAMM,CALJC,EAA+CC,EAAAC,CAAA,EAAA,CAAzC,KAAK,YAAY,MAAM,eAAA,GAC7BN,EAGM,MAHNO,GAGM,CAFJP,EAA4D,MAA5DQ,GAA4DC,EAA7BlD,EAAA,MAAe,KAAK,EAAA,CAAA,EACnDmD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAV,EAA4C,MAAA,CAAvC,MAAM,gBAAA,EAAiB,aAAU,EAAA,EAAA,KAI1CA,EAMM,MANNW,GAMM,CALJP,EAAsDC,EAAAC,CAAA,EAAA,CAAhD,KAAK,mBAAmB,MAAM,eAAA,GACpCN,EAGM,MAHNY,GAGM,CAFJZ,EAA8D,MAA9Da,GAA8DJ,EAA/BlD,EAAA,MAAe,OAAO,EAAA,CAAA,EACrDmD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAV,EAAyC,MAAA,CAApC,MAAM,gBAAA,EAAiB,UAAO,EAAA,EAAA,KAIvCA,EAMM,MANNc,GAMM,CALJV,EAAsDC,EAAAC,CAAA,EAAA,CAAhD,KAAK,mBAAmB,MAAM,eAAA,GACpCN,EAGM,MAHNe,GAGM,CAFJf,EAA4D,MAA5DgB,GAA4DP,EAA7BlD,EAAA,MAAe,KAAK,EAAA,CAAA,EACnDmD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAV,EAAwC,MAAA,CAAnC,MAAM,gBAAA,EAAiB,SAAM,EAAA,EAAA,KAItCA,EAMM,MANNiB,GAMM,CALJb,EAAgDC,EAAAC,CAAA,EAAA,CAA1C,KAAK,aAAa,MAAM,eAAA,GAC9BN,EAGM,MAHNkB,GAGM,CAFJlB,EAA+D,MAA/DmB,GAA+DV,EAAhClD,EAAA,MAAe,QAAQ,EAAA,CAAA,EACtDmD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAV,EAA0C,MAAA,CAArC,MAAM,gBAAA,EAAiB,WAAQ,EAAA,EAAA,KAIxCA,EAMM,MANNoB,GAMM,CALJhB,EAAqDC,EAAAC,CAAA,EAAA,CAA/C,KAAK,kBAAkB,MAAM,eAAA,GACnCN,EAGM,MAHNqB,GAGM,CAFJrB,EAA8D,MAA9DsB,GAA8Db,EAA/BlD,EAAA,MAAe,OAAO,EAAA,CAAA,EACrDmD,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAV,EAAyC,MAAA,CAApC,MAAM,gBAAA,EAAiB,UAAO,EAAA,EAAA,KAIvCA,EAMM,MANNuB,GAMM,CALJnB,EAAuDC,EAAAC,CAAA,EAAA,CAAjD,KAAK,oBAAoB,MAAM,eAAA,GACrCN,EAGM,MAHNwB,GAGM,CAFJxB,EAA8D,MAA9DyB,GAA8DhB,EAA/BlD,EAAA,MAAe,OAAO,EAAA,CAAA,EACrDmD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAV,EAAyC,MAAA,CAApC,MAAM,gBAAA,EAAiB,UAAO,EAAA,EAAA,OAMzCA,EAyCM,MAzCN0B,GAyCM,CAxCJ1B,EAuCM,MAvCN2B,GAuCM,CArCJ3B,EAQM,MARN4B,GAQM,CAPJxB,EAAkGC,EAAAC,CAAA,EAAA,CAA5F,KAAK,cAAc,MAAM,gEAAA,KAC/BN,EAKE,QAAA,sCAJSlD,EAAU,MAAA+E,GACnB,KAAK,OACL,YAAY,sBACZ,MAAM,mIAAA,iBAHG/E,EAAA,KAAU,CAAA,OAQvBkD,EAUS,SAAA,sCATEjD,EAAY,MAAA8E,GACrB,MAAM,sHAAA,GAEN7B,EAAoE,SAApE8B,GAAoB,iBAAevE,EAAA,MAAe,KAAK,EAAG,IAAC,CAAA,EAC3DyC,EAAuE,SAAvE+B,GAAwB,cAAYxE,EAAA,MAAe,OAAO,EAAG,IAAC,CAAA,EAC9DyC,EAAiE,SAAjEgC,GAAsB,YAAUzE,EAAA,MAAe,KAAK,EAAG,IAAC,CAAA,EACxDyC,EAA0E,SAA1EiC,GAAyB,eAAa1E,EAAA,MAAe,QAAQ,EAAG,IAAC,CAAA,EACjEyC,EAAuE,SAAvEkC,GAAwB,cAAY3E,EAAA,MAAe,OAAO,EAAG,IAAC,CAAA,EAC9DyC,EAAuE,SAAvEmC,GAAwB,cAAY5E,EAAA,MAAe,OAAO,EAAG,IAAC,CAAA,CAAA,WARrDR,EAAA,KAAY,CAAA,KAYvBiD,EAYS,SAAA,sCAXEhD,EAAc,MAAA6E,GACvB,MAAM,sHAAA,GAENnB,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAV,EAA0C,SAAA,CAAlC,MAAM,KAAA,EAAM,gBAAa,EAAA,UACjCoC,EAMSC,EAAA,KAAAC,EALY9E,EAAA,MAAZnB,QADT+F,EAMS,SAAA,CAJN,IAAK/F,EAAS,GACd,MAAOA,EAAS,EAAA,EAEdoE,EAAApE,EAAS,IAAI,EAAA,EAAAkG,EAAA,oBATTvF,EAAA,KAAc,CAAA,OAgB7BgD,EAmGM,MAnGNwC,GAmGM,CAlGJxC,EAiGM,MAjGNyC,GAiGM,CAhGJzC,EA+FQ,QA/FR0C,GA+FQ,eA9FN1C,EAQQ,QAAA,KAAA,CAPNA,EAMK,KAAA,CAND,MAAM,0CAAwC,CAChDA,EAA0G,KAAA,CAAtG,MAAM,8EAAA,EAA+E,cAAY,EACrGA,EAAoG,KAAA,CAAhG,MAAM,8EAAA,EAA+E,QAAM,EAC/FA,EAAqG,KAAA,CAAjG,MAAM,8EAAA,EAA+E,SAAO,EAChGA,EAAsG,KAAA,CAAlG,MAAM,8EAAA,EAA+E,UAAQ,EACjGA,EAAsG,KAAA,CAAlG,MAAM,8EAAA,EAA+E,UAAQ,CAAA,SAGrGA,EAoFQ,QAAA,KAAA,CAnFI9B,EAAA,MAAmB,SAAM,OAAnCkE,EAKK,KAAAO,GAAA,CAJH3C,EAGK,KAHL4C,GAGK,CAFHxC,EAAkFC,EAAAC,CAAA,EAAA,CAA5E,KAAK,0BAA0B,MAAM,oCAAA,oBAAuC,0BAEpF,EAAA,EAAA,gBAGFuC,EAAA,EAAA,EAAAT,EA2EKC,EAAA,KAAAC,EA1E0BpE,EAAA,MAAkB,CAAvCJ,EAAWgF,SADrBV,EA2EK,KAAA,CAzEF,IAAKtE,EAAU,GAChB,MAAKiF,EAAA,CAAC,6CAA4C,CAAA,cACzBD,sBAAgCA,EAAK,IAAA,CAAA,CAAA,CAAA,CAAA,GAG9D9C,EAUK,KAVLgD,GAUK,CATHhD,EAQM,MARNiD,GAQM,CAPJjD,EAMO,OAAA,CALJ,QAAK6B,GAAEnC,EAAqB5B,CAAS,EACtC,MAAM,uEACL,MAAOA,EAAU,eAAiBA,EAAU,WAAA,EAE1C2C,EAAA3C,EAAU,eAAiBA,EAAU,WAAW,EAAA,EAAAoF,EAAA,CAAA,KAKzDlD,EA2CK,KA3CLmD,GA2CK,CAxCKrF,EAAU,SAAM,eADxBsE,EAKO,OALPgB,GAGC,WAED,GAGatF,EAAU,SAAM,aAD7BsE,EAKO,OALPiB,GAGC,SAED,GAGavF,EAAU,SAAM,gBAD7BsE,EAKO,OALPkB,GAGC,YAED,GAGaxF,EAAU,SAAM,eAD7BsE,EAKO,OALPmB,GAGC,WAED,GAGazF,EAAU,SAAM,eAD7BsE,EAKO,OALPoB,GAGC,WAED,IAEAX,EAAA,EAAAT,EAKO,OALPqB,GAKOhD,GADD3C,EAAU,mBAAqB,YAAA,CAAW,EAAA,CAAA,EAAA,GAIlDkC,EAEK,KAFL0D,GAEKjD,EADA1B,EAAWjB,EAAU,UAAU,CAAA,EAAA,CAAA,EAGpCkC,EAEK,KAFL2D,GAEKlD,EADAnB,EAAexB,EAAU,WAAW,CAAA,EAAA,CAAA,EAGzCkC,EAEK,KAFL4D,GAA4D,KACzDnD,EAAG3C,EAAU,IAAMA,EAAU,YAAY,EAAA,CAAA,CAAA,qBAS3Cb,EAAA,MAAW,OAAM,GAA5B4F,IAAAT,EA0BM,MA1BNyB,GA0BM,CAzBJ7D,EAGI,IAHJ8D,GAAiC,aACrB5G,EAAA,KAAW,EAAG,OAAIuD,EAAGpC,EAAA,KAAU,EAAG,oBAC9BoC,EAAGvC,EAAA,MAAmB,MAAM,EAAG,SAAON,EAAA,MAAsB,MAAM,EAAG,cACrF,CAAA,EACAoC,EAoBM,MApBN+D,GAoBM,CAnBJ/D,EAOS,SAAA,CANN,uBAAO9C,EAAA,MAAc,KAAK,MAAOA,EAAA,MAAW,CAAA,GAC5C,SAAUA,EAAA,QAAW,EACtB,MAAK6F,EAAA,CAAC,gCACE7F,EAAA,QAAW,EAAA,gCAAA,EAAA,CAAA,CAAA,EACpB,iBAED,GAAA8G,EAAA,EACAhE,EAEO,OAFPiE,GAEOxD,EADFvD,OAAW,EAAG,QAAMmB,EAAA,KAAU,EAAA,CAAA,EAEnC2B,EAOS,SAAA,CANN,QAAKU,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAmB,GAAE3E,QAAc,KAAK,IAAImB,EAAA,MAAYnB,EAAA,MAAW,CAAA,GACrD,SAAUA,EAAA,QAAgBmB,EAAA,MAC3B,MAAK0E,EAAA,CAAC,gCACE7F,EAAA,QAAgBmB,EAAA,MAAU,gCAAA,EAAA,CAAA,CAAA,EACnC,iBAED,GAAA6F,EAAA,CAAA,iBAMN9D,EAKE+D,GAAA,CAJC,KAAM/G,EAAA,MACN,cAAaC,EAAA,MACb,YAAWgD,EAAA7D,CAAA,EAAU,SACrB,QAAOmD,CAAA"}