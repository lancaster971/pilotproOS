{"version":3,"file":"MilhenaChat-D9hwDBSV.js","sources":["../../src/pages/MilhenaChat.vue"],"sourcesContent":["<template>\n  <MainLayout>\n  <div class=\"milhena-chat-container\">\n    <!-- Header -->\n    <div class=\"chat-header\">\n      <div class=\"header-content\">\n        <div class=\"header-left\">\n          <Icon icon=\"mdi:robot-happy\" class=\"header-icon\" />\n          <div>\n            <h1>Milhena Assistant</h1>\n            <p class=\"subtitle\">v3.0 Learning Edition - Self-Improving AI</p>\n          </div>\n        </div>\n        <div class=\"header-stats\">\n          <div class=\"stat\">\n            <span class=\"stat-value\">{{ responseTime }}ms</span>\n            <span class=\"stat-label\">Latency</span>\n          </div>\n          <div class=\"stat\">\n            <span class=\"stat-value\">{{ accuracy }}%</span>\n            <span class=\"stat-label\">Accuracy</span>\n          </div>\n          <div class=\"stat\" v-if=\"isLearning\">\n            <Icon icon=\"mdi:brain\" class=\"learning-icon animate-pulse\" />\n            <span class=\"stat-label\">Learning...</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Chat Messages -->\n    <div class=\"chat-messages\" ref=\"messagesContainer\">\n      <!-- Welcome Message -->\n      <div v-if=\"messages.length === 0\" class=\"welcome-message\">\n        <Icon icon=\"mdi:hand-wave\" class=\"wave-icon\" />\n        <h2>Ciao! Sono Milhena</h2>\n        <p>Il tuo assistente AI per PilotProOS. Posso aiutarti con:</p>\n        <div class=\"quick-actions\">\n          <button @click=\"sendQuickMessage('Mostrami i workflow attivi')\" class=\"quick-btn\">\n            <Icon icon=\"mdi:workflow\" />\n            Workflow Attivi\n          </button>\n          <button @click=\"sendQuickMessage('Analizza le performance di oggi')\" class=\"quick-btn\">\n            <Icon icon=\"mdi:chart-line\" />\n            Performance Oggi\n          </button>\n          <button @click=\"sendQuickMessage('Quali sono gli ultimi errori?')\" class=\"quick-btn\">\n            <Icon icon=\"mdi:alert-circle\" />\n            Ultimi Errori\n          </button>\n          <button @click=\"sendQuickMessage('Come funzioni?')\" class=\"quick-btn\">\n            <Icon icon=\"mdi:help-circle\" />\n            Come Funzioni\n          </button>\n        </div>\n      </div>\n\n      <!-- Messages List -->\n      <div v-for=\"(message, index) in messages\" :key=\"index\"\n           :class=\"['message', message.role]\">\n        <div class=\"message-avatar\">\n          <Icon v-if=\"message.role === 'user'\" icon=\"mdi:account\" />\n          <Icon v-else icon=\"mdi:robot\" />\n        </div>\n        <div class=\"message-content\">\n          <div class=\"message-header\">\n            <span class=\"message-sender\">{{ message.role === 'user' ? 'Tu' : 'Milhena' }}</span>\n            <span class=\"message-time\">{{ formatTime(message.timestamp) }}</span>\n            <span v-if=\"message.latency\" class=\"message-latency\">{{ message.latency }}ms</span>\n          </div>\n          <div class=\"message-text\" v-html=\"formatMessage(message.content)\"></div>\n\n          <!-- Confidence Indicator -->\n          <div v-if=\"message.confidence\" class=\"message-confidence\">\n            <div class=\"confidence-bar\">\n              <div class=\"confidence-fill\"\n                   :style=\"{width: (message.confidence * 100) + '%'}\"\n                   :class=\"{\n                     'high': message.confidence > 0.8,\n                     'medium': message.confidence > 0.6 && message.confidence <= 0.8,\n                     'low': message.confidence <= 0.6\n                   }\">\n              </div>\n            </div>\n            <span class=\"confidence-text\">Confidence: {{ (message.confidence * 100).toFixed(0) }}%</span>\n          </div>\n\n          <!-- Feedback Buttons for Assistant Messages -->\n          <div v-if=\"message.role === 'assistant' && !message.feedback\" class=\"feedback-buttons\">\n            <button @click=\"sendFeedback(index, 'positive')\"\n                    class=\"feedback-btn positive\"\n                    title=\"Risposta utile\">\n              <Icon icon=\"mdi:thumb-up-outline\" />\n            </button>\n            <button @click=\"sendFeedback(index, 'negative')\"\n                    class=\"feedback-btn negative\"\n                    title=\"Risposta non utile\">\n              <Icon icon=\"mdi:thumb-down-outline\" />\n            </button>\n          </div>\n\n          <!-- Feedback Confirmation -->\n          <div v-if=\"message.feedback\" class=\"feedback-confirmed\">\n            <span v-if=\"message.feedback === 'positive'\" class=\"positive\">\n              <Icon icon=\"mdi:check-circle\" /> Grazie per il feedback!\n            </span>\n            <span v-else class=\"negative\">\n              <Icon icon=\"mdi:alert-circle\" /> Grazie, sto imparando...\n            </span>\n          </div>\n\n          <!-- Reformulation Helper -->\n          <div v-if=\"message.feedback === 'negative' && !message.reformulated\" class=\"reformulation-helper\">\n            <p>Puoi riformulare la domanda per aiutarmi a capire meglio?</p>\n            <div class=\"suggestions\">\n              <button v-for=\"suggestion in getReformulationSuggestions(message)\"\n                      :key=\"suggestion\"\n                      @click=\"sendQuickMessage(suggestion)\"\n                      class=\"suggestion-btn\">\n                {{ suggestion }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Typing Indicator -->\n      <div v-if=\"isTyping\" class=\"message assistant typing\">\n        <div class=\"message-avatar\">\n          <Icon icon=\"mdi:robot\" />\n        </div>\n        <div class=\"message-content\">\n          <div class=\"typing-indicator\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Input Area -->\n    <div class=\"chat-input-container\">\n      <div class=\"input-wrapper\">\n        <input\n          v-model=\"inputMessage\"\n          @keyup.enter=\"sendMessage\"\n          :disabled=\"isLoading\"\n          placeholder=\"Chiedi qualsiasi cosa su processi, workflow, performance...\"\n          class=\"chat-input\"\n        />\n        <button\n          @click=\"sendMessage\"\n          :disabled=\"!inputMessage.trim() || isLoading\"\n          class=\"send-button\"\n        >\n          <Icon v-if=\"isLoading\" icon=\"mdi:loading\" class=\"animate-spin\" />\n          <Icon v-else icon=\"mdi:send\" />\n        </button>\n      </div>\n      <div class=\"input-hint\">\n        <Icon icon=\"mdi:information\" />\n        <span v-if=\"isReformulating\" class=\"reformulation-alert\">\n          ðŸ”„ Sto imparando dalla tua correzione...\n        </span>\n        <span v-else>Milhena impara dai tuoi feedback per migliorare continuamente.</span>\n      </div>\n    </div>\n\n    <!-- Learning Stats Footer -->\n    <div class=\"learning-stats\">\n      <div class=\"stat-item\">\n        <span class=\"stat-label\">Oggi:</span>\n        <span class=\"stat-value\">{{ todayStats.queries }} queries</span>\n      </div>\n      <div class=\"stat-item\">\n        <span class=\"stat-label\">Patterns appresi:</span>\n        <span class=\"stat-value\">{{ todayStats.patterns }}</span>\n      </div>\n      <div class=\"stat-item\">\n        <span class=\"stat-label\">Miglioramento:</span>\n        <span class=\"stat-value\">+{{ todayStats.improvement }}%</span>\n      </div>\n      <div class=\"stat-item\" v-if=\"todayStats.cache_hit_rate\">\n        <span class=\"stat-label\">Cache Hit:</span>\n        <span class=\"stat-value\">{{ todayStats.cache_hit_rate }}%</span>\n      </div>\n    </div>\n  </div>\n  </MainLayout>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount, nextTick } from 'vue'\nimport { Icon } from '@iconify/vue'\nimport { useToast } from 'vue-toastification'\nimport { apiClient } from '@/services/api-client'\nimport MainLayout from '@/components/layout/MainLayout.vue'\n\nconst toast = useToast()\n\n// State\nconst messages = ref([])\nconst inputMessage = ref('')\nconst isLoading = ref(false)\nconst isTyping = ref(false)\nconst isLearning = ref(false)\nconst isReformulating = ref(false)\nconst responseTime = ref(0)\nconst accuracy = ref(92) // Will be updated from API\nconst messagesContainer = ref(null)\nconst sessionId = ref(generateSessionId())\nconst todayStats = ref({\n  queries: 0,\n  patterns: 0,\n  improvement: 0,\n  cache_hit_rate: 0\n})\n\n// Generate session ID\nfunction generateSessionId() {\n  return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9)\n}\n\n// Format time\nconst formatTime = (timestamp) => {\n  const date = new Date(timestamp)\n  return date.toLocaleTimeString('it-IT', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  })\n}\n\n// Format message with markdown support\nconst formatMessage = (text) => {\n  // Convert markdown bold\n  text = text.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n  // Convert markdown italic\n  text = text.replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n  // Convert line breaks\n  text = text.replace(/\\n/g, '<br>')\n  // Convert bullet points\n  text = text.replace(/â€¢ /g, 'ðŸ”¸ ')\n\n  return text\n}\n\n// Scroll to bottom\nconst scrollToBottom = () => {\n  nextTick(() => {\n    if (messagesContainer.value) {\n      messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight\n    }\n  })\n}\n\n// Send quick message\nconst sendQuickMessage = (text) => {\n  inputMessage.value = text\n  sendMessage()\n}\n\n// Send feedback\nconst sendFeedback = async (messageIndex, feedbackType) => {\n  const message = messages.value[messageIndex]\n  if (!message || message.feedback) return\n\n  // Mark message with feedback\n  message.feedback = feedbackType\n\n  // If negative, prepare for reformulation detection\n  if (feedbackType === 'negative') {\n    isReformulating.value = true\n    setTimeout(() => {\n      isReformulating.value = false\n    }, 30000) // 30 seconds window for reformulation\n  }\n\n  // Show learning indicator\n  isLearning.value = true\n  setTimeout(() => {\n    isLearning.value = false\n  }, 3000)\n\n  try {\n    // Send feedback to API\n    await apiClient.post('/api/milhena/feedback', {\n      session_id: sessionId.value,\n      message_id: message.id || messageIndex,\n      query: messages.value[messageIndex - 1]?.content || '',\n      response: message.content,\n      feedback_type: feedbackType,\n      confidence: message.confidence,\n      timestamp: message.timestamp\n    })\n\n    toast.success(feedbackType === 'positive' ?\n                  'Grazie per il feedback positivo!' :\n                  'Grazie, userÃ² questo feedback per migliorare')\n  } catch (error) {\n    console.error('Feedback error:', error)\n  }\n}\n\n// Get reformulation suggestions\nconst getReformulationSuggestions = (message) => {\n  const suggestions = []\n\n  // Generate contextual suggestions based on the query\n  if (message.intent === 'ERRORS' || message.content.includes('error')) {\n    suggestions.push('Mostra solo gli errori critici di oggi')\n    suggestions.push('Quali processi hanno avuto problemi nelle ultime 24 ore?')\n  } else if (message.intent === 'METRICS' || message.content.includes('metric')) {\n    suggestions.push('Quante fatture sono state elaborate oggi?')\n    suggestions.push('Dammi le statistiche complete del sistema')\n  } else {\n    suggestions.push('Mostra lo stato generale del sistema')\n    suggestions.push('Ci sono problemi urgenti da risolvere?')\n  }\n\n  return suggestions\n}\n\n// Send message\nconst sendMessage = async () => {\n  if (!inputMessage.value.trim() || isLoading.value) return\n\n  const userMessage = {\n    role: 'user',\n    content: inputMessage.value,\n    timestamp: new Date(),\n    isReformulation: isReformulating.value\n  }\n\n  messages.value.push(userMessage)\n  const question = inputMessage.value\n  inputMessage.value = ''\n\n  // Check if this is a reformulation\n  let contextData = {\n    conversation_history: messages.value.slice(-10), // Last 10 messages\n    is_reformulation: isReformulating.value\n  }\n\n  if (isReformulating.value) {\n    // Find the last negative feedback message\n    const lastNegativeIndex = messages.value.findLastIndex(m => m.feedback === 'negative')\n    if (lastNegativeIndex >= 0) {\n      contextData.original_query = messages.value[lastNegativeIndex - 1]?.content || ''\n      contextData.failed_response = messages.value[lastNegativeIndex]?.content || ''\n    }\n    isReformulating.value = false\n  }\n\n  isLoading.value = true\n  isTyping.value = true\n  scrollToBottom()\n\n  const startTime = Date.now()\n\n  try {\n    // Call Milhena API via n8n endpoint (actual working endpoint)\n    const response = await apiClient.post('/api/n8n/agent/customer-support', {\n      message: question,\n      session_id: sessionId.value,\n      context: contextData\n    })\n\n    const latency = Date.now() - startTime\n    responseTime.value = latency\n\n    // Update accuracy if provided\n    if (response.data.system_accuracy) {\n      accuracy.value = Math.round(response.data.system_accuracy * 100)\n    }\n\n    // Add assistant response with all metadata\n    messages.value.push({\n      role: 'assistant',\n      content: response.data.response || response.data.message,\n      timestamp: new Date(),\n      confidence: response.data.confidence,\n      intent: response.data.intent,\n      latency: latency,\n      cached: response.data.cached || false,\n      learned: response.data.learned || false\n    })\n\n    // Update stats if learned something\n    if (response.data.learned) {\n      todayStats.value.patterns++\n    }\n\n  } catch (error) {\n    console.error('Chat error:', error)\n\n    // Fallback message\n    messages.value.push({\n      role: 'assistant',\n      content: error.response?.data?.message ||\n               'Mi dispiace, c\\'Ã¨ stato un problema. Riprova tra poco.',\n      timestamp: new Date(),\n      latency: Date.now() - startTime\n    })\n\n    toast.error('Errore nella comunicazione con Milhena')\n  } finally {\n    isLoading.value = false\n    isTyping.value = false\n    scrollToBottom()\n    todayStats.value.queries++\n  }\n}\n\n// Load learning stats\nconst loadLearningStats = async () => {\n  try {\n    const response = await apiClient.get('/api/milhena/learning/stats/today')\n    todayStats.value = response.data\n\n    // Update accuracy from stats\n    if (response.data.accuracy) {\n      accuracy.value = Math.round(response.data.accuracy * 100)\n    }\n  } catch (error) {\n    console.error('Failed to load learning stats:', error)\n  }\n}\n\n// Welcome message on mount\nonMounted(() => {\n  // Load learning stats\n  loadLearningStats()\n\n  // Refresh stats every 60 seconds\n  const statsInterval = setInterval(loadLearningStats, 60000)\n\n  // Optional: Add initial greeting\n  setTimeout(() => {\n    messages.value.push({\n      role: 'assistant',\n      content: 'Ciao! Sono Milhena v3.0 Learning Edition. Imparo dai tuoi feedback per migliorare continuamente. Come posso aiutarti oggi?',\n      timestamp: new Date(),\n      confidence: 1.0\n    })\n  }, 500)\n\n  // Cleanup on unmount\n  onBeforeUnmount(() => {\n    clearInterval(statsInterval)\n  })\n})\n</script>\n\n"],"names":["toast","useToast","messages","ref","inputMessage","isLoading","isTyping","isLearning","isReformulating","responseTime","accuracy","messagesContainer","sessionId","generateSessionId","todayStats","formatTime","timestamp","formatMessage","text","scrollToBottom","nextTick","sendQuickMessage","sendMessage","sendFeedback","messageIndex","feedbackType","message","apiClient","error","getReformulationSuggestions","suggestions","userMessage","question","contextData","lastNegativeIndex","m","startTime","response","latency","loadLearningStats","onMounted","statsInterval","onBeforeUnmount","_createBlock","MainLayout","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_unref","Icon","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","_cache","_hoisted_8","_hoisted_9","_openBlock","_createElementBlock","_hoisted_10","_hoisted_11","_hoisted_12","_Fragment","_renderList","index","_normalizeClass","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_20","_hoisted_21","_normalizeStyle","_hoisted_22","_hoisted_23","$event","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","suggestion","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_38","_hoisted_39","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49"],"mappings":"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"}