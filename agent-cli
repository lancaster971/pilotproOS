#!/bin/bash

# Agent Engine Interactive CLI
# Visualizza il lavoro degli agent, chat e risposte in tempo reale

echo ""
echo "╭──────────────────────────────────────────────────────────╮"
echo "│ 🤖  PilotProOS Agent Engine CLI                          │"
echo "│    Sistema Multi-Agent AI Interattivo                    │"
echo "╰──────────────────────────────────────────────────────────╯"
echo ""

# Check Docker
if ! docker info > /dev/null 2>&1; then
    echo "❌ Docker non è in esecuzione. Avvia Docker Desktop."
    exit 1
fi

# Check container
if ! docker ps | grep -q pilotpros-agent-engine-dev; then
    echo "🔄 Avvio container Agent Engine..."
    cd /Volumes/BK12/Dropbox/Dropbox/TIZIANO/AI/PilotProOS
    docker-compose up -d agent-engine-dev redis-dev
    echo "⏳ Attesa avvio servizi (10 secondi)..."
    sleep 10
fi

# Check worker
docker exec pilotpros-agent-engine-dev ps aux 2>/dev/null | grep -q "python worker.py" || {
    echo "🔄 Avvio worker in background..."
    docker exec -d pilotpros-agent-engine-dev sh -c "cd /app && python worker.py > /tmp/worker.log 2>&1"
    sleep 3
}

echo "✅ Sistema pronto!"
echo ""

# Menu
echo "Scegli modalità:"
echo "  1) CLI Interattiva - Chat e controllo completo"
echo "  2) Demo - Visualizza gli agent al lavoro"
echo "  3) Monitor - Osserva i job in tempo reale"
echo ""
read -p "Scelta (1-3): " choice

case $choice in
    1)
        echo ""
        echo "🚀 Avvio CLI Interattiva..."
        echo ""
        docker exec -it pilotpros-agent-engine-dev python /app/cli.py
        ;;
    2)
        echo ""
        echo "🎬 Avvio Demo..."
        echo ""
        docker exec pilotpros-agent-engine-dev python /app/cli_demo.py
        ;;
    3)
        echo ""
        echo "📊 Monitor Jobs..."
        echo ""
        docker exec pilotpros-agent-engine-dev python -c "
import asyncio
from cli import AgentCLI

async def monitor():
    cli = AgentCLI()
    await cli.initialize()
    while True:
        await cli.monitor_jobs()
        await asyncio.sleep(5)
        print('\n' + '='*60 + '\n')

asyncio.run(monitor())
"
        ;;
    *)
        echo "Scelta non valida"
        exit 1
        ;;
esac