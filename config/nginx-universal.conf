# PilotProOS Universal Nginx Configuration
# Supports both HTTP (development) and HTTPS (production/ngrok)
# Auto-adapts based on SSL certificate availability

# HTTP Server (always available)
server {
    listen 80;
    server_name _;
    
    # Development headers
    add_header X-Environment "Development-HTTP" always;
    
    # If SSL certificates exist, redirect to HTTPS
    # This will be dynamically enabled by setup script
    # include /app/config/ssl-redirect.conf;
    
    # ========================================================================
    # WEBHOOK & OAUTH ENDPOINTS (Must work on both HTTP and HTTPS)
    # ========================================================================
    
    # Webhook endpoint - PUBLIC ACCESS
    location /webhook/ {
        client_max_body_size 50M;
        
        proxy_pass http://pilotpros-n8n-dev:5678/webhook/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        
        # Microsoft OAuth compatibility
        proxy_redirect http://pilotpros-n8n-dev:5678/ $scheme://$http_host/;
        proxy_redirect http://localhost:5678/ $scheme://$http_host/;
        
        access_log /var/log/nginx/webhook-access.log;
    }
    
    # OAuth callback endpoint - PUBLIC ACCESS for Microsoft
    location /rest/ {
        proxy_pass http://pilotpros-n8n-dev:5678/rest/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Critical: OAuth redirects
        proxy_redirect http://pilotpros-n8n-dev:5678/ $scheme://$http_host/;
        proxy_redirect http://localhost:5678/ $scheme://$http_host/;
        
        access_log /var/log/nginx/oauth-access.log;
    }
    
    # ========================================================================
    # APPLICATION ENDPOINTS
    # ========================================================================
    
    # Frontend
    location / {
        proxy_pass http://pilotpros-frontend-dev:3000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for Vite HMR
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Backend API
    location /api/ {
        proxy_pass http://pilotpros-backend-dev:3001/api/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # n8n Admin (development)
    location /dev/n8n/ {
        proxy_pass http://pilotpros-n8n-dev:5678/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # OAuth URL fixes for admin interface
        proxy_redirect http://pilotpros-n8n-dev:5678/ $scheme://$http_host/dev/n8n/;
        proxy_redirect http://localhost:5678/ $scheme://$http_host/dev/n8n/;
    }
    
    # Health check
    location /health {
        proxy_pass http://pilotpros-backend-dev:3001/health;
        access_log off;
    }
    
    # Development status
    location /dev/status {
        default_type application/json;
        return 200 '{"status":"universal","ssl_available":"AUTO","webhook_url":"$scheme://$http_host/webhook/","oauth_callback":"$scheme://$http_host/rest/oauth2-credential/callback"}';
    }
}

# HTTPS Server (enabled when SSL certificates are available)
server {
    listen 443 ssl http2;
    server_name _;
    
    # SSL Configuration (will be populated by setup script)
    ssl_certificate /app/config/ssl/pilotpros-dev.crt;
    ssl_certificate_key /app/config/ssl/pilotpros-dev.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Development headers
    add_header X-Environment "Development-HTTPS" always;
    add_header Strict-Transport-Security "max-age=31536000" always;
    
    # ========================================================================
    # SAME CONFIGURATION AS HTTP (DRY Principle)
    # ========================================================================
    
    # Include same location blocks as HTTP server
    include /etc/nginx/conf.d/locations-common.conf;
}

# Error handling
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;