{
  "name": "pilotpros-operating-system",
  "version": "1.0.0",
  "description": "PilotProOS - Business Process Operating System",
  "main": "backend/src/server.js",
  "type": "module",
  "scripts": {
    "dev": "docker-compose up -d",
    "setup": "npm run install:all",
    "reset": "npm run docker:clean && npm run install:all",
    "docker:stop": "docker-compose down",
    "docker:reset": "echo '⚠️ ATTENZIONE: docker:reset cancella tutti i dati! Usa docker:reset-safe per backup automatico o docker:restart per riavvio sicuro' && exit 1",
    "docker:reset-safe": "npm run docker:backup && docker-compose down -v && npm run dev",
    "docker:restart": "docker-compose restart",
    "docker:logs": "docker-compose logs -f",
    "docker:psql": "docker-compose exec postgres-dev psql -U pilotpros_user -d pilotpros_db",
    "docker:clean": "docker-compose down -v --rmi all --remove-orphans",
    "docker:backup": "docker run --rm -v pilotpros_postgres_dev_data:/data -v $(pwd):/backup ubuntu tar czf /backup/postgres-volume-$(date +%Y%m%d-%H%M%S).tar.gz /data && docker run --rm -v pilotpros_n8n_dev_data:/data -v $(pwd):/backup ubuntu tar czf /backup/n8n-volume-$(date +%Y%m%d-%H%M%S).tar.gz /data",
    "docker:backup-safe": "npm run docker:backup && echo '✅ Backup completato - ora puoi eseguire operazioni distruttive'",
    "n8n:auto-setup": "echo '⚠️ Use Docker containers only - no host Node.js'",
    "import:backup": "echo '⚠️ Use Docker exec for database operations'",
    "export:backup": "echo '⚠️ Use Docker exec for database operations'",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "npm run start:all",
    "start:all": "concurrently \"npm run start:backend\" \"npm run start:n8n\"",
    "start:backend": "cd backend && npm start",
    "milhena:start": "./scripts/start-milhena.sh",
    "milhena:stop": "docker-compose stop milhena-agent-dev milhena-ollama",
    "milhena:logs": "docker-compose logs -f milhena-agent-dev",
    "start:n8n": "./start-n8n-postgres.sh",
    "install:all": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "deploy:client": "echo '⚠️ Use Docker-based deployment only'",
    "package:client": "echo '⚠️ Use Docker-based packaging only'",
    "build:image": "echo '⚠️ Use Docker build commands only'",
    "deploy:scripts": "./scripts/deploy-client.sh",
    "deploy:quick": "./scripts/01-system-setup.sh && ./scripts/02-application-deploy.sh && ./scripts/03-security-hardening.sh && ./scripts/04-workflow-automation.sh",
    "test": "npm run test:docker",
    "test:docker": "docker-compose exec backend-dev npm test",
    "test:backend": "docker-compose exec backend-dev npm test",
    "test:frontend": "docker-compose exec frontend-dev npm test",
    "test:integration": "docker-compose exec backend-dev npm run test:integration",
    "team:export": "node scripts/team-export.js",
    "team:import": "node scripts/team-import.js",
    "team:sync": "npm run team:export && echo '\n🔄 Ora chiedi al collega di eseguire: npm run team:import'"
  },
  "dependencies": {
    "concurrently": "^7.6.0",
    "cross-env": "^7.0.3",
    "dotenv": "^17.2.1",
    "n8n": "^1.107.3",
    "pg": "^8.16.3",
    "sqlite3": "^5.1.7"
  },
  "devDependencies": {
    "chalk": "^5.6.0",
    "commander": "^11.1.0",
    "ora": "^7.0.1"
  },
  "workspaces": [
    "backend",
    "frontend"
  ],
  "keywords": [
    "business-automation",
    "workflow-os",
    "process-automation",
    "enterprise-appliance",
    "ai-assistant",
    "containerized-platform",
    "plug-and-play",
    "smb-automation"
  ],
  "author": "PilotPro Team",
  "license": "Commercial",
  "repository": {
    "type": "git",
    "url": "https://github.com/pilotpro/pilotpros.git"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}
