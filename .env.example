# ===============================================================================
# PilotProOS Environment Configuration - COMPLETE TEMPLATE
# ===============================================================================
# Copy questo file in .env e modifica i valori per il tuo ambiente
# Last Updated: 2025-01-18
# ===============================================================================

# ===============================================================================
# SERVER CONFIGURATION
# ===============================================================================

# Backend Server
PORT=3001                              # Backend API port (default: 3001)
HOST=127.0.0.1                        # Backend host (default: 127.0.0.1)
NODE_ENV=development                   # Environment: development|staging|production

# Frontend Server
VITE_PORT=3000                        # Frontend dev server port (default: 3000)
VITE_HOST=localhost                   # Frontend host
VITE_API_URL=http://localhost:3001   # Backend API URL for frontend

# ===============================================================================
# DATABASE CONFIGURATION
# ===============================================================================

DB_HOST=localhost                     # PostgreSQL host
DB_PORT=5432                         # PostgreSQL port
DB_NAME=pilotpros_db                 # Database name
DB_USER=pilotpros_user               # Database user
DB_PASSWORD=pilotpros_secure_pass_2025  # Database password
DB_SSL=false                         # Enable SSL for database connection
DB_POOL_SIZE=20                      # Connection pool size
DB_IDLE_TIMEOUT=30000               # Idle timeout in milliseconds
DB_CONNECTION_TIMEOUT=5000          # Connection timeout in milliseconds

# ===============================================================================
# N8N AUTOMATION ENGINE
# ===============================================================================

N8N_URL=http://localhost:5678        # n8n instance URL
N8N_API_KEY=your_n8n_api_key_here   # n8n API key (if configured)
N8N_ADMIN_USER=admin                 # n8n admin username
N8N_ADMIN_PASSWORD=pilotpros_admin_2025  # n8n admin password
N8N_USER=admin                       # n8n user for operations
N8N_PASSWORD=pilotpros_admin_2025   # n8n user password
VITE_N8N_URL=http://localhost:5678  # n8n URL for frontend iframe

# ===============================================================================
# CORS & SECURITY
# ===============================================================================

# CORS Origins (comma-separated for multiple)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:5173
FRONTEND_URL=http://localhost:3000   # Primary frontend URL

# Session & Authentication
SESSION_SECRET=your_session_secret_here_min_32_chars  # Session secret (min 32 chars)
JWT_SECRET=your_jwt_secret_here_min_32_chars         # JWT secret (min 32 chars)
JWT_EXPIRES_IN=7d                    # JWT expiration (e.g., 1h, 24h, 7d)
REFRESH_TOKEN_SECRET=your_refresh_secret_min_32_chars # Refresh token secret
REFRESH_TOKEN_EXPIRES_IN=30d        # Refresh token expiration

# ===============================================================================
# COMPANY BRANDING
# ===============================================================================

COMPANY_NAME=PilotProOS              # Company/Product name
DOMAIN=localhost                     # Domain for production
APP_TITLE="PilotPro OS"             # Application title
APP_DESCRIPTION="Business Process Operating System"  # App description

# ===============================================================================
# ERROR NOTIFICATION SYSTEM (Optional)
# ===============================================================================

# Email Notifications
SUPPORT_EMAIL_USER=support@yourdomain.com     # Support email address
SUPPORT_EMAIL_PASS=your_app_password_here     # Email app password
SUPPORT_EMAIL_TO=support@yourdomain.com,dev@yourdomain.com  # Recipients
SMTP_HOST=smtp.gmail.com            # SMTP server
SMTP_PORT=587                        # SMTP port
SMTP_SECURE=false                    # Use TLS

# Webhook Notifications
ERROR_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
WEBHOOK_TIMEOUT=5000                 # Webhook timeout in ms

# ===============================================================================
# MONITORING & PERFORMANCE
# ===============================================================================

# Logging
LOG_LEVEL=info                       # Log level: error|warn|info|debug
LOG_FORMAT=json                      # Log format: json|pretty
LOG_TO_FILE=false                    # Enable file logging
LOG_FILE_PATH=./logs/app.log        # Log file path

# Performance
ENABLE_METRICS=true                  # Enable performance metrics
METRICS_PORT=9090                   # Metrics endpoint port
REQUEST_TIMEOUT=30000               # Default request timeout in ms
MAX_REQUEST_SIZE=10mb               # Maximum request body size

# Rate Limiting
RATE_LIMIT_ENABLED=false            # Enable rate limiting
RATE_LIMIT_WINDOW_MS=60000          # Rate limit window (1 minute)
RATE_LIMIT_MAX_REQUESTS=100         # Max requests per window

# ===============================================================================
# CACHE CONFIGURATION (Redis - Optional)
# ===============================================================================

CACHE_TTL=3600                      # Default cache TTL in seconds

# ===============================================================================
# BUSINESS INTELLIGENCE
# ===============================================================================

BI_ENABLED=true                      # Enable Business Intelligence features
BI_CACHE_DURATION=300000            # BI cache duration in ms (5 minutes)
BI_MAX_TIMELINE_ITEMS=1000          # Max timeline items to process
BI_PATTERN_ANALYSIS_ENABLED=true    # Enable pattern analysis

# ===============================================================================
# FEATURE FLAGS
# ===============================================================================

FEATURE_TIMELINE=true                # Enable Timeline feature
FEATURE_AI_ANALYSIS=false           # Enable AI analysis (requires Ollama)
FEATURE_EXCEL_EXPORT=false          # Enable Excel export
FEATURE_MFA=false                   # Enable Multi-Factor Authentication
FEATURE_LDAP=false                  # Enable LDAP authentication

# ===============================================================================
# DEVELOPMENT TOOLS
# ===============================================================================

# Hot Reload
VITE_HMR_PORT=3000                  # Vite HMR port
VITE_HMR_HOST=localhost             # Vite HMR host

# Debug
DEBUG=false                         # Enable debug mode
DEBUG_SQL=false                     # Log SQL queries
DEBUG_PERFORMANCE=false             # Log performance metrics

# ===============================================================================
# DOCKER CONFIGURATION (for docker-compose)
# ===============================================================================

DOCKER_NETWORK=pilotpros_network    # Docker network name
DOCKER_POSTGRES_VOLUME=postgres_data # PostgreSQL volume name
DOCKER_N8N_VOLUME=n8n_data          # n8n volume name

# ===============================================================================
# BACKUP & RECOVERY
# ===============================================================================

BACKUP_ENABLED=false                 # Enable automatic backups
BACKUP_SCHEDULE="0 2 * * *"        # Backup schedule (cron format)
BACKUP_RETENTION_DAYS=30            # Backup retention period
BACKUP_PATH=./backups               # Backup storage path

# ===============================================================================
# NOTES
# ===============================================================================
# 1. Generate secure secrets: openssl rand -hex 32
# 2. In production, use environment-specific .env files
# 3. Never commit .env files to version control
# 4. Use Docker secrets for sensitive production values
# 5. Enable SSL/TLS in production environments
# ===============================================================================