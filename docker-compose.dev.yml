version: '3.8'

services:
  # PostgreSQL Database per Sviluppo
  postgres-dev:
    image: postgres:16-alpine
    container_name: pilotpros-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: pilotpros_db
      POSTGRES_USER: pilotpros_user
      POSTGRES_PASSWORD: pilotpros_secure_pass_2025
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init-dev:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
      - ./BU_Hostinger:/imports  # Per importare backup esistenti
    ports:
      - "5432:5432"
    networks:
      - pilotpros-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pilotpros_user -d pilotpros_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      postgres -c log_statement=all
               -c log_destination=stderr
               -c logging_collector=on
               -c max_connections=200
               -c shared_buffers=256MB

  # n8n Workflow Engine - Development
  n8n-dev:
    image: n8n/n8n:1.106.3
    container_name: pilotpros-n8n-dev
    restart: unless-stopped
    depends_on:
      postgres-dev:
        condition: service_healthy
    environment:
      # PostgreSQL Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres-dev
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: pilotpros_db
      DB_POSTGRESDB_USER: pilotpros_user
      DB_POSTGRESDB_PASSWORD: pilotpros_secure_pass_2025
      DB_POSTGRESDB_SCHEMA: n8n
      DB_POSTGRESDB_POOL_SIZE: 10
      DB_POSTGRESDB_SSL_MODE: disable
      
      # n8n Server Configuration
      N8N_PORT: 5678
      N8N_HOST: 0.0.0.0
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: pilotpros_admin_2025
      
      # Development-specific
      N8N_LOG_LEVEL: debug
      N8N_LOG_OUTPUT: console
      
      # Webhooks
      WEBHOOK_URL: http://localhost:5678
      N8N_PAYLOAD_SIZE_MAX: 16
      
      # Performance (development tuned)
      EXECUTIONS_TIMEOUT: 300
      EXECUTIONS_TIMEOUT_MAX: 3600
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: all  # Save all in dev for debugging
      EXECUTIONS_DATA_MAX_AGE: 168  # 1 week in dev
      
      # Features
      N8N_METRICS: true
      
      # Privacy (relaxed in dev)
      N8N_DIAGNOSTICS_ENABLED: false
      N8N_VERSION_NOTIFICATIONS_ENABLED: false
      N8N_ANONYMOUS_TELEMETRY: false
      N8N_PERSONALIZATION_ENABLED: true  # Enabled in dev
      
      # Security (relaxed for dev)
      N8N_SECURE_COOKIE: false
      N8N_COOKIE_SAME_SITE: lax
      
      # Binary Data
      N8N_DEFAULT_BINARY_DATA_MODE: filesystem
      
      # UI (development friendly)
      N8N_HIDE_USAGE_PAGE: false
      N8N_TEMPLATES_ENABLED: true  # Templates enabled in dev
      
      # Task Runners (v1.106.3)
      N8N_RUNNERS_ENABLED: true
      
      # Development editor settings
      N8N_EDITOR_BASE_URL: http://localhost:5678
      
    volumes:
      - n8n_dev_data:/home/node/.n8n
      - ./logs/n8n-dev:/var/log/n8n
      - ./BU_Hostinger:/imports  # Per accesso diretto ai backup
    ports:
      - "5678:5678"
      - "5679:5679"  # Task runners port
    networks:
      - pilotpros-dev
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API - Development with Hot Reload
  backend-dev:
    build:
      context: ./backend
      dockerfile: ../docker/backend-dev.Dockerfile
    container_name: pilotpros-backend-dev
    restart: unless-stopped
    depends_on:
      postgres-dev:
        condition: service_healthy
      n8n-dev:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 3001
      HOST: 0.0.0.0
      
      # PostgreSQL Connection
      DB_HOST: postgres-dev
      DB_PORT: 5432
      DB_NAME: pilotpros_db
      DB_USER: pilotpros_user
      DB_PASSWORD: pilotpros_secure_pass_2025
      
      # n8n Integration
      N8N_URL: http://n8n-dev:5678
      N8N_ADMIN_USER: admin
      N8N_ADMIN_PASSWORD: pilotpros_admin_2025
      
      # Security (development)
      JWT_SECRET: pilotpros_dev_jwt_secret_2025
      BCRYPT_ROUNDS: 4  # Faster in development
      
      # Development specific
      DEBUG: "pilotpros:*"
      LOG_LEVEL: debug
      
    volumes:
      - ./backend:/app
      - ./logs/backend-dev:/app/logs
      - /app/node_modules  # Anonymous volume for node_modules
    ports:
      - "3001:3001"
    networks:
      - pilotpros-dev
    command: npm run dev  # Uses nodemon for hot reload

  # Frontend Development Server with Hot Reload
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend-dev.Dockerfile
    container_name: pilotpros-frontend-dev
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_N8N_URL: http://localhost:5678
      VITE_APP_NAME: PilotProOS Development
      VITE_NODE_ENV: development
      CHOKIDAR_USEPOLLING: true  # For file watching in containers
      
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    ports:
      - "3000:3000"
    networks:
      - pilotpros-dev
    depends_on:
      - backend-dev
    command: npm run dev -- --host 0.0.0.0

  # AI Agent MCP - Development
  ai-agent-dev:
    build:
      context: ./ai-agent
      dockerfile: ../docker/ai-agent-dev.Dockerfile
    container_name: pilotpros-ai-agent-dev
    restart: unless-stopped
    depends_on:
      postgres-dev:
        condition: service_healthy
      n8n-dev:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 3002
      
      # Database
      DB_HOST: postgres-dev
      DB_PORT: 5432
      DB_NAME: pilotpros_db
      DB_USER: pilotpros_user
      DB_PASSWORD: pilotpros_secure_pass_2025
      
      # n8n Integration
      N8N_URL: http://n8n-dev:5678
      N8N_ADMIN_USER: admin
      N8N_ADMIN_PASSWORD: pilotpros_admin_2025
      
      # Development
      DEBUG: "mcp:*"
      LOG_LEVEL: debug
      
    volumes:
      - ./ai-agent:/app
      - ./logs/ai-agent-dev:/app/logs
      - /app/node_modules
    ports:
      - "3002:3002"
    networks:
      - pilotpros-dev
    command: npm run dev

  # Database Administration Tool (development only)
  pgadmin-dev:
    image: dpage/pgadmin4:latest
    container_name: pilotpros-pgadmin-dev
    restart: unless-stopped
    depends_on:
      postgres-dev:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pilotpros.dev
      PGADMIN_DEFAULT_PASSWORD: pilotpros_admin_2025
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - pilotpros-dev
    profiles:
      - tools  # Solo quando esplicitamente richiesto

networks:
  pilotpros-dev:
    driver: bridge
    name: pilotpros-development

volumes:
  postgres_dev_data:
    name: pilotpros_postgres_dev_data
  n8n_dev_data:
    name: pilotpros_n8n_dev_data
  pgadmin_dev_data:
    name: pilotpros_pgadmin_dev_data