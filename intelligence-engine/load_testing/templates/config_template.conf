# üéØ TEMPLATE: Load Testing Configuration
# ========================================
#
# Template di configurazione riutilizzabile per load testing multi-agent LLM systems
# Adatta questo file per nuovi progetti modificando le sezioni marcate con # TODO
#
# Basato su: PilotProOS Intelligence Engine Load Testing Framework v1.0.0
# Documentazione: LOAD_TESTING_FRAMEWORK.md

# TODO: UPDATE TARGET SYSTEM
host = http://localhost:8000  # TODO: Change to your system URL

# ============================================================================
# SCENARIO CONFIGURATIONS
# ============================================================================

# üè† Single Tenant Configuration (1-10 users)
# Perfect for: Single customer deployments
# TODO: Adjust for your single tenant scenario
[single_tenant]
users = 10
spawn-rate = 2
run-time = 5m
# Performance targets for single tenant
p95_threshold_ms = 10000  # 10 seconds acceptable for complex AI
p99_threshold_ms = 15000  # 15 seconds max
error_threshold_percent = 1.0

# üè¢ Multi Tenant Configuration (100-500 users)
# Perfect for: SaaS platforms with multiple customers
# TODO: Adjust for your multi-tenant scenario
[multi_tenant]
users = 200
spawn-rate = 20
run-time = 10m
# Performance targets for multi-tenant
p95_threshold_ms = 5000   # 5 seconds for SaaS
p99_threshold_ms = 8000   # 8 seconds max
error_threshold_percent = 0.5

# üè≠ Enterprise Configuration (1000+ users)
# Perfect for: Large corporation deployments
# TODO: Adjust for your enterprise scenario
[enterprise]
users = 1000
spawn-rate = 50
run-time = 15m
# Performance targets for enterprise
p95_threshold_ms = 2000   # 2 seconds enterprise SLA
p99_threshold_ms = 3000   # 3 seconds max
error_threshold_percent = 0.1

# ‚ö° High Frequency Configuration (50-100 users, low latency)
# Perfect for: Trading, fintech, real-time systems
# TODO: Adjust for your high-frequency scenario
[high_frequency]
users = 50
spawn-rate = 25
run-time = 30m
# Performance targets for high frequency
p95_threshold_ms = 500    # 500ms for trading systems
p99_threshold_ms = 1000   # 1 second absolute max
error_threshold_percent = 0.01

# ============================================================================
# DOMAIN-SPECIFIC CONFIGURATIONS
# ============================================================================

# üõí E-commerce Configuration
# TODO: Uncomment and adjust if building e-commerce system
# [ecommerce]
# users = 100
# spawn-rate = 10
# run-time = 10m
# p95_threshold_ms = 3000
# p99_threshold_ms = 5000
# error_threshold_percent = 0.2

# üí∞ Finance Configuration
# TODO: Uncomment and adjust if building finance system
# [finance]
# users = 200
# spawn-rate = 25
# run-time = 15m
# p95_threshold_ms = 1000
# p99_threshold_ms = 2000
# error_threshold_percent = 0.05

# üè• Healthcare Configuration
# TODO: Uncomment and adjust if building healthcare system
# [healthcare]
# users = 50
# spawn-rate = 5
# run-time = 20m
# p95_threshold_ms = 4000
# p99_threshold_ms = 7000
# error_threshold_percent = 0.1

# üìö Education Configuration
# TODO: Uncomment and adjust if building education system
# [education]
# users = 300
# spawn-rate = 30
# run-time = 12m
# p95_threshold_ms = 3000
# p99_threshold_ms = 6000
# error_threshold_percent = 0.3

# ============================================================================
# OUTPUT & REPORTING CONFIGURATION
# ============================================================================

# TODO: Update paths if needed
html = ./reports/load_test_report.html
csv = ./reports/load_test_results
csv-full-history = true
print-stats = true
only-summary = false

# Web UI Configuration (for interactive monitoring)
web-host = 0.0.0.0
web-port = 8089

# Headless Mode (for CI/CD automation)
# headless = true              # Uncomment for automated testing

# Logging Configuration
loglevel = INFO
logfile = ./logs/locust.log

# ============================================================================
# PERFORMANCE & SCALING CONFIGURATION
# ============================================================================

# Enterprise Monitoring Integration
# TODO: Update tags for your project
tags = environment:production,service:your-service,version:v1.0  # TODO: Update service name

# Stop Conditions (fail-safe for enterprise)
stop-timeout = 30              # Grace period before force stop
reset-stats = false            # Keep stats for analysis

# Advanced Configuration
max-request-workers = 100      # Max concurrent HTTP workers
connection-timeout = 10        # HTTP connection timeout (seconds)
network-timeout = 30           # Network operation timeout (seconds)

# Memory Management (for long-running tests)
stats-history-enabled = true
max-stats-entries = 10000

# ============================================================================
# DISTRIBUTED TESTING CONFIGURATION
# ============================================================================
# Use for scaling beyond single machine limits

# TODO: Uncomment for distributed testing
# processes = 4                 # Use 4 worker processes
# expect-workers = 4            # Wait for 4 workers in headless mode

# For multi-machine distributed testing:
# On master machine:
# locust --master --master-host=0.0.0.0 --master-port=5557

# On worker machines:
# locust --worker --master-host=<master-ip> --master-port=5557

# ============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ============================================================================

# Development Environment
# TODO: Update for your development setup
[development]
host = http://localhost:8000    # TODO: Your dev environment URL
users = 5
spawn-rate = 1
run-time = 2m

# Staging Environment
# TODO: Update for your staging setup
[staging]
host = http://staging.yourproject.com  # TODO: Your staging URL
users = 50
spawn-rate = 10
run-time = 10m

# Production Environment
# TODO: Update for your production setup
[production]
host = https://api.yourproject.com     # TODO: Your production URL
users = 200
spawn-rate = 20
run-time = 15m

# ============================================================================
# CUSTOM ENVIRONMENT VARIABLES
# ============================================================================
# Set via environment or override here

# TODO: Update these for your project
# TARGET_HOST = http://localhost:8000           # TODO: Your default host
# PROMETHEUS_GATEWAY = http://localhost:9091    # TODO: Your Prometheus gateway
# TEST_ENVIRONMENT = production                 # TODO: Your environment
# PROJECT_NAME = your_project                   # TODO: Your project name

# ============================================================================
# MONITORING & ALERTING INTEGRATION
# ============================================================================

# Prometheus Integration (if available)
# TODO: Update metric prefixes for your project
# prometheus_prefix = your_project_              # TODO: Your metric prefix
# prometheus_port = 9090                        # TODO: Your Prometheus port

# Grafana Integration (if available)
# TODO: Update dashboard settings
# grafana_url = http://localhost:3000           # TODO: Your Grafana URL
# grafana_dashboard_id = your-dashboard         # TODO: Your dashboard ID

# Slack/Discord Notifications (optional)
# TODO: Add your notification webhooks
# slack_webhook = https://hooks.slack.com/...   # TODO: Your Slack webhook
# discord_webhook = https://discord.com/...     # TODO: Your Discord webhook

# ============================================================================
# BUSINESS LOGIC CONFIGURATION
# ============================================================================

# Business Rules Validation (if applicable)
# TODO: Update for your business domain
[business_rules]
# Example: forbidden terms that shouldn't appear in responses
forbidden_terms = error,exception,traceback,stacktrace  # TODO: Update for your domain

# Example: required terms that should appear in successful responses
required_terms = success,completed,processed            # TODO: Update for your domain

# Response validation rules
min_response_length = 10        # TODO: Minimum valid response length
max_response_length = 10000     # TODO: Maximum valid response length

# Security validation
check_for_leaks = true          # TODO: Enable if you need security leak detection
security_scan_enabled = false   # TODO: Enable for security testing

# ============================================================================
# LOAD PATTERN CONFIGURATION
# ============================================================================

# Custom Load Shapes (advanced)
# TODO: Define custom load patterns for your use case

[load_patterns]
# Steady load (default)
pattern_type = steady

# Spike testing
# pattern_type = spike
# spike_duration = 2m
# spike_users = 500

# Step load
# pattern_type = step
# step_duration = 5m
# step_users = 50

# Wave load
# pattern_type = wave
# wave_duration = 10m
# wave_amplitude = 100

# ============================================================================
# TEST DATA CONFIGURATION
# ============================================================================

# Test Data Sources
# TODO: Configure your test data sources
[test_data]
# User data source
user_data_file = ./test_data/users.json          # TODO: Path to your user data

# Query data source
query_data_file = ./test_data/queries.json       # TODO: Path to your query data

# Product/Entity data source
entity_data_file = ./test_data/entities.json     # TODO: Path to your entity data

# Randomization settings
randomize_users = true          # TODO: Enable user randomization
randomize_queries = true        # TODO: Enable query randomization
random_seed = 42               # TODO: Set for reproducible tests

# ============================================================================
# NOTES & DOCUMENTATION
# ============================================================================

# Performance Baseline Notes:
# TODO: Document your baseline performance expectations
# - Single user response time: ___ms
# - 10 users response time: ___ms
# - 100 users response time: ___ms
# - Error rate baseline: ___%
# - Throughput baseline: ___RPS

# System Resource Notes:
# TODO: Document your system resource limits
# - CPU limit: ___cores
# - Memory limit: ___GB
# - Database connections: ___
# - API rate limits: ___req/min

# Business Context Notes:
# TODO: Document your business requirements
# - Peak usage hours: ___
# - Expected user growth: ___%
# - Critical user journeys: ___
# - SLA requirements: ___ms

# ============================================================================
# VERSION & MAINTENANCE
# ============================================================================

# Configuration Version
config_version = 1.0.0                           # TODO: Update when you modify
last_updated = 2025-09-29                       # TODO: Update modification date
updated_by = PilotProOS_Team                    # TODO: Update your team name
project_name = YOUR_PROJECT_NAME                # TODO: Update your project name

# Maintenance Schedule
# TODO: Define your maintenance schedule
# - Daily smoke tests: 5 users, 1 minute
# - Weekly load tests: 50 users, 10 minutes
# - Monthly stress tests: 200 users, 20 minutes
# - Pre-release peak tests: 500 users, 30 minutes